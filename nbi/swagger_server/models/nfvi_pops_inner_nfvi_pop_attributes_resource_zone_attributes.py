# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.nfvi_pops_inner_nfvi_pop_attributes_cpu_resource_attributes import NfviPopsInnerNfviPopAttributesCpuResourceAttributes  # noqa: F401,E501
from swagger_server.models.nfvi_pops_inner_nfvi_pop_attributes_memory_resource_attributes import NfviPopsInnerNfviPopAttributesMemoryResourceAttributes  # noqa: F401,E501
from swagger_server.models.nfvi_pops_inner_nfvi_pop_attributes_storage_resource_attributes import NfviPopsInnerNfviPopAttributesStorageResourceAttributes  # noqa: F401,E501
from swagger_server import util


class NfviPopsInnerNfviPopAttributesResourceZoneAttributes(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, zone_id: str=None, zone_name: str=None, zone_state: str=None, zone_property: str=None, metadata: str=None, memory_resource_attributes: NfviPopsInnerNfviPopAttributesMemoryResourceAttributes=None, cpu_resource_attributes: NfviPopsInnerNfviPopAttributesCpuResourceAttributes=None, storage_resource_attributes: NfviPopsInnerNfviPopAttributesStorageResourceAttributes=None):  # noqa: E501
        """NfviPopsInnerNfviPopAttributesResourceZoneAttributes - a model defined in Swagger

        :param zone_id: The zone_id of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.  # noqa: E501
        :type zone_id: str
        :param zone_name: The zone_name of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.  # noqa: E501
        :type zone_name: str
        :param zone_state: The zone_state of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.  # noqa: E501
        :type zone_state: str
        :param zone_property: The zone_property of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.  # noqa: E501
        :type zone_property: str
        :param metadata: The metadata of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.  # noqa: E501
        :type metadata: str
        :param memory_resource_attributes: The memory_resource_attributes of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.  # noqa: E501
        :type memory_resource_attributes: NfviPopsInnerNfviPopAttributesMemoryResourceAttributes
        :param cpu_resource_attributes: The cpu_resource_attributes of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.  # noqa: E501
        :type cpu_resource_attributes: NfviPopsInnerNfviPopAttributesCpuResourceAttributes
        :param storage_resource_attributes: The storage_resource_attributes of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.  # noqa: E501
        :type storage_resource_attributes: NfviPopsInnerNfviPopAttributesStorageResourceAttributes
        """
        self.swagger_types = {
            'zone_id': str,
            'zone_name': str,
            'zone_state': str,
            'zone_property': str,
            'metadata': str,
            'memory_resource_attributes': NfviPopsInnerNfviPopAttributesMemoryResourceAttributes,
            'cpu_resource_attributes': NfviPopsInnerNfviPopAttributesCpuResourceAttributes,
            'storage_resource_attributes': NfviPopsInnerNfviPopAttributesStorageResourceAttributes
        }

        self.attribute_map = {
            'zone_id': 'zoneId',
            'zone_name': 'zoneName',
            'zone_state': 'zoneState',
            'zone_property': 'zoneProperty',
            'metadata': 'metadata',
            'memory_resource_attributes': 'memoryResourceAttributes',
            'cpu_resource_attributes': 'cpuResourceAttributes',
            'storage_resource_attributes': 'storageResourceAttributes'
        }

        self._zone_id = zone_id
        self._zone_name = zone_name
        self._zone_state = zone_state
        self._zone_property = zone_property
        self._metadata = metadata
        self._memory_resource_attributes = memory_resource_attributes
        self._cpu_resource_attributes = cpu_resource_attributes
        self._storage_resource_attributes = storage_resource_attributes

    @classmethod
    def from_dict(cls, dikt) -> 'NfviPopsInnerNfviPopAttributesResourceZoneAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NfviPops_inner_nfviPopAttributes_resourceZoneAttributes of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.  # noqa: E501
        :rtype: NfviPopsInnerNfviPopAttributesResourceZoneAttributes
        """
        return util.deserialize_model(dikt, cls)

    @property
    def zone_id(self) -> str:
        """Gets the zone_id of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.

        The identifier of the Resource Zone.  # noqa: E501

        :return: The zone_id of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.
        :rtype: str
        """
        return self._zone_id

    @zone_id.setter
    def zone_id(self, zone_id: str):
        """Sets the zone_id of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.

        The identifier of the Resource Zone.  # noqa: E501

        :param zone_id: The zone_id of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.
        :type zone_id: str
        """
        if zone_id is None:
            raise ValueError("Invalid value for `zone_id`, must not be `None`")  # noqa: E501

        self._zone_id = zone_id

    @property
    def zone_name(self) -> str:
        """Gets the zone_name of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.

        The name of the Resource Zone.  # noqa: E501

        :return: The zone_name of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.
        :rtype: str
        """
        return self._zone_name

    @zone_name.setter
    def zone_name(self, zone_name: str):
        """Sets the zone_name of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.

        The name of the Resource Zone.  # noqa: E501

        :param zone_name: The zone_name of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.
        :type zone_name: str
        """
        if zone_name is None:
            raise ValueError("Invalid value for `zone_name`, must not be `None`")  # noqa: E501

        self._zone_name = zone_name

    @property
    def zone_state(self) -> str:
        """Gets the zone_state of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.

        Information about the current state of the Resource Zone, e.g. if the Resource Zone is available.  # noqa: E501

        :return: The zone_state of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.
        :rtype: str
        """
        return self._zone_state

    @zone_state.setter
    def zone_state(self, zone_state: str):
        """Sets the zone_state of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.

        Information about the current state of the Resource Zone, e.g. if the Resource Zone is available.  # noqa: E501

        :param zone_state: The zone_state of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.
        :type zone_state: str
        """
        if zone_state is None:
            raise ValueError("Invalid value for `zone_state`, must not be `None`")  # noqa: E501

        self._zone_state = zone_state

    @property
    def zone_property(self) -> str:
        """Gets the zone_property of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.

        Set of properties that define the capabilities associated to the Resource Zone. Examples of capabilities may include: support of certain compute resource types (e.g. low performance, acceleration capabilities, etc. association to certain NFVI-PoP physical segregation (e.g. different power or network sub-systems, availability of redundancy power sub-systems), etc.  # noqa: E501

        :return: The zone_property of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.
        :rtype: str
        """
        return self._zone_property

    @zone_property.setter
    def zone_property(self, zone_property: str):
        """Sets the zone_property of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.

        Set of properties that define the capabilities associated to the Resource Zone. Examples of capabilities may include: support of certain compute resource types (e.g. low performance, acceleration capabilities, etc. association to certain NFVI-PoP physical segregation (e.g. different power or network sub-systems, availability of redundancy power sub-systems), etc.  # noqa: E501

        :param zone_property: The zone_property of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.
        :type zone_property: str
        """
        if zone_property is None:
            raise ValueError("Invalid value for `zone_property`, must not be `None`")  # noqa: E501

        self._zone_property = zone_property

    @property
    def metadata(self) -> str:
        """Gets the metadata of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.

        List of metadata key-value pairs used to associate meaningful metadata to the NFVI-PoP Zone.  # noqa: E501

        :return: The metadata of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.
        :rtype: str
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata: str):
        """Sets the metadata of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.

        List of metadata key-value pairs used to associate meaningful metadata to the NFVI-PoP Zone.  # noqa: E501

        :param metadata: The metadata of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.
        :type metadata: str
        """
        if metadata is None:
            raise ValueError("Invalid value for `metadata`, must not be `None`")  # noqa: E501

        self._metadata = metadata

    @property
    def memory_resource_attributes(self) -> NfviPopsInnerNfviPopAttributesMemoryResourceAttributes:
        """Gets the memory_resource_attributes of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.


        :return: The memory_resource_attributes of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.
        :rtype: NfviPopsInnerNfviPopAttributesMemoryResourceAttributes
        """
        return self._memory_resource_attributes

    @memory_resource_attributes.setter
    def memory_resource_attributes(self, memory_resource_attributes: NfviPopsInnerNfviPopAttributesMemoryResourceAttributes):
        """Sets the memory_resource_attributes of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.


        :param memory_resource_attributes: The memory_resource_attributes of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.
        :type memory_resource_attributes: NfviPopsInnerNfviPopAttributesMemoryResourceAttributes
        """
        if memory_resource_attributes is None:
            raise ValueError("Invalid value for `memory_resource_attributes`, must not be `None`")  # noqa: E501

        self._memory_resource_attributes = memory_resource_attributes

    @property
    def cpu_resource_attributes(self) -> NfviPopsInnerNfviPopAttributesCpuResourceAttributes:
        """Gets the cpu_resource_attributes of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.


        :return: The cpu_resource_attributes of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.
        :rtype: NfviPopsInnerNfviPopAttributesCpuResourceAttributes
        """
        return self._cpu_resource_attributes

    @cpu_resource_attributes.setter
    def cpu_resource_attributes(self, cpu_resource_attributes: NfviPopsInnerNfviPopAttributesCpuResourceAttributes):
        """Sets the cpu_resource_attributes of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.


        :param cpu_resource_attributes: The cpu_resource_attributes of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.
        :type cpu_resource_attributes: NfviPopsInnerNfviPopAttributesCpuResourceAttributes
        """
        if cpu_resource_attributes is None:
            raise ValueError("Invalid value for `cpu_resource_attributes`, must not be `None`")  # noqa: E501

        self._cpu_resource_attributes = cpu_resource_attributes

    @property
    def storage_resource_attributes(self) -> NfviPopsInnerNfviPopAttributesStorageResourceAttributes:
        """Gets the storage_resource_attributes of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.


        :return: The storage_resource_attributes of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.
        :rtype: NfviPopsInnerNfviPopAttributesStorageResourceAttributes
        """
        return self._storage_resource_attributes

    @storage_resource_attributes.setter
    def storage_resource_attributes(self, storage_resource_attributes: NfviPopsInnerNfviPopAttributesStorageResourceAttributes):
        """Sets the storage_resource_attributes of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.


        :param storage_resource_attributes: The storage_resource_attributes of this NfviPopsInnerNfviPopAttributesResourceZoneAttributes.
        :type storage_resource_attributes: NfviPopsInnerNfviPopAttributesStorageResourceAttributes
        """
        if storage_resource_attributes is None:
            raise ValueError("Invalid value for `storage_resource_attributes`, must not be `None`")  # noqa: E501

        self._storage_resource_attributes = storage_resource_attributes
