/*
 * 5GT-MTP PA API
 * REST-API for the MTP PA. Find more at http://5g-transformer.eu
 *
 * OpenAPI spec version: 0.0.0
 * Contact: cnd@lists.cttc.es
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.mtp.extinterface.pa.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CompRouteOutputWanPathElements
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-05-02T08:45:54.546Z")
public class CompRouteOutputWanPathElements {
  @SerializedName("aNodeId")
  private String aNodeId = null;

  @SerializedName("zNodeId")
  private String zNodeId = null;

  @SerializedName("aLinkId")
  private Integer aLinkId = null;

  @SerializedName("zLinkId")
  private Integer zLinkId = null;

  public CompRouteOutputWanPathElements aNodeId(String aNodeId) {
    this.aNodeId = aNodeId;
    return this;
  }

   /**
   * outgoing Node Id
   * @return aNodeId
  **/
  @ApiModelProperty(required = true, value = "outgoing Node Id")
  public String getANodeId() {
    return aNodeId;
  }

  public void setANodeId(String aNodeId) {
    this.aNodeId = aNodeId;
  }

  public CompRouteOutputWanPathElements zNodeId(String zNodeId) {
    this.zNodeId = zNodeId;
    return this;
  }

   /**
   * incoming Node Id
   * @return zNodeId
  **/
  @ApiModelProperty(required = true, value = "incoming Node Id")
  public String getZNodeId() {
    return zNodeId;
  }

  public void setZNodeId(String zNodeId) {
    this.zNodeId = zNodeId;
  }

  public CompRouteOutputWanPathElements aLinkId(Integer aLinkId) {
    this.aLinkId = aLinkId;
    return this;
  }

   /**
   * Link Id. attached to the aNodeId
   * @return aLinkId
  **/
  @ApiModelProperty(required = true, value = "Link Id. attached to the aNodeId")
  public Integer getALinkId() {
    return aLinkId;
  }

  public void setALinkId(Integer aLinkId) {
    this.aLinkId = aLinkId;
  }

  public CompRouteOutputWanPathElements zLinkId(Integer zLinkId) {
    this.zLinkId = zLinkId;
    return this;
  }

   /**
   * Link Id. attached to the zNodeId
   * @return zLinkId
  **/
  @ApiModelProperty(required = true, value = "Link Id. attached to the zNodeId")
  public Integer getZLinkId() {
    return zLinkId;
  }

  public void setZLinkId(Integer zLinkId) {
    this.zLinkId = zLinkId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompRouteOutputWanPathElements compRouteOutputWanPathElements = (CompRouteOutputWanPathElements) o;
    return Objects.equals(this.aNodeId, compRouteOutputWanPathElements.aNodeId) &&
        Objects.equals(this.zNodeId, compRouteOutputWanPathElements.zNodeId) &&
        Objects.equals(this.aLinkId, compRouteOutputWanPathElements.aLinkId) &&
        Objects.equals(this.zLinkId, compRouteOutputWanPathElements.zLinkId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aNodeId, zNodeId, aLinkId, zLinkId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompRouteOutputWanPathElements {\n");
    
    sb.append("    aNodeId: ").append(toIndentedString(aNodeId)).append("\n");
    sb.append("    zNodeId: ").append(toIndentedString(zNodeId)).append("\n");
    sb.append("    aLinkId: ").append(toIndentedString(aLinkId)).append("\n");
    sb.append("    zLinkId: ").append(toIndentedString(zLinkId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

