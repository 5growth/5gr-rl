/*
 * MTP Manager API
 * MTP Manager API
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rl.extinterface.nbi.swagger.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * The virtual CPU pinning configuration for the virtualised compute resource.
 */
@ApiModel(description = "The virtual CPU pinning configuration for the virtualised compute resource.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-04-08T16:03:30.222Z")
public class CreateComputeResourceReservationRequestContainerFlavourVirtualCpuPinning {
  @SerializedName("cpuMap")
  private String cpuMap = null;

  @SerializedName("cpuPinningPolicy")
  private String cpuPinningPolicy = null;

  @SerializedName("cpuPinningRules")
  private String cpuPinningRules = null;

  public CreateComputeResourceReservationRequestContainerFlavourVirtualCpuPinning cpuMap(String cpuMap) {
    this.cpuMap = cpuMap;
    return this;
  }

   /**
   * Shows the association of virtual CPU cores to physical CPU cores.
   * @return cpuMap
  **/
  @ApiModelProperty(required = true, value = "Shows the association of virtual CPU cores to physical CPU cores.")
  public String getCpuMap() {
    return cpuMap;
  }

  public void setCpuMap(String cpuMap) {
    this.cpuMap = cpuMap;
  }

  public CreateComputeResourceReservationRequestContainerFlavourVirtualCpuPinning cpuPinningPolicy(String cpuPinningPolicy) {
    this.cpuPinningPolicy = cpuPinningPolicy;
    return this;
  }

   /**
   * The policy can take values of \&quot;static\&quot; or \&quot;dynamic\&quot;. In case of \&quot;static\&quot; the virtual CPU cores have been allocated to physical CPU cores according to the rules defined in cpuPinningRules. In case of \&quot;dynamic\&quot; the allocation of virtual CPU cores to physical CPU cores is decided by the VIM.
   * @return cpuPinningPolicy
  **/
  @ApiModelProperty(required = true, value = "The policy can take values of \"static\" or \"dynamic\". In case of \"static\" the virtual CPU cores have been allocated to physical CPU cores according to the rules defined in cpuPinningRules. In case of \"dynamic\" the allocation of virtual CPU cores to physical CPU cores is decided by the VIM.")
  public String getCpuPinningPolicy() {
    return cpuPinningPolicy;
  }

  public void setCpuPinningPolicy(String cpuPinningPolicy) {
    this.cpuPinningPolicy = cpuPinningPolicy;
  }

  public CreateComputeResourceReservationRequestContainerFlavourVirtualCpuPinning cpuPinningRules(String cpuPinningRules) {
    this.cpuPinningRules = cpuPinningRules;
    return this;
  }

   /**
   * A list of rules that should be considered during the allocation of the virtual CPUs to physical CPUs in case of \&quot;static\&quot; cpuPinningPolicy.
   * @return cpuPinningRules
  **/
  @ApiModelProperty(required = true, value = "A list of rules that should be considered during the allocation of the virtual CPUs to physical CPUs in case of \"static\" cpuPinningPolicy.")
  public String getCpuPinningRules() {
    return cpuPinningRules;
  }

  public void setCpuPinningRules(String cpuPinningRules) {
    this.cpuPinningRules = cpuPinningRules;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateComputeResourceReservationRequestContainerFlavourVirtualCpuPinning createComputeResourceReservationRequestContainerFlavourVirtualCpuPinning = (CreateComputeResourceReservationRequestContainerFlavourVirtualCpuPinning) o;
    return Objects.equals(this.cpuMap, createComputeResourceReservationRequestContainerFlavourVirtualCpuPinning.cpuMap) &&
        Objects.equals(this.cpuPinningPolicy, createComputeResourceReservationRequestContainerFlavourVirtualCpuPinning.cpuPinningPolicy) &&
        Objects.equals(this.cpuPinningRules, createComputeResourceReservationRequestContainerFlavourVirtualCpuPinning.cpuPinningRules);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cpuMap, cpuPinningPolicy, cpuPinningRules);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateComputeResourceReservationRequestContainerFlavourVirtualCpuPinning {\n");
    
    sb.append("    cpuMap: ").append(toIndentedString(cpuMap)).append("\n");
    sb.append("    cpuPinningPolicy: ").append(toIndentedString(cpuPinningPolicy)).append("\n");
    sb.append("    cpuPinningRules: ").append(toIndentedString(cpuPinningRules)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

