/*
 * MTP Manager API
 * MTP Manager API
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rl.extinterface.nbi.swagger.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;

/**
 * AllocateParameters
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-04-08T16:03:30.222Z")
public class AllocateParameters {
  @SerializedName("locationConstraints")
  private String locationConstraints = null;

  @SerializedName("reservationId")
  private String reservationId = null;

  @SerializedName("typeNetworkData")
  private String typeNetworkData = null;

  @SerializedName("affinityOrAntiAffinityConstraints")
  private String affinityOrAntiAffinityConstraints = null;

  @SerializedName("typeNetworkPortData")
  private String typeNetworkPortData = null;

  @SerializedName("resourceGroupId")
  private String resourceGroupId = null;

  @SerializedName("metadata")
  private String metadata = null;

  @SerializedName("networkResourceType")
  private String networkResourceType = null;

  @SerializedName("networkResourceName")
  private String networkResourceName = null;

  @SerializedName("typeSubnetData")
  private String typeSubnetData = null;

  @SerializedName("bandwidth")
  private BigDecimal bandwidth = null;

  @SerializedName("delay")
  private String delay = null;

  @SerializedName("networkType")
  private String networkType = null;

  @SerializedName("segmentType")
  private String segmentType = null;

  @SerializedName("networkQoS")
  private String networkQoS = null;

  @SerializedName("isShared")
  private Boolean isShared = null;

  @SerializedName("sharingCriteria")
  private String sharingCriteria = null;

  @SerializedName("layer3Attributes")
  private String layer3Attributes = null;

  @SerializedName("portType")
  private String portType = null;

  @SerializedName("networkId")
  private String networkId = null;

  @SerializedName("segmentId")
  private String segmentId = null;

  @SerializedName("ingressPointIPAddress")
  private String ingressPointIPAddress = null;

  @SerializedName("ingressPointPortAddress")
  private String ingressPointPortAddress = null;

  @SerializedName("egressPointIPAddress")
  private String egressPointIPAddress = null;

  @SerializedName("egressPointPortAddress")
  private String egressPointPortAddress = null;

  @SerializedName("wanLinkId")
  private String wanLinkId = null;

  public AllocateParameters locationConstraints(String locationConstraints) {
    this.locationConstraints = locationConstraints;
    return this;
  }

   /**
   * Controls the visibility of the image. In case of \&quot;private\&quot; value the image is available only for the tenant assigned to the provided resourceGroupId and the administrator tenants of the VIM while in case of \&quot;public\&quot; value, all tenants of the VIM can use the image.
   * @return locationConstraints
  **/
  @ApiModelProperty(required = true, value = "Controls the visibility of the image. In case of \"private\" value the image is available only for the tenant assigned to the provided resourceGroupId and the administrator tenants of the VIM while in case of \"public\" value, all tenants of the VIM can use the image.")
  public String getLocationConstraints() {
    return locationConstraints;
  }

  public void setLocationConstraints(String locationConstraints) {
    this.locationConstraints = locationConstraints;
  }

  public AllocateParameters reservationId(String reservationId) {
    this.reservationId = reservationId;
    return this;
  }

   /**
   * Identifier of the resource reservation applicable to this virtualised resource management operation.
   * @return reservationId
  **/
  @ApiModelProperty(required = true, value = "Identifier of the resource reservation applicable to this virtualised resource management operation.")
  public String getReservationId() {
    return reservationId;
  }

  public void setReservationId(String reservationId) {
    this.reservationId = reservationId;
  }

  public AllocateParameters typeNetworkData(String typeNetworkData) {
    this.typeNetworkData = typeNetworkData;
    return this;
  }

   /**
   * The network data provides information about the particular virtual network resource to create. Cardinality can be \&quot;0\&quot; depending on the value of networkResourceType.
   * @return typeNetworkData
  **/
  @ApiModelProperty(required = true, value = "The network data provides information about the particular virtual network resource to create. Cardinality can be \"0\" depending on the value of networkResourceType.")
  public String getTypeNetworkData() {
    return typeNetworkData;
  }

  public void setTypeNetworkData(String typeNetworkData) {
    this.typeNetworkData = typeNetworkData;
  }

  public AllocateParameters affinityOrAntiAffinityConstraints(String affinityOrAntiAffinityConstraints) {
    this.affinityOrAntiAffinityConstraints = affinityOrAntiAffinityConstraints;
    return this;
  }

   /**
   * The binary software image file.
   * @return affinityOrAntiAffinityConstraints
  **/
  @ApiModelProperty(required = true, value = "The binary software image file.")
  public String getAffinityOrAntiAffinityConstraints() {
    return affinityOrAntiAffinityConstraints;
  }

  public void setAffinityOrAntiAffinityConstraints(String affinityOrAntiAffinityConstraints) {
    this.affinityOrAntiAffinityConstraints = affinityOrAntiAffinityConstraints;
  }

  public AllocateParameters typeNetworkPortData(String typeNetworkPortData) {
    this.typeNetworkPortData = typeNetworkPortData;
    return this;
  }

   /**
   * The binary software image file.
   * @return typeNetworkPortData
  **/
  @ApiModelProperty(required = true, value = "The binary software image file.")
  public String getTypeNetworkPortData() {
    return typeNetworkPortData;
  }

  public void setTypeNetworkPortData(String typeNetworkPortData) {
    this.typeNetworkPortData = typeNetworkPortData;
  }

  public AllocateParameters resourceGroupId(String resourceGroupId) {
    this.resourceGroupId = resourceGroupId;
    return this;
  }

   /**
   * Unique identifier of the \&quot;infrastructure resource group\&quot;, logical grouping of virtual resources assigned to a tenant within an Infrastructure Domain.
   * @return resourceGroupId
  **/
  @ApiModelProperty(required = true, value = "Unique identifier of the \"infrastructure resource group\", logical grouping of virtual resources assigned to a tenant within an Infrastructure Domain.")
  public String getResourceGroupId() {
    return resourceGroupId;
  }

  public void setResourceGroupId(String resourceGroupId) {
    this.resourceGroupId = resourceGroupId;
  }

  public AllocateParameters metadata(String metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * The binary software image file.
   * @return metadata
  **/
  @ApiModelProperty(required = true, value = "The binary software image file.")
  public String getMetadata() {
    return metadata;
  }

  public void setMetadata(String metadata) {
    this.metadata = metadata;
  }

  public AllocateParameters networkResourceType(String networkResourceType) {
    this.networkResourceType = networkResourceType;
    return this;
  }

   /**
   * Type of virtualised network resource. Possible values are: \&quot;network\&quot;, \&quot;subnet\&quot; or network-port.
   * @return networkResourceType
  **/
  @ApiModelProperty(required = true, value = "Type of virtualised network resource. Possible values are: \"network\", \"subnet\" or network-port.")
  public String getNetworkResourceType() {
    return networkResourceType;
  }

  public void setNetworkResourceType(String networkResourceType) {
    this.networkResourceType = networkResourceType;
  }

  public AllocateParameters networkResourceName(String networkResourceName) {
    this.networkResourceName = networkResourceName;
    return this;
  }

   /**
   * Name provided by the consumer for the virtualised network resource to allocate. It can be used for identifying resources from consumer side.
   * @return networkResourceName
  **/
  @ApiModelProperty(required = true, value = "Name provided by the consumer for the virtualised network resource to allocate. It can be used for identifying resources from consumer side.")
  public String getNetworkResourceName() {
    return networkResourceName;
  }

  public void setNetworkResourceName(String networkResourceName) {
    this.networkResourceName = networkResourceName;
  }

  public AllocateParameters typeSubnetData(String typeSubnetData) {
    this.typeSubnetData = typeSubnetData;
    return this;
  }

   /**
   * The subnet data provides information about the particular sub-network resource to create.
   * @return typeSubnetData
  **/
  @ApiModelProperty(required = true, value = "The subnet data provides information about the particular sub-network resource to create.")
  public String getTypeSubnetData() {
    return typeSubnetData;
  }

  public void setTypeSubnetData(String typeSubnetData) {
    this.typeSubnetData = typeSubnetData;
  }

  public AllocateParameters bandwidth(BigDecimal bandwidth) {
    this.bandwidth = bandwidth;
    return this;
  }

   /**
   * The bandwidth of the virtual network interface (in Mbps).
   * @return bandwidth
  **/
  @ApiModelProperty(required = true, value = "The bandwidth of the virtual network interface (in Mbps).")
  public BigDecimal getBandwidth() {
    return bandwidth;
  }

  public void setBandwidth(BigDecimal bandwidth) {
    this.bandwidth = bandwidth;
  }

  public AllocateParameters delay(String delay) {
    this.delay = delay;
    return this;
  }

   /**
   * Transmission delay.
   * @return delay
  **/
  @ApiModelProperty(required = true, value = "Transmission delay.")
  public String getDelay() {
    return delay;
  }

  public void setDelay(String delay) {
    this.delay = delay;
  }

  public AllocateParameters networkType(String networkType) {
    this.networkType = networkType;
    return this;
  }

   /**
   * The type of network that maps to the virtualised network.
   * @return networkType
  **/
  @ApiModelProperty(required = true, value = "The type of network that maps to the virtualised network.")
  public String getNetworkType() {
    return networkType;
  }

  public void setNetworkType(String networkType) {
    this.networkType = networkType;
  }

  public AllocateParameters segmentType(String segmentType) {
    this.segmentType = segmentType;
    return this;
  }

   /**
   * The isolated segment for the virtualised network.
   * @return segmentType
  **/
  @ApiModelProperty(required = true, value = "The isolated segment for the virtualised network.")
  public String getSegmentType() {
    return segmentType;
  }

  public void setSegmentType(String segmentType) {
    this.segmentType = segmentType;
  }

  public AllocateParameters networkQoS(String networkQoS) {
    this.networkQoS = networkQoS;
    return this;
  }

   /**
   * Element providing information about Quality of Service attributes that the network shall support.
   * @return networkQoS
  **/
  @ApiModelProperty(required = true, value = "Element providing information about Quality of Service attributes that the network shall support.")
  public String getNetworkQoS() {
    return networkQoS;
  }

  public void setNetworkQoS(String networkQoS) {
    this.networkQoS = networkQoS;
  }

  public AllocateParameters isShared(Boolean isShared) {
    this.isShared = isShared;
    return this;
  }

   /**
   * It defines whether the virtualised network is shared among consumers.
   * @return isShared
  **/
  @ApiModelProperty(required = true, value = "It defines whether the virtualised network is shared among consumers.")
  public Boolean isIsShared() {
    return isShared;
  }

  public void setIsShared(Boolean isShared) {
    this.isShared = isShared;
  }

  public AllocateParameters sharingCriteria(String sharingCriteria) {
    this.sharingCriteria = sharingCriteria;
    return this;
  }

   /**
   * Only present for shared networks. Indicate the sharing criteria for this network. These criteria might be a list of authorized consumers.
   * @return sharingCriteria
  **/
  @ApiModelProperty(required = true, value = "Only present for shared networks. Indicate the sharing criteria for this network. These criteria might be a list of authorized consumers.")
  public String getSharingCriteria() {
    return sharingCriteria;
  }

  public void setSharingCriteria(String sharingCriteria) {
    this.sharingCriteria = sharingCriteria;
  }

  public AllocateParameters layer3Attributes(String layer3Attributes) {
    this.layer3Attributes = layer3Attributes;
    return this;
  }

   /**
   * The attribute allows setting up a network providing defined layer 3 connectivity.
   * @return layer3Attributes
  **/
  @ApiModelProperty(required = true, value = "The attribute allows setting up a network providing defined layer 3 connectivity.")
  public String getLayer3Attributes() {
    return layer3Attributes;
  }

  public void setLayer3Attributes(String layer3Attributes) {
    this.layer3Attributes = layer3Attributes;
  }

  public AllocateParameters portType(String portType) {
    this.portType = portType;
    return this;
  }

   /**
   * Type of network port.
   * @return portType
  **/
  @ApiModelProperty(required = true, value = "Type of network port.")
  public String getPortType() {
    return portType;
  }

  public void setPortType(String portType) {
    this.portType = portType;
  }

  public AllocateParameters networkId(String networkId) {
    this.networkId = networkId;
    return this;
  }

   /**
   * Identifier of the network that the port belongs to.
   * @return networkId
  **/
  @ApiModelProperty(required = true, value = "Identifier of the network that the port belongs to.")
  public String getNetworkId() {
    return networkId;
  }

  public void setNetworkId(String networkId) {
    this.networkId = networkId;
  }

  public AllocateParameters segmentId(String segmentId) {
    this.segmentId = segmentId;
    return this;
  }

   /**
   * The isolated segment the network port belongs to.
   * @return segmentId
  **/
  @ApiModelProperty(required = true, value = "The isolated segment the network port belongs to.")
  public String getSegmentId() {
    return segmentId;
  }

  public void setSegmentId(String segmentId) {
    this.segmentId = segmentId;
  }

  public AllocateParameters ingressPointIPAddress(String ingressPointIPAddress) {
    this.ingressPointIPAddress = ingressPointIPAddress;
    return this;
  }

   /**
   * The ingress point IP Address.
   * @return ingressPointIPAddress
  **/
  @ApiModelProperty(required = true, value = "The ingress point IP Address.")
  public String getIngressPointIPAddress() {
    return ingressPointIPAddress;
  }

  public void setIngressPointIPAddress(String ingressPointIPAddress) {
    this.ingressPointIPAddress = ingressPointIPAddress;
  }

  public AllocateParameters ingressPointPortAddress(String ingressPointPortAddress) {
    this.ingressPointPortAddress = ingressPointPortAddress;
    return this;
  }

   /**
   * The ingress point Port(interface) Address.
   * @return ingressPointPortAddress
  **/
  @ApiModelProperty(required = true, value = "The ingress point Port(interface) Address.")
  public String getIngressPointPortAddress() {
    return ingressPointPortAddress;
  }

  public void setIngressPointPortAddress(String ingressPointPortAddress) {
    this.ingressPointPortAddress = ingressPointPortAddress;
  }

  public AllocateParameters egressPointIPAddress(String egressPointIPAddress) {
    this.egressPointIPAddress = egressPointIPAddress;
    return this;
  }

   /**
   * The engress point IP Address.
   * @return egressPointIPAddress
  **/
  @ApiModelProperty(value = "The engress point IP Address.")
  public String getEgressPointIPAddress() {
    return egressPointIPAddress;
  }

  public void setEgressPointIPAddress(String egressPointIPAddress) {
    this.egressPointIPAddress = egressPointIPAddress;
  }

  public AllocateParameters egressPointPortAddress(String egressPointPortAddress) {
    this.egressPointPortAddress = egressPointPortAddress;
    return this;
  }

   /**
   * The engress point Port(interface) Address.
   * @return egressPointPortAddress
  **/
  @ApiModelProperty(required = true, value = "The engress point Port(interface) Address.")
  public String getEgressPointPortAddress() {
    return egressPointPortAddress;
  }

  public void setEgressPointPortAddress(String egressPointPortAddress) {
    this.egressPointPortAddress = egressPointPortAddress;
  }

  public AllocateParameters wanLinkId(String wanLinkId) {
    this.wanLinkId = wanLinkId;
    return this;
  }

   /**
   * The logical link ID between two nodes.
   * @return wanLinkId
  **/
  @ApiModelProperty(required = true, value = "The logical link ID between two nodes.")
  public String getWanLinkId() {
    return wanLinkId;
  }

  public void setWanLinkId(String wanLinkId) {
    this.wanLinkId = wanLinkId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AllocateParameters allocateParameters = (AllocateParameters) o;
    return Objects.equals(this.locationConstraints, allocateParameters.locationConstraints) &&
        Objects.equals(this.reservationId, allocateParameters.reservationId) &&
        Objects.equals(this.typeNetworkData, allocateParameters.typeNetworkData) &&
        Objects.equals(this.affinityOrAntiAffinityConstraints, allocateParameters.affinityOrAntiAffinityConstraints) &&
        Objects.equals(this.typeNetworkPortData, allocateParameters.typeNetworkPortData) &&
        Objects.equals(this.resourceGroupId, allocateParameters.resourceGroupId) &&
        Objects.equals(this.metadata, allocateParameters.metadata) &&
        Objects.equals(this.networkResourceType, allocateParameters.networkResourceType) &&
        Objects.equals(this.networkResourceName, allocateParameters.networkResourceName) &&
        Objects.equals(this.typeSubnetData, allocateParameters.typeSubnetData) &&
        Objects.equals(this.bandwidth, allocateParameters.bandwidth) &&
        Objects.equals(this.delay, allocateParameters.delay) &&
        Objects.equals(this.networkType, allocateParameters.networkType) &&
        Objects.equals(this.segmentType, allocateParameters.segmentType) &&
        Objects.equals(this.networkQoS, allocateParameters.networkQoS) &&
        Objects.equals(this.isShared, allocateParameters.isShared) &&
        Objects.equals(this.sharingCriteria, allocateParameters.sharingCriteria) &&
        Objects.equals(this.layer3Attributes, allocateParameters.layer3Attributes) &&
        Objects.equals(this.portType, allocateParameters.portType) &&
        Objects.equals(this.networkId, allocateParameters.networkId) &&
        Objects.equals(this.segmentId, allocateParameters.segmentId) &&
        Objects.equals(this.ingressPointIPAddress, allocateParameters.ingressPointIPAddress) &&
        Objects.equals(this.ingressPointPortAddress, allocateParameters.ingressPointPortAddress) &&
        Objects.equals(this.egressPointIPAddress, allocateParameters.egressPointIPAddress) &&
        Objects.equals(this.egressPointPortAddress, allocateParameters.egressPointPortAddress) &&
        Objects.equals(this.wanLinkId, allocateParameters.wanLinkId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locationConstraints, reservationId, typeNetworkData, affinityOrAntiAffinityConstraints, typeNetworkPortData, resourceGroupId, metadata, networkResourceType, networkResourceName, typeSubnetData, bandwidth, delay, networkType, segmentType, networkQoS, isShared, sharingCriteria, layer3Attributes, portType, networkId, segmentId, ingressPointIPAddress, ingressPointPortAddress, egressPointIPAddress, egressPointPortAddress, wanLinkId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AllocateParameters {\n");
    
    sb.append("    locationConstraints: ").append(toIndentedString(locationConstraints)).append("\n");
    sb.append("    reservationId: ").append(toIndentedString(reservationId)).append("\n");
    sb.append("    typeNetworkData: ").append(toIndentedString(typeNetworkData)).append("\n");
    sb.append("    affinityOrAntiAffinityConstraints: ").append(toIndentedString(affinityOrAntiAffinityConstraints)).append("\n");
    sb.append("    typeNetworkPortData: ").append(toIndentedString(typeNetworkPortData)).append("\n");
    sb.append("    resourceGroupId: ").append(toIndentedString(resourceGroupId)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    networkResourceType: ").append(toIndentedString(networkResourceType)).append("\n");
    sb.append("    networkResourceName: ").append(toIndentedString(networkResourceName)).append("\n");
    sb.append("    typeSubnetData: ").append(toIndentedString(typeSubnetData)).append("\n");
    sb.append("    bandwidth: ").append(toIndentedString(bandwidth)).append("\n");
    sb.append("    delay: ").append(toIndentedString(delay)).append("\n");
    sb.append("    networkType: ").append(toIndentedString(networkType)).append("\n");
    sb.append("    segmentType: ").append(toIndentedString(segmentType)).append("\n");
    sb.append("    networkQoS: ").append(toIndentedString(networkQoS)).append("\n");
    sb.append("    isShared: ").append(toIndentedString(isShared)).append("\n");
    sb.append("    sharingCriteria: ").append(toIndentedString(sharingCriteria)).append("\n");
    sb.append("    layer3Attributes: ").append(toIndentedString(layer3Attributes)).append("\n");
    sb.append("    portType: ").append(toIndentedString(portType)).append("\n");
    sb.append("    networkId: ").append(toIndentedString(networkId)).append("\n");
    sb.append("    segmentId: ").append(toIndentedString(segmentId)).append("\n");
    sb.append("    ingressPointIPAddress: ").append(toIndentedString(ingressPointIPAddress)).append("\n");
    sb.append("    ingressPointPortAddress: ").append(toIndentedString(ingressPointPortAddress)).append("\n");
    sb.append("    egressPointIPAddress: ").append(toIndentedString(egressPointIPAddress)).append("\n");
    sb.append("    egressPointPortAddress: ").append(toIndentedString(egressPointPortAddress)).append("\n");
    sb.append("    wanLinkId: ").append(toIndentedString(wanLinkId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

