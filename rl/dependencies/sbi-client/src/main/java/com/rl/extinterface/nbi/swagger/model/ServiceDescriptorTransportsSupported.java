/*
 * MTP Manager API
 * MTP Manager API
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rl.extinterface.nbi.swagger.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Indicates transport and serialization formats supported made available to the service-consuming application. Defaults to REST+JSON if absent.
 */
@ApiModel(description = "Indicates transport and serialization formats supported made available to the service-consuming application. Defaults to REST+JSON if absent.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-04-08T16:03:30.222Z")
public class ServiceDescriptorTransportsSupported {
  @SerializedName("transport")
  private TransportDescriptor transport = null;

  /**
   * Information about the serializers in this binding, as defined in the SerializerTypes type in ETSI GS MEC 011.
   */
  @JsonAdapter(SerializersEnum.Adapter.class)
  public enum SerializersEnum {
    JSON("JSON"),
    
    XML("XML"),
    
    PROTOBUF3("PROTOBUF3");

    private String value;

    SerializersEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SerializersEnum fromValue(String text) {
      for (SerializersEnum b : SerializersEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<SerializersEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SerializersEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SerializersEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return SerializersEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("serializers")
  private SerializersEnum serializers = null;

  public ServiceDescriptorTransportsSupported transport(TransportDescriptor transport) {
    this.transport = transport;
    return this;
  }

   /**
   * Get transport
   * @return transport
  **/
  @ApiModelProperty(value = "")
  public TransportDescriptor getTransport() {
    return transport;
  }

  public void setTransport(TransportDescriptor transport) {
    this.transport = transport;
  }

  public ServiceDescriptorTransportsSupported serializers(SerializersEnum serializers) {
    this.serializers = serializers;
    return this;
  }

   /**
   * Information about the serializers in this binding, as defined in the SerializerTypes type in ETSI GS MEC 011.
   * @return serializers
  **/
  @ApiModelProperty(value = "Information about the serializers in this binding, as defined in the SerializerTypes type in ETSI GS MEC 011.")
  public SerializersEnum getSerializers() {
    return serializers;
  }

  public void setSerializers(SerializersEnum serializers) {
    this.serializers = serializers;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceDescriptorTransportsSupported serviceDescriptorTransportsSupported = (ServiceDescriptorTransportsSupported) o;
    return Objects.equals(this.transport, serviceDescriptorTransportsSupported.transport) &&
        Objects.equals(this.serializers, serviceDescriptorTransportsSupported.serializers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transport, serializers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceDescriptorTransportsSupported {\n");
    
    sb.append("    transport: ").append(toIndentedString(transport)).append("\n");
    sb.append("    serializers: ").append(toIndentedString(serializers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

