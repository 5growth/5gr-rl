/*
 * MTP Manager API
 * MTP Manager API
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rl.extinterface.nbi.swagger.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * The virtual CPU pinning configuration for the virtualised compute resource.
 */
@ApiModel(description = "The virtual CPU pinning configuration for the virtualised compute resource.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-04-08T16:03:30.222Z")
public class VirtualCpuPinningData {
  /**
   * ndicates the policy for CPU pinning. The policy can take values of \&quot;static\&quot; or \&quot;dynamic\&quot;. The cardinality can be 0 during the allocation request, if no particular value is requested.
   */
  @JsonAdapter(CpuPinningPolicyEnum.Adapter.class)
  public enum CpuPinningPolicyEnum {
    STATIC("static"),
    
    DYNAMIC("dynamic");

    private String value;

    CpuPinningPolicyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CpuPinningPolicyEnum fromValue(String text) {
      for (CpuPinningPolicyEnum b : CpuPinningPolicyEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CpuPinningPolicyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CpuPinningPolicyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CpuPinningPolicyEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return CpuPinningPolicyEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("cpuPinningPolicy")
  private CpuPinningPolicyEnum cpuPinningPolicy = null;

  @SerializedName("cpuPinningMap")
  private Object cpuPinningMap = null;

  public VirtualCpuPinningData cpuPinningPolicy(CpuPinningPolicyEnum cpuPinningPolicy) {
    this.cpuPinningPolicy = cpuPinningPolicy;
    return this;
  }

   /**
   * ndicates the policy for CPU pinning. The policy can take values of \&quot;static\&quot; or \&quot;dynamic\&quot;. The cardinality can be 0 during the allocation request, if no particular value is requested.
   * @return cpuPinningPolicy
  **/
  @ApiModelProperty(value = "ndicates the policy for CPU pinning. The policy can take values of \"static\" or \"dynamic\". The cardinality can be 0 during the allocation request, if no particular value is requested.")
  public CpuPinningPolicyEnum getCpuPinningPolicy() {
    return cpuPinningPolicy;
  }

  public void setCpuPinningPolicy(CpuPinningPolicyEnum cpuPinningPolicy) {
    this.cpuPinningPolicy = cpuPinningPolicy;
  }

  public VirtualCpuPinningData cpuPinningMap(Object cpuPinningMap) {
    this.cpuPinningMap = cpuPinningMap;
    return this;
  }

   /**
   * If cpuPinningPolicy is defined as \&quot;static\&quot;, the cpuPinningMap provides the map of pinning virtual CPU cores to physical CPU cores/threads. Cardinality is 0 if cpuPinningPolicy has a different value than \&quot;static\&quot;.
   * @return cpuPinningMap
  **/
  @ApiModelProperty(value = "If cpuPinningPolicy is defined as \"static\", the cpuPinningMap provides the map of pinning virtual CPU cores to physical CPU cores/threads. Cardinality is 0 if cpuPinningPolicy has a different value than \"static\".")
  public Object getCpuPinningMap() {
    return cpuPinningMap;
  }

  public void setCpuPinningMap(Object cpuPinningMap) {
    this.cpuPinningMap = cpuPinningMap;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VirtualCpuPinningData virtualCpuPinningData = (VirtualCpuPinningData) o;
    return Objects.equals(this.cpuPinningPolicy, virtualCpuPinningData.cpuPinningPolicy) &&
        Objects.equals(this.cpuPinningMap, virtualCpuPinningData.cpuPinningMap);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cpuPinningPolicy, cpuPinningMap);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VirtualCpuPinningData {\n");
    
    sb.append("    cpuPinningPolicy: ").append(toIndentedString(cpuPinningPolicy)).append("\n");
    sb.append("    cpuPinningMap: ").append(toIndentedString(cpuPinningMap)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

