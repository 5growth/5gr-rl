/*
 * MTP Manager API
 * MTP Manager API
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rl.extinterface.nbi.swagger.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.rl.extinterface.nbi.swagger.model.ReservedVirtualNetworkNetworkAttributes;
import com.rl.extinterface.nbi.swagger.model.ReservedVirtualNetworkNetworkPorts;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * ReservedVirtualNetwork
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-12T12:38:09.537Z")



public class ReservedVirtualNetwork {
  @SerializedName("endTime")
  private OffsetDateTime endTime = null;

  @SerializedName("expiryTime")
  private OffsetDateTime expiryTime = null;

  @SerializedName("networkAttributes")
  private ReservedVirtualNetworkNetworkAttributes networkAttributes = null;

  @SerializedName("networkPorts")
  private List<ReservedVirtualNetworkNetworkPorts> networkPorts = new ArrayList<ReservedVirtualNetworkNetworkPorts>();

  @SerializedName("publicIps")
  private String publicIps = null;

  @SerializedName("reservationId")
  private String reservationId = null;

  @SerializedName("reservationStatus")
  private String reservationStatus = null;

  @SerializedName("startTime")
  private OffsetDateTime startTime = null;

  @SerializedName("zoneId")
  private String zoneId = null;

  public ReservedVirtualNetwork endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * Indication when the reservation ends (when it is expected that the resources will no longer be needed) and used by the VIM to schedule the reservation. If not present, resources are reserved for unlimited usage time.
   * @return endTime
  **/
  @ApiModelProperty(required = true, value = "Indication when the reservation ends (when it is expected that the resources will no longer be needed) and used by the VIM to schedule the reservation. If not present, resources are reserved for unlimited usage time.")
  public OffsetDateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }

  public ReservedVirtualNetwork expiryTime(OffsetDateTime expiryTime) {
    this.expiryTime = expiryTime;
    return this;
  }

   /**
   * Indication when the VIM can release the reservation in case no allocation request against this reservation was made.
   * @return expiryTime
  **/
  @ApiModelProperty(required = true, value = "Indication when the VIM can release the reservation in case no allocation request against this reservation was made.")
  public OffsetDateTime getExpiryTime() {
    return expiryTime;
  }

  public void setExpiryTime(OffsetDateTime expiryTime) {
    this.expiryTime = expiryTime;
  }

  public ReservedVirtualNetwork networkAttributes(ReservedVirtualNetworkNetworkAttributes networkAttributes) {
    this.networkAttributes = networkAttributes;
    return this;
  }

   /**
   * Get networkAttributes
   * @return networkAttributes
  **/
  @ApiModelProperty(required = true, value = "")
  public ReservedVirtualNetworkNetworkAttributes getNetworkAttributes() {
    return networkAttributes;
  }

  public void setNetworkAttributes(ReservedVirtualNetworkNetworkAttributes networkAttributes) {
    this.networkAttributes = networkAttributes;
  }

  public ReservedVirtualNetwork networkPorts(List<ReservedVirtualNetworkNetworkPorts> networkPorts) {
    this.networkPorts = networkPorts;
    return this;
  }

  public ReservedVirtualNetwork addNetworkPortsItem(ReservedVirtualNetworkNetworkPorts networkPortsItem) {
    this.networkPorts.add(networkPortsItem);
    return this;
  }

   /**
   * List of specific network ports that have been reserved.
   * @return networkPorts
  **/
  @ApiModelProperty(required = true, value = "List of specific network ports that have been reserved.")
  public List<ReservedVirtualNetworkNetworkPorts> getNetworkPorts() {
    return networkPorts;
  }

  public void setNetworkPorts(List<ReservedVirtualNetworkNetworkPorts> networkPorts) {
    this.networkPorts = networkPorts;
  }

  public ReservedVirtualNetwork publicIps(String publicIps) {
    this.publicIps = publicIps;
    return this;
  }

   /**
   * List of public IP addresses that have been reserved.
   * @return publicIps
  **/
  @ApiModelProperty(required = true, value = "List of public IP addresses that have been reserved.")
  public String getPublicIps() {
    return publicIps;
  }

  public void setPublicIps(String publicIps) {
    this.publicIps = publicIps;
  }

  public ReservedVirtualNetwork reservationId(String reservationId) {
    this.reservationId = reservationId;
    return this;
  }

   /**
   * Identifier of the resource reservation.
   * @return reservationId
  **/
  @ApiModelProperty(required = true, value = "Identifier of the resource reservation.")
  public String getReservationId() {
    return reservationId;
  }

  public void setReservationId(String reservationId) {
    this.reservationId = reservationId;
  }

  public ReservedVirtualNetwork reservationStatus(String reservationStatus) {
    this.reservationStatus = reservationStatus;
    return this;
  }

   /**
   * Status of the network resource reservation, e.g. to indicate if a reservation is being used.
   * @return reservationStatus
  **/
  @ApiModelProperty(required = true, value = "Status of the network resource reservation, e.g. to indicate if a reservation is being used.")
  public String getReservationStatus() {
    return reservationStatus;
  }

  public void setReservationStatus(String reservationStatus) {
    this.reservationStatus = reservationStatus;
  }

  public ReservedVirtualNetwork startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Indication when the consumption of the resources starts. If the value is 0, resources are reserved for immediate use.
   * @return startTime
  **/
  @ApiModelProperty(required = true, value = "Indication when the consumption of the resources starts. If the value is 0, resources are reserved for immediate use.")
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }

  public ReservedVirtualNetwork zoneId(String zoneId) {
    this.zoneId = zoneId;
    return this;
  }

   /**
   * References the resource zone where the virtual network resources have been reserved. Cardinality can be 0 to cover the case where reserved network resources are not bound to a specific resource zone.
   * @return zoneId
  **/
  @ApiModelProperty(required = true, value = "References the resource zone where the virtual network resources have been reserved. Cardinality can be 0 to cover the case where reserved network resources are not bound to a specific resource zone.")
  public String getZoneId() {
    return zoneId;
  }

  public void setZoneId(String zoneId) {
    this.zoneId = zoneId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReservedVirtualNetwork reservedVirtualNetwork = (ReservedVirtualNetwork) o;
    return Objects.equals(this.endTime, reservedVirtualNetwork.endTime) &&
        Objects.equals(this.expiryTime, reservedVirtualNetwork.expiryTime) &&
        Objects.equals(this.networkAttributes, reservedVirtualNetwork.networkAttributes) &&
        Objects.equals(this.networkPorts, reservedVirtualNetwork.networkPorts) &&
        Objects.equals(this.publicIps, reservedVirtualNetwork.publicIps) &&
        Objects.equals(this.reservationId, reservedVirtualNetwork.reservationId) &&
        Objects.equals(this.reservationStatus, reservedVirtualNetwork.reservationStatus) &&
        Objects.equals(this.startTime, reservedVirtualNetwork.startTime) &&
        Objects.equals(this.zoneId, reservedVirtualNetwork.zoneId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endTime, expiryTime, networkAttributes, networkPorts, publicIps, reservationId, reservationStatus, startTime, zoneId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReservedVirtualNetwork {\n");
    
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    expiryTime: ").append(toIndentedString(expiryTime)).append("\n");
    sb.append("    networkAttributes: ").append(toIndentedString(networkAttributes)).append("\n");
    sb.append("    networkPorts: ").append(toIndentedString(networkPorts)).append("\n");
    sb.append("    publicIps: ").append(toIndentedString(publicIps)).append("\n");
    sb.append("    reservationId: ").append(toIndentedString(reservationId)).append("\n");
    sb.append("    reservationStatus: ").append(toIndentedString(reservationStatus)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    zoneId: ").append(toIndentedString(zoneId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

