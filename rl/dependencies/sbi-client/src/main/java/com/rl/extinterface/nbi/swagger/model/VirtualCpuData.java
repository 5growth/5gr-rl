/*
 * MTP Manager API
 * MTP Manager API
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rl.extinterface.nbi.swagger.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;

/**
 * The virtual memory of the virtualised compute.
 */
@ApiModel(description = "The virtual memory of the virtualised compute.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-04-08T16:03:30.222Z")
public class VirtualCpuData {
  @SerializedName("cpuArchitecture")
  private String cpuArchitecture = null;

  @SerializedName("numVirtualCpu")
  private BigDecimal numVirtualCpu = null;

  @SerializedName("virtualCpuClock")
  private BigDecimal virtualCpuClock = null;

  @SerializedName("virtualCpuOversubscriptionPolicy")
  private String virtualCpuOversubscriptionPolicy = null;

  @SerializedName("virtualCpuPinning")
  private VirtualCpuPinningData virtualCpuPinning = null;

  public VirtualCpuData cpuArchitecture(String cpuArchitecture) {
    this.cpuArchitecture = cpuArchitecture;
    return this;
  }

   /**
   * CPU architecture type. Examples are x86, ARM. The cardinality can be 0 during the allocation request, if no particular CPU architecture type is requested.
   * @return cpuArchitecture
  **/
  @ApiModelProperty(value = "CPU architecture type. Examples are x86, ARM. The cardinality can be 0 during the allocation request, if no particular CPU architecture type is requested.")
  public String getCpuArchitecture() {
    return cpuArchitecture;
  }

  public void setCpuArchitecture(String cpuArchitecture) {
    this.cpuArchitecture = cpuArchitecture;
  }

  public VirtualCpuData numVirtualCpu(BigDecimal numVirtualCpu) {
    this.numVirtualCpu = numVirtualCpu;
    return this;
  }

   /**
   * Number of virtual CPUs
   * @return numVirtualCpu
  **/
  @ApiModelProperty(required = true, value = "Number of virtual CPUs")
  public BigDecimal getNumVirtualCpu() {
    return numVirtualCpu;
  }

  public void setNumVirtualCpu(BigDecimal numVirtualCpu) {
    this.numVirtualCpu = numVirtualCpu;
  }

  public VirtualCpuData virtualCpuClock(BigDecimal virtualCpuClock) {
    this.virtualCpuClock = virtualCpuClock;
    return this;
  }

   /**
   * Minimum virtual CPU clock rate (e.g. in MHz). The cardinality can be 0 during the allocation request, if no particular value is requested.
   * @return virtualCpuClock
  **/
  @ApiModelProperty(value = "Minimum virtual CPU clock rate (e.g. in MHz). The cardinality can be 0 during the allocation request, if no particular value is requested.")
  public BigDecimal getVirtualCpuClock() {
    return virtualCpuClock;
  }

  public void setVirtualCpuClock(BigDecimal virtualCpuClock) {
    this.virtualCpuClock = virtualCpuClock;
  }

  public VirtualCpuData virtualCpuOversubscriptionPolicy(String virtualCpuOversubscriptionPolicy) {
    this.virtualCpuOversubscriptionPolicy = virtualCpuOversubscriptionPolicy;
    return this;
  }

   /**
   * The CPU core oversubscription policy e.g. the relation of virtual CPU cores to physical CPU cores/threads. The cardinality can be 0 during the allocation request, if no particular value is requested.
   * @return virtualCpuOversubscriptionPolicy
  **/
  @ApiModelProperty(value = "The CPU core oversubscription policy e.g. the relation of virtual CPU cores to physical CPU cores/threads. The cardinality can be 0 during the allocation request, if no particular value is requested.")
  public String getVirtualCpuOversubscriptionPolicy() {
    return virtualCpuOversubscriptionPolicy;
  }

  public void setVirtualCpuOversubscriptionPolicy(String virtualCpuOversubscriptionPolicy) {
    this.virtualCpuOversubscriptionPolicy = virtualCpuOversubscriptionPolicy;
  }

  public VirtualCpuData virtualCpuPinning(VirtualCpuPinningData virtualCpuPinning) {
    this.virtualCpuPinning = virtualCpuPinning;
    return this;
  }

   /**
   * Get virtualCpuPinning
   * @return virtualCpuPinning
  **/
  @ApiModelProperty(value = "")
  public VirtualCpuPinningData getVirtualCpuPinning() {
    return virtualCpuPinning;
  }

  public void setVirtualCpuPinning(VirtualCpuPinningData virtualCpuPinning) {
    this.virtualCpuPinning = virtualCpuPinning;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VirtualCpuData virtualCpuData = (VirtualCpuData) o;
    return Objects.equals(this.cpuArchitecture, virtualCpuData.cpuArchitecture) &&
        Objects.equals(this.numVirtualCpu, virtualCpuData.numVirtualCpu) &&
        Objects.equals(this.virtualCpuClock, virtualCpuData.virtualCpuClock) &&
        Objects.equals(this.virtualCpuOversubscriptionPolicy, virtualCpuData.virtualCpuOversubscriptionPolicy) &&
        Objects.equals(this.virtualCpuPinning, virtualCpuData.virtualCpuPinning);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cpuArchitecture, numVirtualCpu, virtualCpuClock, virtualCpuOversubscriptionPolicy, virtualCpuPinning);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VirtualCpuData {\n");
    
    sb.append("    cpuArchitecture: ").append(toIndentedString(cpuArchitecture)).append("\n");
    sb.append("    numVirtualCpu: ").append(toIndentedString(numVirtualCpu)).append("\n");
    sb.append("    virtualCpuClock: ").append(toIndentedString(virtualCpuClock)).append("\n");
    sb.append("    virtualCpuOversubscriptionPolicy: ").append(toIndentedString(virtualCpuOversubscriptionPolicy)).append("\n");
    sb.append("    virtualCpuPinning: ").append(toIndentedString(virtualCpuPinning)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

