/*
 * MTP Manager API
 * MTP Manager API
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rl.extinterface.nbi.swagger.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

/**
 * SoftwareImageInformation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-04-08T16:03:30.222Z")
public class SoftwareImageInformation {
  @SerializedName("checksum")
  private String checksum = null;

  @SerializedName("containerFormat")
  private String containerFormat = null;

  @SerializedName("createdAt")
  private String createdAt = null;

  @SerializedName("diskFormat")
  private String diskFormat = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("minDisk")
  private String minDisk = null;

  @SerializedName("minRam")
  private String minRam = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("provider")
  private String provider = null;

  @SerializedName("size")
  private String size = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("updatedAt")
  private String updatedAt = null;

  @SerializedName("version")
  private String version = null;

  public SoftwareImageInformation checksum(String checksum) {
    this.checksum = checksum;
    return this;
  }

   /**
   * The checksum of the software image file.
   * @return checksum
  **/
  @ApiModelProperty(required = true, value = "The checksum of the software image file.")
  public String getChecksum() {
    return checksum;
  }

  public void setChecksum(String checksum) {
    this.checksum = checksum;
  }

  public SoftwareImageInformation containerFormat(String containerFormat) {
    this.containerFormat = containerFormat;
    return this;
  }

   /**
   * The container format indicates whether the software image is in a file format that also contains metadata about the actual software.
   * @return containerFormat
  **/
  @ApiModelProperty(required = true, value = "The container format indicates whether the software image is in a file format that also contains metadata about the actual software.")
  public String getContainerFormat() {
    return containerFormat;
  }

  public void setContainerFormat(String containerFormat) {
    this.containerFormat = containerFormat;
  }

  public SoftwareImageInformation createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The created time of this software image.
   * @return createdAt
  **/
  @ApiModelProperty(required = true, value = "The created time of this software image.")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public SoftwareImageInformation diskFormat(String diskFormat) {
    this.diskFormat = diskFormat;
    return this;
  }

   /**
   * The disk format of a software image is the format of the underlying disk image.
   * @return diskFormat
  **/
  @ApiModelProperty(required = true, value = "The disk format of a software image is the format of the underlying disk image.")
  public String getDiskFormat() {
    return diskFormat;
  }

  public void setDiskFormat(String diskFormat) {
    this.diskFormat = diskFormat;
  }

  public SoftwareImageInformation id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The identifier of this software image.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "The identifier of this software image.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public SoftwareImageInformation minDisk(String minDisk) {
    this.minDisk = minDisk;
    return this;
  }

   /**
   * The minimal Disk for this software image.
   * @return minDisk
  **/
  @ApiModelProperty(required = true, value = "The minimal Disk for this software image.")
  public String getMinDisk() {
    return minDisk;
  }

  public void setMinDisk(String minDisk) {
    this.minDisk = minDisk;
  }

  public SoftwareImageInformation minRam(String minRam) {
    this.minRam = minRam;
    return this;
  }

   /**
   * The minimal RAM for this software image.
   * @return minRam
  **/
  @ApiModelProperty(required = true, value = "The minimal RAM for this software image.")
  public String getMinRam() {
    return minRam;
  }

  public void setMinRam(String minRam) {
    this.minRam = minRam;
  }

  public SoftwareImageInformation name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of this software image.
   * @return name
  **/
  @ApiModelProperty(required = true, value = "The name of this software image.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public SoftwareImageInformation provider(String provider) {
    this.provider = provider;
    return this;
  }

   /**
   * The provider of this software image.
   * @return provider
  **/
  @ApiModelProperty(required = true, value = "The provider of this software image.")
  public String getProvider() {
    return provider;
  }

  public void setProvider(String provider) {
    this.provider = provider;
  }

  public SoftwareImageInformation size(String size) {
    this.size = size;
    return this;
  }

   /**
   * The size of this software image.
   * @return size
  **/
  @ApiModelProperty(required = true, value = "The size of this software image.")
  public String getSize() {
    return size;
  }

  public void setSize(String size) {
    this.size = size;
  }

  public SoftwareImageInformation status(String status) {
    this.status = status;
    return this;
  }

   /**
   * The status of this software image.
   * @return status
  **/
  @ApiModelProperty(required = true, value = "The status of this software image.")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public SoftwareImageInformation updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * The updated time of this software image.
   * @return updatedAt
  **/
  @ApiModelProperty(required = true, value = "The updated time of this software image.")
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }

  public SoftwareImageInformation version(String version) {
    this.version = version;
    return this;
  }

   /**
   * The version of this software image.
   * @return version
  **/
  @ApiModelProperty(required = true, value = "The version of this software image.")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SoftwareImageInformation softwareImageInformation = (SoftwareImageInformation) o;
    return Objects.equals(this.checksum, softwareImageInformation.checksum) &&
        Objects.equals(this.containerFormat, softwareImageInformation.containerFormat) &&
        Objects.equals(this.createdAt, softwareImageInformation.createdAt) &&
        Objects.equals(this.diskFormat, softwareImageInformation.diskFormat) &&
        Objects.equals(this.id, softwareImageInformation.id) &&
        Objects.equals(this.minDisk, softwareImageInformation.minDisk) &&
        Objects.equals(this.minRam, softwareImageInformation.minRam) &&
        Objects.equals(this.name, softwareImageInformation.name) &&
        Objects.equals(this.provider, softwareImageInformation.provider) &&
        Objects.equals(this.size, softwareImageInformation.size) &&
        Objects.equals(this.status, softwareImageInformation.status) &&
        Objects.equals(this.updatedAt, softwareImageInformation.updatedAt) &&
        Objects.equals(this.version, softwareImageInformation.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(checksum, containerFormat, createdAt, diskFormat, id, minDisk, minRam, name, provider, size, status, updatedAt, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SoftwareImageInformation {\n");
    
    sb.append("    checksum: ").append(toIndentedString(checksum)).append("\n");
    sb.append("    containerFormat: ").append(toIndentedString(containerFormat)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    diskFormat: ").append(toIndentedString(diskFormat)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    minDisk: ").append(toIndentedString(minDisk)).append("\n");
    sb.append("    minRam: ").append(toIndentedString(minRam)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

