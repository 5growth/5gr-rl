/*
 * MTP Manager API
 * MTP Manager API
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rl.extinterface.nbi.swagger.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * TunnelInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-12T12:38:09.537Z")



public class TunnelInfo {
  /**
   * TType of tunnel (GTP-U, GRE, etc.)
   */
  @JsonAdapter(TunnelTypeEnum.Adapter.class)
  public enum TunnelTypeEnum {
    GTP_U("GTP-U"),
    
    GRE("GRE");

    private String value;

    TunnelTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TunnelTypeEnum fromValue(String text) {
      for (TunnelTypeEnum b : TunnelTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TunnelTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TunnelTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TunnelTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TunnelTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("tunnelType")
  private TunnelTypeEnum tunnelType = null;

  @SerializedName("tunnelDstAddress")
  private String tunnelDstAddress = null;

  @SerializedName("tunnelSrcAddress")
  private String tunnelSrcAddress = null;

  @SerializedName("tunnelSpecificData")
  private Object tunnelSpecificData = null;

  public TunnelInfo tunnelType(TunnelTypeEnum tunnelType) {
    this.tunnelType = tunnelType;
    return this;
  }

   /**
   * TType of tunnel (GTP-U, GRE, etc.)
   * @return tunnelType
  **/
  @ApiModelProperty(required = true, value = "TType of tunnel (GTP-U, GRE, etc.)")
  public TunnelTypeEnum getTunnelType() {
    return tunnelType;
  }

  public void setTunnelType(TunnelTypeEnum tunnelType) {
    this.tunnelType = tunnelType;
  }

  public TunnelInfo tunnelDstAddress(String tunnelDstAddress) {
    this.tunnelDstAddress = tunnelDstAddress;
    return this;
  }

   /**
   * Destination address of the tunnel.
   * @return tunnelDstAddress
  **/
  @ApiModelProperty(required = true, value = "Destination address of the tunnel.")
  public String getTunnelDstAddress() {
    return tunnelDstAddress;
  }

  public void setTunnelDstAddress(String tunnelDstAddress) {
    this.tunnelDstAddress = tunnelDstAddress;
  }

  public TunnelInfo tunnelSrcAddress(String tunnelSrcAddress) {
    this.tunnelSrcAddress = tunnelSrcAddress;
    return this;
  }

   /**
   * Source address of the tunnel.
   * @return tunnelSrcAddress
  **/
  @ApiModelProperty(required = true, value = "Source address of the tunnel.")
  public String getTunnelSrcAddress() {
    return tunnelSrcAddress;
  }

  public void setTunnelSrcAddress(String tunnelSrcAddress) {
    this.tunnelSrcAddress = tunnelSrcAddress;
  }

  public TunnelInfo tunnelSpecificData(Object tunnelSpecificData) {
    this.tunnelSpecificData = tunnelSpecificData;
    return this;
  }

   /**
   * Parameters specific to the tunnel.
   * @return tunnelSpecificData
  **/
  @ApiModelProperty(value = "Parameters specific to the tunnel.")
  public Object getTunnelSpecificData() {
    return tunnelSpecificData;
  }

  public void setTunnelSpecificData(Object tunnelSpecificData) {
    this.tunnelSpecificData = tunnelSpecificData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TunnelInfo tunnelInfo = (TunnelInfo) o;
    return Objects.equals(this.tunnelType, tunnelInfo.tunnelType) &&
        Objects.equals(this.tunnelDstAddress, tunnelInfo.tunnelDstAddress) &&
        Objects.equals(this.tunnelSrcAddress, tunnelInfo.tunnelSrcAddress) &&
        Objects.equals(this.tunnelSpecificData, tunnelInfo.tunnelSpecificData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tunnelType, tunnelDstAddress, tunnelSrcAddress, tunnelSpecificData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TunnelInfo {\n");
    
    sb.append("    tunnelType: ").append(toIndentedString(tunnelType)).append("\n");
    sb.append("    tunnelDstAddress: ").append(toIndentedString(tunnelDstAddress)).append("\n");
    sb.append("    tunnelSrcAddress: ").append(toIndentedString(tunnelSrcAddress)).append("\n");
    sb.append("    tunnelSpecificData: ").append(toIndentedString(tunnelSpecificData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

