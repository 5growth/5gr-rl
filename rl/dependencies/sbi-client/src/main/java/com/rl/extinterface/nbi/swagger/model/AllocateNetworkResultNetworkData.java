/*
 * MTP Manager API
 * MTP Manager API
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rl.extinterface.nbi.swagger.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * If network types are created satisfactorily, it contains the data relative to the instantiated virtualised network resource. Cardinality can be \&quot;0\&quot; if the request did not include creation of such type of resource.
 */
@ApiModel(description = "If network types are created satisfactorily, it contains the data relative to the instantiated virtualised network resource. Cardinality can be \"0\" if the request did not include creation of such type of resource.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-04-08T16:03:30.222Z")
public class AllocateNetworkResultNetworkData {
  @SerializedName("bandwidth")
  private BigDecimal bandwidth = null;

  @SerializedName("isShared")
  private Boolean isShared = null;

  @SerializedName("networkPort")
  private List<AllocateNetworkResultNetworkDataNetworkPort> networkPort = new ArrayList<AllocateNetworkResultNetworkDataNetworkPort>();

  @SerializedName("networkQoS")
  private List<AllocateNetworkResultNetworkDataNetworkQoS> networkQoS = new ArrayList<AllocateNetworkResultNetworkDataNetworkQoS>();

  @SerializedName("networkResourceId")
  private String networkResourceId = null;

  @SerializedName("networkResourceName")
  private String networkResourceName = null;

  @SerializedName("networkType")
  private String networkType = null;

  @SerializedName("operationalState")
  private String operationalState = null;

  @SerializedName("segmentType")
  private String segmentType = null;

  @SerializedName("sharingCriteria")
  private String sharingCriteria = null;

  @SerializedName("subnet")
  private List<String> subnet = new ArrayList<String>();

  @SerializedName("zoneId")
  private String zoneId = null;

  @SerializedName("metadata")
  private List<MetaDataInner> metadata = new ArrayList<MetaDataInner>();

  public AllocateNetworkResultNetworkData bandwidth(BigDecimal bandwidth) {
    this.bandwidth = bandwidth;
    return this;
  }

   /**
   * Minimum network bandwidth (in Mbps).
   * @return bandwidth
  **/
  @ApiModelProperty(required = true, value = "Minimum network bandwidth (in Mbps).")
  public BigDecimal getBandwidth() {
    return bandwidth;
  }

  public void setBandwidth(BigDecimal bandwidth) {
    this.bandwidth = bandwidth;
  }

  public AllocateNetworkResultNetworkData isShared(Boolean isShared) {
    this.isShared = isShared;
    return this;
  }

   /**
   * It defines whether the virtualised network is shared among consumers.
   * @return isShared
  **/
  @ApiModelProperty(required = true, value = "It defines whether the virtualised network is shared among consumers.")
  public Boolean isIsShared() {
    return isShared;
  }

  public void setIsShared(Boolean isShared) {
    this.isShared = isShared;
  }

  public AllocateNetworkResultNetworkData networkPort(List<AllocateNetworkResultNetworkDataNetworkPort> networkPort) {
    this.networkPort = networkPort;
    return this;
  }

  public AllocateNetworkResultNetworkData addNetworkPortItem(AllocateNetworkResultNetworkDataNetworkPort networkPortItem) {
    this.networkPort.add(networkPortItem);
    return this;
  }

   /**
   * Element providing information of an instantiated virtual network port.
   * @return networkPort
  **/
  @ApiModelProperty(required = true, value = "Element providing information of an instantiated virtual network port.")
  public List<AllocateNetworkResultNetworkDataNetworkPort> getNetworkPort() {
    return networkPort;
  }

  public void setNetworkPort(List<AllocateNetworkResultNetworkDataNetworkPort> networkPort) {
    this.networkPort = networkPort;
  }

  public AllocateNetworkResultNetworkData networkQoS(List<AllocateNetworkResultNetworkDataNetworkQoS> networkQoS) {
    this.networkQoS = networkQoS;
    return this;
  }

  public AllocateNetworkResultNetworkData addNetworkQoSItem(AllocateNetworkResultNetworkDataNetworkQoS networkQoSItem) {
    this.networkQoS.add(networkQoSItem);
    return this;
  }

   /**
   * Element providing information about Quality of Service attributes that the network shall support. The cardinality can be \&quot;0\&quot; to allow for networks without any specified QoS requirements.
   * @return networkQoS
  **/
  @ApiModelProperty(required = true, value = "Element providing information about Quality of Service attributes that the network shall support. The cardinality can be \"0\" to allow for networks without any specified QoS requirements.")
  public List<AllocateNetworkResultNetworkDataNetworkQoS> getNetworkQoS() {
    return networkQoS;
  }

  public void setNetworkQoS(List<AllocateNetworkResultNetworkDataNetworkQoS> networkQoS) {
    this.networkQoS = networkQoS;
  }

  public AllocateNetworkResultNetworkData networkResourceId(String networkResourceId) {
    this.networkResourceId = networkResourceId;
    return this;
  }

   /**
   * Identifier of the virtualised network resource.
   * @return networkResourceId
  **/
  @ApiModelProperty(required = true, value = "Identifier of the virtualised network resource.")
  public String getNetworkResourceId() {
    return networkResourceId;
  }

  public void setNetworkResourceId(String networkResourceId) {
    this.networkResourceId = networkResourceId;
  }

  public AllocateNetworkResultNetworkData networkResourceName(String networkResourceName) {
    this.networkResourceName = networkResourceName;
    return this;
  }

   /**
   * Name of the virtualised network resource.
   * @return networkResourceName
  **/
  @ApiModelProperty(required = true, value = "Name of the virtualised network resource.")
  public String getNetworkResourceName() {
    return networkResourceName;
  }

  public void setNetworkResourceName(String networkResourceName) {
    this.networkResourceName = networkResourceName;
  }

  public AllocateNetworkResultNetworkData networkType(String networkType) {
    this.networkType = networkType;
    return this;
  }

   /**
   * The type of network that maps to the virtualised network. This list is extensible. Examples are: \&quot;local\&quot;, \&quot;vlan\&quot;, \&quot;vxlan\&quot;, \&quot;gre\&quot;, \&quot;l3-vpn\&quot;, etc. The cardinality can be \&quot;0\&quot; to cover the case where this attribute is not required to create the virtualised network.
   * @return networkType
  **/
  @ApiModelProperty(required = true, value = "The type of network that maps to the virtualised network. This list is extensible. Examples are: \"local\", \"vlan\", \"vxlan\", \"gre\", \"l3-vpn\", etc. The cardinality can be \"0\" to cover the case where this attribute is not required to create the virtualised network.")
  public String getNetworkType() {
    return networkType;
  }

  public void setNetworkType(String networkType) {
    this.networkType = networkType;
  }

  public AllocateNetworkResultNetworkData operationalState(String operationalState) {
    this.operationalState = operationalState;
    return this;
  }

   /**
   * The operational state of the virtualised network.
   * @return operationalState
  **/
  @ApiModelProperty(required = true, value = "The operational state of the virtualised network.")
  public String getOperationalState() {
    return operationalState;
  }

  public void setOperationalState(String operationalState) {
    this.operationalState = operationalState;
  }

  public AllocateNetworkResultNetworkData segmentType(String segmentType) {
    this.segmentType = segmentType;
    return this;
  }

   /**
   * The isolated segment for the virtualised network. For instance, for a \&quot;vlan\&quot; networkType, it corresponds to the vlan identifier; and for a \&quot;gre\&quot; networkType, this corresponds to a gre key. The cardinality can be \&quot;0\&quot; to allow for flat networks without any specific segmentation.
   * @return segmentType
  **/
  @ApiModelProperty(required = true, value = "The isolated segment for the virtualised network. For instance, for a \"vlan\" networkType, it corresponds to the vlan identifier; and for a \"gre\" networkType, this corresponds to a gre key. The cardinality can be \"0\" to allow for flat networks without any specific segmentation.")
  public String getSegmentType() {
    return segmentType;
  }

  public void setSegmentType(String segmentType) {
    this.segmentType = segmentType;
  }

  public AllocateNetworkResultNetworkData sharingCriteria(String sharingCriteria) {
    this.sharingCriteria = sharingCriteria;
    return this;
  }

   /**
   * Only present for shared networks. Indicate the sharing criteria for this network. This criteria might be a list of authorized consumers.
   * @return sharingCriteria
  **/
  @ApiModelProperty(required = true, value = "Only present for shared networks. Indicate the sharing criteria for this network. This criteria might be a list of authorized consumers.")
  public String getSharingCriteria() {
    return sharingCriteria;
  }

  public void setSharingCriteria(String sharingCriteria) {
    this.sharingCriteria = sharingCriteria;
  }

  public AllocateNetworkResultNetworkData subnet(List<String> subnet) {
    this.subnet = subnet;
    return this;
  }

  public AllocateNetworkResultNetworkData addSubnetItem(String subnetItem) {
    this.subnet.add(subnetItem);
    return this;
  }

   /**
   * Only present if the network provides layer 3 connectivity.
   * @return subnet
  **/
  @ApiModelProperty(required = true, value = "Only present if the network provides layer 3 connectivity.")
  public List<String> getSubnet() {
    return subnet;
  }

  public void setSubnet(List<String> subnet) {
    this.subnet = subnet;
  }

  public AllocateNetworkResultNetworkData zoneId(String zoneId) {
    this.zoneId = zoneId;
    return this;
  }

   /**
   * If present, it identifies the Resource Zone where the virtual network resources have been allocated.
   * @return zoneId
  **/
  @ApiModelProperty(required = true, value = "If present, it identifies the Resource Zone where the virtual network resources have been allocated.")
  public String getZoneId() {
    return zoneId;
  }

  public void setZoneId(String zoneId) {
    this.zoneId = zoneId;
  }

  public AllocateNetworkResultNetworkData metadata(List<MetaDataInner> metadata) {
    this.metadata = metadata;
    return this;
  }

  public AllocateNetworkResultNetworkData addMetadataItem(MetaDataInner metadataItem) {
    this.metadata.add(metadataItem);
    return this;
  }

   /**
   * List of metadata key-value pairs used by the consumer to   associate meaningful metadata to the related virtualised resource.
   * @return metadata
  **/
  @ApiModelProperty(required = true, value = "List of metadata key-value pairs used by the consumer to   associate meaningful metadata to the related virtualised resource.")
  public List<MetaDataInner> getMetadata() {
    return metadata;
  }

  public void setMetadata(List<MetaDataInner> metadata) {
    this.metadata = metadata;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AllocateNetworkResultNetworkData allocateNetworkResultNetworkData = (AllocateNetworkResultNetworkData) o;
    return Objects.equals(this.bandwidth, allocateNetworkResultNetworkData.bandwidth) &&
        Objects.equals(this.isShared, allocateNetworkResultNetworkData.isShared) &&
        Objects.equals(this.networkPort, allocateNetworkResultNetworkData.networkPort) &&
        Objects.equals(this.networkQoS, allocateNetworkResultNetworkData.networkQoS) &&
        Objects.equals(this.networkResourceId, allocateNetworkResultNetworkData.networkResourceId) &&
        Objects.equals(this.networkResourceName, allocateNetworkResultNetworkData.networkResourceName) &&
        Objects.equals(this.networkType, allocateNetworkResultNetworkData.networkType) &&
        Objects.equals(this.operationalState, allocateNetworkResultNetworkData.operationalState) &&
        Objects.equals(this.segmentType, allocateNetworkResultNetworkData.segmentType) &&
        Objects.equals(this.sharingCriteria, allocateNetworkResultNetworkData.sharingCriteria) &&
        Objects.equals(this.subnet, allocateNetworkResultNetworkData.subnet) &&
        Objects.equals(this.zoneId, allocateNetworkResultNetworkData.zoneId) &&
        Objects.equals(this.metadata, allocateNetworkResultNetworkData.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bandwidth, isShared, networkPort, networkQoS, networkResourceId, networkResourceName, networkType, operationalState, segmentType, sharingCriteria, subnet, zoneId, metadata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AllocateNetworkResultNetworkData {\n");
    
    sb.append("    bandwidth: ").append(toIndentedString(bandwidth)).append("\n");
    sb.append("    isShared: ").append(toIndentedString(isShared)).append("\n");
    sb.append("    networkPort: ").append(toIndentedString(networkPort)).append("\n");
    sb.append("    networkQoS: ").append(toIndentedString(networkQoS)).append("\n");
    sb.append("    networkResourceId: ").append(toIndentedString(networkResourceId)).append("\n");
    sb.append("    networkResourceName: ").append(toIndentedString(networkResourceName)).append("\n");
    sb.append("    networkType: ").append(toIndentedString(networkType)).append("\n");
    sb.append("    operationalState: ").append(toIndentedString(operationalState)).append("\n");
    sb.append("    segmentType: ").append(toIndentedString(segmentType)).append("\n");
    sb.append("    sharingCriteria: ").append(toIndentedString(sharingCriteria)).append("\n");
    sb.append("    subnet: ").append(toIndentedString(subnet)).append("\n");
    sb.append("    zoneId: ").append(toIndentedString(zoneId)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

