/*
 * Prometheus Manager API
 * The API of the Prometheus Manager.
 *
 * OpenAPI spec version: 0.1
 * Contact: m.capitani@nextworks.it
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.mtp.extinterface.mon.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DashboardPanel
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-05-06T07:52:18.537Z")
public class DashboardPanel {
  @SerializedName("title")
  private String title = null;

  @SerializedName("query")
  private String query = null;

  /**
   * the size of the panel
   */
  @JsonAdapter(SizeEnum.Adapter.class)
  public enum SizeEnum {
    FULLSCREEN("fullscreen"),
    
    FULLWIDE("fullwide"),
    
    FULLTALL("fulltall"),
    
    QUARTERSCREEN("quarterscreen"),
    
    WIDE("wide"),
    
    TALL("tall"),
    
    MEDIUM("medium"),
    
    SMALL("small");

    private String value;

    SizeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SizeEnum fromValue(String text) {
      for (SizeEnum b : SizeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<SizeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SizeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SizeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return SizeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("size")
  private SizeEnum size = null;

  public DashboardPanel title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @ApiModelProperty(value = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public DashboardPanel query(String query) {
    this.query = query;
    return this;
  }

   /**
   * the query whose value the graph in the panel should show. See https://prometheus.io/docs/prometheus/latest/querying/basics/ for details 
   * @return query
  **/
  @ApiModelProperty(value = "the query whose value the graph in the panel should show. See https://prometheus.io/docs/prometheus/latest/querying/basics/ for details ")
  public String getQuery() {
    return query;
  }

  public void setQuery(String query) {
    this.query = query;
  }

  public DashboardPanel size(SizeEnum size) {
    this.size = size;
    return this;
  }

   /**
   * the size of the panel
   * @return size
  **/
  @ApiModelProperty(value = "the size of the panel")
  public SizeEnum getSize() {
    return size;
  }

  public void setSize(SizeEnum size) {
    this.size = size;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DashboardPanel dashboardPanel = (DashboardPanel) o;
    return Objects.equals(this.title, dashboardPanel.title) &&
        Objects.equals(this.query, dashboardPanel.query) &&
        Objects.equals(this.size, dashboardPanel.size);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, query, size);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DashboardPanel {\n");
    
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

