---
swagger: '2.0' 

info:
  description: The API of the Prometheus Manager.
  version: '0.1'
  title: Prometheus Manager API
  contact:
    name: Marco Capitani
    url: http://www.nextworks.it
    email: m.capitani@nextworks.it
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0

host: localhost:8080 # TODO port
basePath: "/prom-manager"

tags:
- name: exporter
  description: Exporters operations
- name: alert
  description: Alert operations
- name: dashboard
  description: Dashboard operations

paths:

###########
# Exporters
###########

  "/exporter":
    get:
      tags:
      - exporter
      summary: Get all exporters
      operationId: getExporters
      produces:
      - application/json
      - application/x-yaml
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/ExporterQueryResult"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
      - exporter
      summary: Create new exporter
      operationId: postExporter
      consumes:
      - application/json
      - application/x-yaml
      produces:
      - application/json
      - application/x-yaml
      parameters:
      - in: body
        name: exporter
        description: The exporter to be created
        required: true
        schema:
          "$ref": "#/definitions/ExporterDescription"
      responses:
        '201':
          description: Created
          schema:
            "$ref": "#/definitions/Exporter"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  "/exporter/{exporterId}":
    get:
      tags:
      - exporter
      summary: Get exporter details
      operationId: getExporter
      produces:
      - application/json
      - application/x-yaml
      parameters:
      - name: exporterId
        in: path
        description: The ID of the exporter
        required: true
        type: string
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/Exporter"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
      - exporter
      summary: Update exporter
      operationId: putExporter
      consumes:
      - application/json
      - application/x-yaml
      produces:
      - application/json
      - application/x-yaml
      parameters:
      - name: exporterId
        in: path
        description: The ID of the exporter to be updated
        required: true
        type: string
      - in: body
        name: exporter
        description: The exporter data to update
        required: true
        schema:
          "$ref": "#/definitions/Exporter"
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/Exporter"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
      - exporter
      summary: Delete exporter
      operationId: deleteExporter
      produces:
      - application/json
      - application/x-yaml
      parameters:
      - name: exporterId
        in: path
        description: The ID of the exporter to be deleted
        required: true
        type: string
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              deleted:
                type: array
                items:
                  type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

###########
# Alerts
###########

  "/alert":
    get:
      tags:
      - alert
      summary: Get all alerts
      operationId: getAllAlerts
      produces:
      - application/json
      - application/x-yaml
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/AlertQueryResult"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
      - alert
      summary: Create new alert
      operationId: postAlert
      consumes:
      - application/json
      - application/x-yaml
      produces:
      - application/json
      - application/x-yaml
      parameters:
      - in: body
        name: alert
        description: the alert to be created
        required: true
        schema:
          "$ref": "#/definitions/AlertDescription"
      responses:
        '201':
          description: Success
          schema:
            "$ref": "#/definitions/Alert"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  "/alert/{alertId}":
    get:
      tags:
      - alert
      summary: Get alert details
      operationId: getAlert
      produces:
      - application/json
      - application/x-yaml
      parameters:
      - name: alertId
        in: path
        type: string
        description: the ID of the alert
        required: true
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/Alert"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
      - alert
      summary: Update alert
      operationId: putAlert
      consumes:
      - application/json
      - application/x-yaml
      produces:
      - application/json
      - application/x-yaml
      parameters:
      - name: alertId
        in: path
        type: string
        description: the ID of the alert
        required: true
      - name: alert
        in: body
        description: the alert properties to be updated
        schema:
          "$ref": "#/definitions/Alert"
        required: true
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/Alert"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
      - alert
      summary: Delete alert
      operationId: deleteAlert
      produces:
      - application/json
      - application/x-yaml
      parameters:
      - name: alertId
        in: path
        type: string
        description: the ID of the alert
        required: true
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              deleted:
                type: array
                description: deleted alerts
                items:
                  type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

###############
# dashboards
###############

  "/dashboard":
    get:
      tags:
      - dashboard
      summary: Get all dashboards
      operationId: getAllDashboards
      produces:
      - application/json
      - application/x-yaml
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/DashboardQueryResult"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
      - dashboard
      summary: Create new dashboard
      operationId: postDashboard
      consumes:
      - application/json
      - application/x-yaml
      produces:
      - application/json
      - application/x-yaml
      parameters:
      - in: body
        name: dashboard
        description: the dashboard to be created
        required: true
        schema:
          "$ref": "#/definitions/DashboardDescription"
      responses:
        '201':
          description: Success
          schema:
            "$ref": "#/definitions/Dashboard"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

  "/dashboard/{dashboardId}":
    get:
      tags:
      - dashboard
      summary: Get dashboard details
      operationId: getDashboard
      produces:
      - application/json
      - application/x-yaml
      parameters:
      - name: dashboardId
        in: path
        type: string
        description: the ID of the dashboard
        required: true
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/Dashboard"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
      - dashboard
      summary: Update dashboard
      operationId: putDashboard
      consumes:
      - application/json
      - application/x-yaml
      produces:
      - application/json
      - application/x-yaml
      parameters:
      - name: dashboardId
        in: path
        type: string
        description: the ID of the dashboard
        required: true
      - name: dashboard
        in: body
        description: the dashboard properties to be updated
        schema:
          "$ref": "#/definitions/Dashboard"
        required: true
      responses:
        '200':
          description: Success
          schema:
            "$ref": "#/definitions/Dashboard"
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
      - dashboard
      summary: Delete dashboard
      operationId: deleteDashboard
      produces:
      - application/json
      - application/x-yaml
      parameters:
      - name: dashboardId
        in: path
        type: string
        description: the ID of the dashboard
        required: true
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              deleted:
                type: array
                description: deleted dashboards
                items:
                  type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

###############
# definitions
###############

definitions:

  Endpoint:
    type: object
    properties:
      address:
        type: string
        description: an IP address
      port:
        type: integer
        format: int32
        description: a TCP port number

  ExporterDescription:
    type: object
    properties:
      name:
        type: string
        description: >
          Human-readable description of the exporter, e.g. "NSI-XXX_web-server_VM-XXX"
      endpoint:
        type: array
        description: The list of endpoints of the instances of this job
        items:
          "$ref": "#/definitions/Endpoint"
      collectionPeriod:
        type: integer
        format: int32
        description: the interval (in milliseconds) between scrapes

  Exporter:
    type: object
    properties:
      exporterId:
        type: string
        description: >
          the ID of the exporter. It is also the name assigned to the corresponding scrape job
      name:
        type: string
        description: >
          Human-readable description of the exporter, e.g. "NSI-XXX_web-server_VM-XXX"
      endpoint:
        type: array
        description: The list of endpoints of the instances of this job
        items:
          "$ref": "#/definitions/Endpoint"
      collectionPeriod:
        type: integer
        format: int32
        description: the interval (in milliseconds) between scrapes

  ExporterQueryResult:
    type: object
    properties:
      exporter:
        type: array
        description: The list of exporters matching the query
        items:
          "$ref": "#/definitions/Exporter"

  AlertDescription:
    type: object
    properties:
      query:
        type: string
        description: >
          the query whose value should be monitored.
          See https://prometheus.io/docs/prometheus/latest/querying/basics/
          for details
      label:
        type: string
        description: the label that will be used in the notifications
      severity:
        type: string
        description: the severity of the alert
        enum:
        - warning
        - error
        - critical
      value:
        type: number
        format: double
        description: the value associated to the threshold
      kind:
        type: string
        description: the kind of inequality the query should satisfy related to the value
        enum:
        - g
        - geq
        - l
        - leq
        - eq
        - neq
      target:
        type: string
        format: URI
  
  Alert:
    type: object
    properties:
      alertId:
        type: string
        description: the ID assigned to the alert
      query:
        type: string
        description: >
          the query whose value should be monitored.
          See https://prometheus.io/docs/prometheus/latest/querying/basics/
          for details
      label:
        type: string
        description: the label that will be used in the notifications
      severity:
        type: string
        description: the severity of the alert
        enum:
        - warning
        - error
        - critical
      value:
        type: number
        format: double
        description: the value associated to the threshold
      kind:
        type: string
        description: the kind of inequality the query should satisfy related to the value
        enum:
        - g
        - geq
        - l
        - leq
        - eq
        - neq
      target:
        type: string
        format: URI

  AlertQueryResult:
    type: object
    properties:
      alert:
        type: array
        description: the list of alerts matching the query
        items:
          "$ref": "#/definitions/Alert"

  DashboardPanel:
    type: object
    properties:
      title:
        type: string
      query:
        type: string
        description: >
          the query whose value the graph in the panel should show.
          See https://prometheus.io/docs/prometheus/latest/querying/basics/
          for details
      size:
        type: string
        description: the size of the panel
        enum:
        - fullscreen
        - fullwide
        - fulltall
        - quarterscreen
        - wide
        - tall
        - medium
        - small

  Dashboard:
    type: object
    properties:
      dashboardId:
        type: string
        description: the ID assigned to the dashboard
      url:
        type: string
        description: the URL through which the dashboard is reachable
      name:
        type: string
        description: the name of the dashboard
      panels:
        type: array
        description: the panels to be included in the dashboard
        items:
          "$ref": "#/definitions/DashboardPanel"
      users:
        type: array
        description: the users which should be allowed to see this dashboard
        items:
          type: string
      plottedTime:
        type: integer
        format: int32
        description: the time interval to be shown on the graphs, in minutes
      refreshTime:
        type: string
        description: the time interval to wait before refreshing the graphs
        enum:
        - off
        - 5s
        - 10s
        - 30s
        - 1m
        - 5m
        - 15m
        - 30m
        - 1h
        - 2h
        - 1d
        
  DashboardDescription:
    type: object
    properties:
      name:
        type: string
        description: the name of the dashboard
      panels:
        type: array
        description: the panels to be included in the dashboard
        items:
          "$ref": "#/definitions/DashboardPanel"
      users:
        type: array
        description: the users which should be allowed to see this dashboard
        items:
          type: string
      plottedTime:
        type: integer
        format: int32
        description: the time interval to be shown on the graphs, in minutes
      refreshTime:
        type: string
        description: the time interval to wait before refreshing the graphs
        enum:
        - off
        - 5s
        - 10s
        - 30s
        - 1m
        - 5m
        - 15m
        - 30m
        - 1h
        - 2h
        - 1d

  DashboardQueryResult:
    type: object
    properties:
      dashboard:
        type: array
        description: the list of dashboards matching the query
        items:
          "$ref": "#/definitions/Dashboard"
