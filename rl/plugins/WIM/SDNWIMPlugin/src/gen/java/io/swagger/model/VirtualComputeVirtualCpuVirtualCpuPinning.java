/*
 * WIM Manager API
 * WIM Manager API
 *
 * OpenAPI spec version: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import javax.validation.constraints.*;

/**
 * The virtual CPU pinning configuration for the virtualised compute resource.
 */
@ApiModel(description = "The virtual CPU pinning configuration for the virtualised compute resource.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2018-11-02T11:54:01.688+01:00")
public class VirtualComputeVirtualCpuVirtualCpuPinning   {
  @JsonProperty("cpuPinningRules")
  private String cpuPinningRules = null;

  @JsonProperty("cpuPinningPolicy")
  private String cpuPinningPolicy = null;

  @JsonProperty("cpuMap")
  private String cpuMap = null;

  public VirtualComputeVirtualCpuVirtualCpuPinning cpuPinningRules(String cpuPinningRules) {
    this.cpuPinningRules = cpuPinningRules;
    return this;
  }

  /**
   * A list of rules that should be considered during the allocation of the virtual CPUs to physical CPUs in case of \&quot;static\&quot; cpuPinningPolicy.
   * @return cpuPinningRules
   **/
  @JsonProperty("cpuPinningRules")
  @ApiModelProperty(required = true, value = "A list of rules that should be considered during the allocation of the virtual CPUs to physical CPUs in case of \"static\" cpuPinningPolicy.")
  @NotNull
  public String getCpuPinningRules() {
    return cpuPinningRules;
  }

  public void setCpuPinningRules(String cpuPinningRules) {
    this.cpuPinningRules = cpuPinningRules;
  }

  public VirtualComputeVirtualCpuVirtualCpuPinning cpuPinningPolicy(String cpuPinningPolicy) {
    this.cpuPinningPolicy = cpuPinningPolicy;
    return this;
  }

  /**
   * The policy can take values of \&quot;static\&quot; or \&quot;dynamic\&quot;. In case of \&quot;static\&quot; the virtual CPU cores have been allocated to physical CPU cores according to the rules defined in cpuPinningRules. In case of \&quot;dynamic\&quot; the allocation of virtual CPU cores to physical CPU cores is decided by the VIM.
   * @return cpuPinningPolicy
   **/
  @JsonProperty("cpuPinningPolicy")
  @ApiModelProperty(required = true, value = "The policy can take values of \"static\" or \"dynamic\". In case of \"static\" the virtual CPU cores have been allocated to physical CPU cores according to the rules defined in cpuPinningRules. In case of \"dynamic\" the allocation of virtual CPU cores to physical CPU cores is decided by the VIM.")
  @NotNull
  public String getCpuPinningPolicy() {
    return cpuPinningPolicy;
  }

  public void setCpuPinningPolicy(String cpuPinningPolicy) {
    this.cpuPinningPolicy = cpuPinningPolicy;
  }

  public VirtualComputeVirtualCpuVirtualCpuPinning cpuMap(String cpuMap) {
    this.cpuMap = cpuMap;
    return this;
  }

  /**
   * Shows the association of virtual CPU cores to physical CPU cores.
   * @return cpuMap
   **/
  @JsonProperty("cpuMap")
  @ApiModelProperty(required = true, value = "Shows the association of virtual CPU cores to physical CPU cores.")
  @NotNull
  public String getCpuMap() {
    return cpuMap;
  }

  public void setCpuMap(String cpuMap) {
    this.cpuMap = cpuMap;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VirtualComputeVirtualCpuVirtualCpuPinning virtualComputeVirtualCpuVirtualCpuPinning = (VirtualComputeVirtualCpuVirtualCpuPinning) o;
    return Objects.equals(this.cpuPinningRules, virtualComputeVirtualCpuVirtualCpuPinning.cpuPinningRules) &&
        Objects.equals(this.cpuPinningPolicy, virtualComputeVirtualCpuVirtualCpuPinning.cpuPinningPolicy) &&
        Objects.equals(this.cpuMap, virtualComputeVirtualCpuVirtualCpuPinning.cpuMap);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cpuPinningRules, cpuPinningPolicy, cpuMap);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VirtualComputeVirtualCpuVirtualCpuPinning {\n");
    
    sb.append("    cpuPinningRules: ").append(toIndentedString(cpuPinningRules)).append("\n");
    sb.append("    cpuPinningPolicy: ").append(toIndentedString(cpuPinningPolicy)).append("\n");
    sb.append("    cpuMap: ").append(toIndentedString(cpuMap)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

