/*
 * WIM Manager API
 * WIM Manager API
 *
 * OpenAPI spec version: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.model.AllocateComputeRequestAffinityOrAntiAffinityConstraints;
import io.swagger.model.AllocateComputeRequestInterfaceData;
import io.swagger.model.AllocateComputeRequestUserData;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;

/**
 * AllocateComputeRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2018-11-02T11:54:01.688+01:00")
public class AllocateComputeRequest   {
  @JsonProperty("locationConstraints")
  private String locationConstraints = null;

  @JsonProperty("reservationId")
  private String reservationId = null;

  @JsonProperty("interfaceData")
  private List<AllocateComputeRequestInterfaceData> interfaceData = new ArrayList<AllocateComputeRequestInterfaceData>();

  @JsonProperty("affinityOrAntiAffinityConstraints")
  private List<AllocateComputeRequestAffinityOrAntiAffinityConstraints> affinityOrAntiAffinityConstraints = new ArrayList<AllocateComputeRequestAffinityOrAntiAffinityConstraints>();

  @JsonProperty("userData")
  private AllocateComputeRequestUserData userData = null;

  @JsonProperty("computeFlavourId")
  private String computeFlavourId = null;

  @JsonProperty("resourceGroupId")
  private String resourceGroupId = null;

  @JsonProperty("metadata")
  private Object metadata = null;

  @JsonProperty("vcImageId")
  private String vcImageId = null;

  @JsonProperty("computeName")
  private String computeName = null;

  public AllocateComputeRequest locationConstraints(String locationConstraints) {
    this.locationConstraints = locationConstraints;
    return this;
  }

  /**
   * If present, it defines location constraints for the resource(s) is (are) requested to be allocated, e.g. in what particular Resource Zone.
   * @return locationConstraints
   **/
  @JsonProperty("locationConstraints")
  @ApiModelProperty(required = true, value = "If present, it defines location constraints for the resource(s) is (are) requested to be allocated, e.g. in what particular Resource Zone.")
  @NotNull
  public String getLocationConstraints() {
    return locationConstraints;
  }

  public void setLocationConstraints(String locationConstraints) {
    this.locationConstraints = locationConstraints;
  }

  public AllocateComputeRequest reservationId(String reservationId) {
    this.reservationId = reservationId;
    return this;
  }

  /**
   * Identifier of the resource reservation applicable to this virtualised resource management operation. Cardinality can be 0 if no resource reservation was used.
   * @return reservationId
   **/
  @JsonProperty("reservationId")
  @ApiModelProperty(required = true, value = "Identifier of the resource reservation applicable to this virtualised resource management operation. Cardinality can be 0 if no resource reservation was used.")
  @NotNull
  public String getReservationId() {
    return reservationId;
  }

  public void setReservationId(String reservationId) {
    this.reservationId = reservationId;
  }

  public AllocateComputeRequest interfaceData(List<AllocateComputeRequestInterfaceData> interfaceData) {
    this.interfaceData = interfaceData;
    return this;
  }

  public AllocateComputeRequest addInterfaceDataItem(AllocateComputeRequestInterfaceData interfaceDataItem) {
    this.interfaceData.add(interfaceDataItem);
    return this;
  }

  /**
   * The data of network interfaces which are specific to a Virtual Compute Resource instance.
   * @return interfaceData
   **/
  @JsonProperty("interfaceData")
  @ApiModelProperty(required = true, value = "The data of network interfaces which are specific to a Virtual Compute Resource instance.")
  @NotNull
  public List<AllocateComputeRequestInterfaceData> getInterfaceData() {
    return interfaceData;
  }

  public void setInterfaceData(List<AllocateComputeRequestInterfaceData> interfaceData) {
    this.interfaceData = interfaceData;
  }

  public AllocateComputeRequest affinityOrAntiAffinityConstraints(List<AllocateComputeRequestAffinityOrAntiAffinityConstraints> affinityOrAntiAffinityConstraints) {
    this.affinityOrAntiAffinityConstraints = affinityOrAntiAffinityConstraints;
    return this;
  }

  public AllocateComputeRequest addAffinityOrAntiAffinityConstraintsItem(AllocateComputeRequestAffinityOrAntiAffinityConstraints affinityOrAntiAffinityConstraintsItem) {
    this.affinityOrAntiAffinityConstraints.add(affinityOrAntiAffinityConstraintsItem);
    return this;
  }

  /**
   * A list of elements with affinity or anti affinity information of the virtualised compute resource to allocate. There should be a relation between the constraints defined in the different elements of the list.
   * @return affinityOrAntiAffinityConstraints
   **/
  @JsonProperty("affinityOrAntiAffinityConstraints")
  @ApiModelProperty(required = true, value = "A list of elements with affinity or anti affinity information of the virtualised compute resource to allocate. There should be a relation between the constraints defined in the different elements of the list.")
  @NotNull
  public List<AllocateComputeRequestAffinityOrAntiAffinityConstraints> getAffinityOrAntiAffinityConstraints() {
    return affinityOrAntiAffinityConstraints;
  }

  public void setAffinityOrAntiAffinityConstraints(List<AllocateComputeRequestAffinityOrAntiAffinityConstraints> affinityOrAntiAffinityConstraints) {
    this.affinityOrAntiAffinityConstraints = affinityOrAntiAffinityConstraints;
  }

  public AllocateComputeRequest userData(AllocateComputeRequestUserData userData) {
    this.userData = userData;
    return this;
  }

  /**
   * Get userData
   * @return userData
   **/
  @JsonProperty("userData")
  @ApiModelProperty(required = true, value = "")
  @NotNull
  public AllocateComputeRequestUserData getUserData() {
    return userData;
  }

  public void setUserData(AllocateComputeRequestUserData userData) {
    this.userData = userData;
  }

  public AllocateComputeRequest computeFlavourId(String computeFlavourId) {
    this.computeFlavourId = computeFlavourId;
    return this;
  }

  /**
   * Identifier of the Compute Flavour that provides information about the particular memory, CPU and disk resources for virtualised compute resource to allocate. The Compute Flavour is created with Create Compute Flavour operation
   * @return computeFlavourId
   **/
  @JsonProperty("computeFlavourId")
  @ApiModelProperty(required = true, value = "Identifier of the Compute Flavour that provides information about the particular memory, CPU and disk resources for virtualised compute resource to allocate. The Compute Flavour is created with Create Compute Flavour operation")
  @NotNull
  public String getComputeFlavourId() {
    return computeFlavourId;
  }

  public void setComputeFlavourId(String computeFlavourId) {
    this.computeFlavourId = computeFlavourId;
  }

  public AllocateComputeRequest resourceGroupId(String resourceGroupId) {
    this.resourceGroupId = resourceGroupId;
    return this;
  }

  /**
   * Unique identifier of the \&quot;infrastructure resource group\&quot;, logical grouping of virtual resources assigned to a tenant within an Infrastructure Domain.
   * @return resourceGroupId
   **/
  @JsonProperty("resourceGroupId")
  @ApiModelProperty(required = true, value = "Unique identifier of the \"infrastructure resource group\", logical grouping of virtual resources assigned to a tenant within an Infrastructure Domain.")
  @NotNull
  public String getResourceGroupId() {
    return resourceGroupId;
  }

  public void setResourceGroupId(String resourceGroupId) {
    this.resourceGroupId = resourceGroupId;
  }

  public AllocateComputeRequest metadata(Object metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * List of metadata key-value pairs used by the consumer to associate meaningful metadata to the related virtualised resource.
   * @return metadata
   **/
  @JsonProperty("metadata")
  @ApiModelProperty(required = true, value = "List of metadata key-value pairs used by the consumer to associate meaningful metadata to the related virtualised resource.")
  @NotNull
  public Object getMetadata() {
    return metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }

  public AllocateComputeRequest vcImageId(String vcImageId) {
    this.vcImageId = vcImageId;
    return this;
  }

  /**
   * Identifier of the virtualisation container software image (e.g. a virtual machine image). Cardinality can be 0 if an \&quot;empty\&quot; virtualisation container is allocated. 
   * @return vcImageId
   **/
  @JsonProperty("vcImageId")
  @ApiModelProperty(required = true, value = "Identifier of the virtualisation container software image (e.g. a virtual machine image). Cardinality can be 0 if an \"empty\" virtualisation container is allocated. ")
  @NotNull
  public String getVcImageId() {
    return vcImageId;
  }

  public void setVcImageId(String vcImageId) {
    this.vcImageId = vcImageId;
  }

  public AllocateComputeRequest computeName(String computeName) {
    this.computeName = computeName;
    return this;
  }

  /**
   * Name provided by the consumer for the virtualised compute resource to allocate. It can be used for identifying resources from consumer side.
   * @return computeName
   **/
  @JsonProperty("computeName")
  @ApiModelProperty(required = true, value = "Name provided by the consumer for the virtualised compute resource to allocate. It can be used for identifying resources from consumer side.")
  @NotNull
  public String getComputeName() {
    return computeName;
  }

  public void setComputeName(String computeName) {
    this.computeName = computeName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AllocateComputeRequest allocateComputeRequest = (AllocateComputeRequest) o;
    return Objects.equals(this.locationConstraints, allocateComputeRequest.locationConstraints) &&
        Objects.equals(this.reservationId, allocateComputeRequest.reservationId) &&
        Objects.equals(this.interfaceData, allocateComputeRequest.interfaceData) &&
        Objects.equals(this.affinityOrAntiAffinityConstraints, allocateComputeRequest.affinityOrAntiAffinityConstraints) &&
        Objects.equals(this.userData, allocateComputeRequest.userData) &&
        Objects.equals(this.computeFlavourId, allocateComputeRequest.computeFlavourId) &&
        Objects.equals(this.resourceGroupId, allocateComputeRequest.resourceGroupId) &&
        Objects.equals(this.metadata, allocateComputeRequest.metadata) &&
        Objects.equals(this.vcImageId, allocateComputeRequest.vcImageId) &&
        Objects.equals(this.computeName, allocateComputeRequest.computeName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locationConstraints, reservationId, interfaceData, affinityOrAntiAffinityConstraints, userData, computeFlavourId, resourceGroupId, metadata, vcImageId, computeName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AllocateComputeRequest {\n");
    
    sb.append("    locationConstraints: ").append(toIndentedString(locationConstraints)).append("\n");
    sb.append("    reservationId: ").append(toIndentedString(reservationId)).append("\n");
    sb.append("    interfaceData: ").append(toIndentedString(interfaceData)).append("\n");
    sb.append("    affinityOrAntiAffinityConstraints: ").append(toIndentedString(affinityOrAntiAffinityConstraints)).append("\n");
    sb.append("    userData: ").append(toIndentedString(userData)).append("\n");
    sb.append("    computeFlavourId: ").append(toIndentedString(computeFlavourId)).append("\n");
    sb.append("    resourceGroupId: ").append(toIndentedString(resourceGroupId)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    vcImageId: ").append(toIndentedString(vcImageId)).append("\n");
    sb.append("    computeName: ").append(toIndentedString(computeName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

