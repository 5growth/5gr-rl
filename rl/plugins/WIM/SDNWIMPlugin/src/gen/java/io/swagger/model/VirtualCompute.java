/*
 * WIM Manager API
 * WIM Manager API
 *
 * OpenAPI spec version: 0.0.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.model.VirtualComputeVirtualCpu;
import io.swagger.model.VirtualComputeVirtualMemory;
import io.swagger.model.VirtualComputeVirtualNetworkInterface;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;

/**
 * VirtualCompute
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2018-11-02T11:54:01.688+01:00")
public class VirtualCompute   {
  @JsonProperty("virtualCpu")
  private VirtualComputeVirtualCpu virtualCpu = null;

  @JsonProperty("virtualDisks")
  private String virtualDisks = null;

  @JsonProperty("vcImageId")
  private String vcImageId = null;

  @JsonProperty("flavourId")
  private String flavourId = null;

  @JsonProperty("accelerationCapability")
  private List<String> accelerationCapability = new ArrayList<String>();

  @JsonProperty("computeName")
  private String computeName = null;

  @JsonProperty("virtualNetworkInterface")
  private List<VirtualComputeVirtualNetworkInterface> virtualNetworkInterface = new ArrayList<VirtualComputeVirtualNetworkInterface>();

  @JsonProperty("zoneId")
  private String zoneId = null;

  @JsonProperty("computeId")
  private String computeId = null;

  @JsonProperty("operationalState")
  private String operationalState = null;

  @JsonProperty("virtualMemory")
  private VirtualComputeVirtualMemory virtualMemory = null;

  @JsonProperty("hostId")
  private String hostId = null;

  public VirtualCompute virtualCpu(VirtualComputeVirtualCpu virtualCpu) {
    this.virtualCpu = virtualCpu;
    return this;
  }

  /**
   * Get virtualCpu
   * @return virtualCpu
   **/
  @JsonProperty("virtualCpu")
  @ApiModelProperty(required = true, value = "")
  @NotNull
  public VirtualComputeVirtualCpu getVirtualCpu() {
    return virtualCpu;
  }

  public void setVirtualCpu(VirtualComputeVirtualCpu virtualCpu) {
    this.virtualCpu = virtualCpu;
  }

  public VirtualCompute virtualDisks(String virtualDisks) {
    this.virtualDisks = virtualDisks;
    return this;
  }

  /**
   * Element with information of the virtualised storage resources (volumes, ephemeral that are attached to the compute resource.)
   * @return virtualDisks
   **/
  @JsonProperty("virtualDisks")
  @ApiModelProperty(required = true, value = "Element with information of the virtualised storage resources (volumes, ephemeral that are attached to the compute resource.)")
  @NotNull
  public String getVirtualDisks() {
    return virtualDisks;
  }

  public void setVirtualDisks(String virtualDisks) {
    this.virtualDisks = virtualDisks;
  }

  public VirtualCompute vcImageId(String vcImageId) {
    this.vcImageId = vcImageId;
    return this;
  }

  /**
   * Identifier of the virtualisation container software image (e.g. virtual machine image). Cardinality can be 0 if an \&quot;empty\&quot; virtualisation container is allocated.
   * @return vcImageId
   **/
  @JsonProperty("vcImageId")
  @ApiModelProperty(required = true, value = "Identifier of the virtualisation container software image (e.g. virtual machine image). Cardinality can be 0 if an \"empty\" virtualisation container is allocated.")
  @NotNull
  public String getVcImageId() {
    return vcImageId;
  }

  public void setVcImageId(String vcImageId) {
    this.vcImageId = vcImageId;
  }

  public VirtualCompute flavourId(String flavourId) {
    this.flavourId = flavourId;
    return this;
  }

  /**
   * Identifier of the given compute flavour used to instantiate this virtual compute.
   * @return flavourId
   **/
  @JsonProperty("flavourId")
  @ApiModelProperty(required = true, value = "Identifier of the given compute flavour used to instantiate this virtual compute.")
  @NotNull
  public String getFlavourId() {
    return flavourId;
  }

  public void setFlavourId(String flavourId) {
    this.flavourId = flavourId;
  }

  public VirtualCompute accelerationCapability(List<String> accelerationCapability) {
    this.accelerationCapability = accelerationCapability;
    return this;
  }

  public VirtualCompute addAccelerationCapabilityItem(String accelerationCapabilityItem) {
    this.accelerationCapability.add(accelerationCapabilityItem);
    return this;
  }

  /**
   * Selected acceleration capabilities (e.g. crypto, GPU) from the set of capabilities offered by the compute node acceleration resources. The cardinality can be 0, if no particular acceleration capability is provided.
   * @return accelerationCapability
   **/
  @JsonProperty("accelerationCapability")
  @ApiModelProperty(required = true, value = "Selected acceleration capabilities (e.g. crypto, GPU) from the set of capabilities offered by the compute node acceleration resources. The cardinality can be 0, if no particular acceleration capability is provided.")
  @NotNull
  public List<String> getAccelerationCapability() {
    return accelerationCapability;
  }

  public void setAccelerationCapability(List<String> accelerationCapability) {
    this.accelerationCapability = accelerationCapability;
  }

  public VirtualCompute computeName(String computeName) {
    this.computeName = computeName;
    return this;
  }

  /**
   * Name of the virtualised compute resource.
   * @return computeName
   **/
  @JsonProperty("computeName")
  @ApiModelProperty(required = true, value = "Name of the virtualised compute resource.")
  @NotNull
  public String getComputeName() {
    return computeName;
  }

  public void setComputeName(String computeName) {
    this.computeName = computeName;
  }

  public VirtualCompute virtualNetworkInterface(List<VirtualComputeVirtualNetworkInterface> virtualNetworkInterface) {
    this.virtualNetworkInterface = virtualNetworkInterface;
    return this;
  }

  public VirtualCompute addVirtualNetworkInterfaceItem(VirtualComputeVirtualNetworkInterface virtualNetworkInterfaceItem) {
    this.virtualNetworkInterface.add(virtualNetworkInterfaceItem);
    return this;
  }

  /**
   * Element with information of the instantiated virtual network interfaces of the compute resource.
   * @return virtualNetworkInterface
   **/
  @JsonProperty("virtualNetworkInterface")
  @ApiModelProperty(required = true, value = "Element with information of the instantiated virtual network interfaces of the compute resource.")
  @NotNull
  public List<VirtualComputeVirtualNetworkInterface> getVirtualNetworkInterface() {
    return virtualNetworkInterface;
  }

  public void setVirtualNetworkInterface(List<VirtualComputeVirtualNetworkInterface> virtualNetworkInterface) {
    this.virtualNetworkInterface = virtualNetworkInterface;
  }

  public VirtualCompute zoneId(String zoneId) {
    this.zoneId = zoneId;
    return this;
  }

  /**
   * If present, it identifies the Resource Zone where the virtual compute resources have been allocated.
   * @return zoneId
   **/
  @JsonProperty("zoneId")
  @ApiModelProperty(required = true, value = "If present, it identifies the Resource Zone where the virtual compute resources have been allocated.")
  @NotNull
  public String getZoneId() {
    return zoneId;
  }

  public void setZoneId(String zoneId) {
    this.zoneId = zoneId;
  }

  public VirtualCompute computeId(String computeId) {
    this.computeId = computeId;
    return this;
  }

  /**
   * Identifier of the virtualised compute resource.
   * @return computeId
   **/
  @JsonProperty("computeId")
  @ApiModelProperty(required = true, value = "Identifier of the virtualised compute resource.")
  @NotNull
  public String getComputeId() {
    return computeId;
  }

  public void setComputeId(String computeId) {
    this.computeId = computeId;
  }

  public VirtualCompute operationalState(String operationalState) {
    this.operationalState = operationalState;
    return this;
  }

  /**
   * Operational state of the compute resource.
   * @return operationalState
   **/
  @JsonProperty("operationalState")
  @ApiModelProperty(required = true, value = "Operational state of the compute resource.")
  @NotNull
  public String getOperationalState() {
    return operationalState;
  }

  public void setOperationalState(String operationalState) {
    this.operationalState = operationalState;
  }

  public VirtualCompute virtualMemory(VirtualComputeVirtualMemory virtualMemory) {
    this.virtualMemory = virtualMemory;
    return this;
  }

  /**
   * Get virtualMemory
   * @return virtualMemory
   **/
  @JsonProperty("virtualMemory")
  @ApiModelProperty(required = true, value = "")
  @NotNull
  public VirtualComputeVirtualMemory getVirtualMemory() {
    return virtualMemory;
  }

  public void setVirtualMemory(VirtualComputeVirtualMemory virtualMemory) {
    this.virtualMemory = virtualMemory;
  }

  public VirtualCompute hostId(String hostId) {
    this.hostId = hostId;
    return this;
  }

  /**
   * Identifier of the host the virtualised compute resource is allocated on.
   * @return hostId
   **/
  @JsonProperty("hostId")
  @ApiModelProperty(required = true, value = "Identifier of the host the virtualised compute resource is allocated on.")
  @NotNull
  public String getHostId() {
    return hostId;
  }

  public void setHostId(String hostId) {
    this.hostId = hostId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VirtualCompute virtualCompute = (VirtualCompute) o;
    return Objects.equals(this.virtualCpu, virtualCompute.virtualCpu) &&
        Objects.equals(this.virtualDisks, virtualCompute.virtualDisks) &&
        Objects.equals(this.vcImageId, virtualCompute.vcImageId) &&
        Objects.equals(this.flavourId, virtualCompute.flavourId) &&
        Objects.equals(this.accelerationCapability, virtualCompute.accelerationCapability) &&
        Objects.equals(this.computeName, virtualCompute.computeName) &&
        Objects.equals(this.virtualNetworkInterface, virtualCompute.virtualNetworkInterface) &&
        Objects.equals(this.zoneId, virtualCompute.zoneId) &&
        Objects.equals(this.computeId, virtualCompute.computeId) &&
        Objects.equals(this.operationalState, virtualCompute.operationalState) &&
        Objects.equals(this.virtualMemory, virtualCompute.virtualMemory) &&
        Objects.equals(this.hostId, virtualCompute.hostId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(virtualCpu, virtualDisks, vcImageId, flavourId, accelerationCapability, computeName, virtualNetworkInterface, zoneId, computeId, operationalState, virtualMemory, hostId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VirtualCompute {\n");
    
    sb.append("    virtualCpu: ").append(toIndentedString(virtualCpu)).append("\n");
    sb.append("    virtualDisks: ").append(toIndentedString(virtualDisks)).append("\n");
    sb.append("    vcImageId: ").append(toIndentedString(vcImageId)).append("\n");
    sb.append("    flavourId: ").append(toIndentedString(flavourId)).append("\n");
    sb.append("    accelerationCapability: ").append(toIndentedString(accelerationCapability)).append("\n");
    sb.append("    computeName: ").append(toIndentedString(computeName)).append("\n");
    sb.append("    virtualNetworkInterface: ").append(toIndentedString(virtualNetworkInterface)).append("\n");
    sb.append("    zoneId: ").append(toIndentedString(zoneId)).append("\n");
    sb.append("    computeId: ").append(toIndentedString(computeId)).append("\n");
    sb.append("    operationalState: ").append(toIndentedString(operationalState)).append("\n");
    sb.append("    virtualMemory: ").append(toIndentedString(virtualMemory)).append("\n");
    sb.append("    hostId: ").append(toIndentedString(hostId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

