---
swagger: "2.0"
#basePath: "/kubernetes"
info:
  description: "MTP Manager API"
  version: "1.0"
  title: "MTP Manager API"
  termsOfService: "/tos"
paths:
  /compute_resources:
    get:
      tags:
      - "virtualisedComputeResources"
      operationId: "query_resources"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "computeId"
        in: "query"
        description: "Identifier(s) of the abstract compute resource(s) to be terminated."
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        200:
          description: "Element containing information about the virtual compute resource(s)\
            \ matching the filter. The cardinality can be 0 if no matching compute\
            \ resources exist."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/VirtualCompute"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.virtualised_compute_resources_controller"
    post:
      tags:
      - "virtualisedComputeResources"
      operationId: "allocate_compute"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/AllocateComputeRequest"
      responses:
        201:
          description: "Element containing information of the newly instantiated virtualised\
            \ compute resource."
          schema:
            $ref: "#/definitions/VirtualCompute"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        409:
          description: "software image already added"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.virtualised_compute_resources_controller"
    delete:
      tags:
      - "virtualisedComputeResources"
      operationId: "terminate_abstract_resources"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "computeId"
        in: "query"
        description: "Identifier(s) of the abstract compute resource(s) to be terminated."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        200:
          description: "Identifier(s) of the virtualised compute resource(s) successfully\
            \ terminated."
          schema:
            type: "array"
            items:
              type: "string"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.virtualised_compute_resources_controller"
  /compute_resources/capacities:
    get:
      tags:
      - "virtualisedComputeResources"
      operationId: "query_compute_capacity"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "ComputeResourceTypeId"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "The capacity during the requested time period. The scope is\
            \ according to parameter zoneId of the request during the time interval."
          schema:
            $ref: "#/definitions/CapacityInformation"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.virtualised_compute_resources_controller"
  /compute_resources/flavours:
    get:
      tags:
      - "virtualisedComputeResources"
      operationId: "query_flavors"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Element containing information about the virtual compute resource(s)\
            \ matching the filter. The cardinality can be 0 if no matching compute\
            \ resources exist."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/VirtualComputeFlavour"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.virtualised_compute_resources_controller"
    post:
      tags:
      - "virtualisedComputeResources"
      operationId: "create_flavour"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "Flavour"
        required: true
        schema:
          $ref: "#/definitions/VirtualComputeFlavour"
      responses:
        201:
          description: "Identifier of the created Compute Flavour."
          schema:
            type: "string"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        409:
          description: "flavour already added"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.virtualised_compute_resources_controller"
  /compute_resources/flavours/{id}:
    delete:
      tags:
      - "virtualisedComputeResources"
      operationId: "delete_flavours"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Identifier of the Compute Flavour to be deleted."
        required: true
        type: "string"
      responses:
        200:
          description: "No output parameters"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.virtualised_compute_resources_controller"
  /compute_resources/information:
    get:
      tags:
      - "virtualisedComputeResources"
      operationId: "query_compute_information"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "zoneId"
        in: "query"
        description: "Filter defining the information of consumable virtualised resources\
          \ on which the query applies."
        required: true
        type: "string"
      responses:
        200:
          description: "Virtualised compute resource information in the VIM that satisfies\
            \ the query condition."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/VirtualComputeResourceInformation"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.virtualised_compute_resources_controller"
  /compute_resources/nfvi_pop_compute_information:
    get:
      tags:
      - "virtualisedComputeResources"
      operationId: "query_nfvi_po_p_compute_information"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "The filtered information that has been retrieved. The cardinality\
            \ can be 0 if no matching information exist."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/NfviPop"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.virtualised_compute_resources_controller"
  /compute_resources/resource_zones:
    get:
      tags:
      - "virtualisedComputeResources"
      operationId: "query_compute_resource_zone"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "The filtered information that has been retrieved about the\
            \ Resource Zone. The cardinality can be 0 if no matching information exist."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ResourceZone"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.virtualised_compute_resources_controller"
  /healthz:
    get:
      summary: "Healthcheck"
      description: "<br/>"
      operationId: "healthz_get"
      parameters: []
      responses:
        200:
          description: "Healthcheck"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.default_controller"
  /information:
    get:
      tags:
      - "virtualisedNetworkResourcesInformation"
      operationId: "query_network_information"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "informationQueryFilter"
        description: "Filter defining the information of consumable virtualised resources\
          \ on which the query applies."
        required: true
        schema:
          $ref: "#/definitions/Filter"
      responses:
        200:
          description: "Virtualised network resource information in the VIM that satisfies\
            \ the query condition."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/VirtualNetworkResourceInformation"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.virtualised_network_resources_information_controller"
  /network_resources:
    get:
      tags:
      - "virtualisedNetworkResources"
      operationId: "vi_mquery_networks"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "networkQueryFilter"
        description: "Query filter based on e.g. name, identifier, meta-data information\
          \ or status information, expressing the type of information to be retrieved.\
          \ It can also be used to specify one or more resources to be queried by\
          \ providing their identifiers."
        required: true
        schema:
          $ref: "#/definitions/Filter"
      responses:
        200:
          description: "Element containing information about the virtual network resource(s)\
            \ matching the filter. The cardinality can be 0 if no matching network\
            \ resources exist."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/VirtualNetwork"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.virtualised_network_resources_controller"
    post:
      tags:
      - "virtualisedNetworkResources"
      operationId: "vi_mallocate_network"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "params"
        required: true
        schema:
          $ref: "#/definitions/AllocateNetworkRequest"
      responses:
        201:
          description: "Identifier of the created Compute Flavour."
          schema:
            $ref: "#/definitions/AllocateNetworkResult"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        409:
          description: "network already added"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.virtualised_network_resources_controller"
    delete:
      tags:
      - "virtualisedNetworkResources"
      operationId: "vi_mterminate_networks"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "networkResourceId"
        in: "query"
        description: "Identifier of the virtualised network resource(s) to be terminated."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        200:
          description: "Identifier(s) of the virtualised network resource(s) successfully\
            \ terminated."
          schema:
            type: "array"
            items:
              type: "string"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.virtualised_network_resources_controller"
  /network_resources/capacities:
    get:
      tags:
      - "virtualisedNetworkResources"
      operationId: "query_network_capacity"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "QueryNetworkCapacityRequest"
        required: true
        schema:
          $ref: "#/definitions/QueryNetworkCapacityRequest"
      responses:
        200:
          description: "The capacity during the requested time period. The scope is\
            \ according to parameter zoneId of the request during the time interval."
          schema:
            $ref: "#/definitions/CapacityInformation"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.virtualised_network_resources_controller"
  /network_resources/nfvi-pop-network-information:
    get:
      tags:
      - "virtualisedNetworkResources"
      operationId: "query_nfvi_po_p_network_information"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "NfviPopNetworkInformationRequest"
        description: "Input filter for selecting information to query."
        required: true
        schema:
          $ref: "#/definitions/Filter"
      responses:
        200:
          description: "The filtered information that has been retrieved. The cardinality\
            \ can be 0 if no matching information exist."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/NfviPop"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.virtualised_network_resources_controller"
  /quotas/compute_resources:
    get:
      tags:
      - "virtualisedResourceQuota"
      operationId: "query_compute_quota"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Element containing information about the quota resource. The\
            \ cardinality can be 0 if no matching quota exists."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/VirtualComputeQuota"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.virtualised_resource_quota_controller"
    post:
      tags:
      - "virtualisedResourceQuota"
      operationId: "create_compute_quota"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/CreateComputeResourceQuotaRequest"
      responses:
        201:
          description: "Element containing information about the quota resource."
          schema:
            $ref: "#/definitions/VirtualComputeQuota"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.virtualised_resource_quota_controller"
    delete:
      tags:
      - "virtualisedResourceQuota"
      operationId: "terminate_compute_quota"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "resourceGroupId"
        in: "query"
        description: "Unique identifier of the \"infrastructure resource group\",\
          \ logical grouping of virtual resources assigned to a tenant within an Infrastructure\
          \ Domain."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        200:
          description: "Unique identifier of the \"infrastructure resource group\"\
            , logical grouping of virtual resources assigned to a tenant within an\
            \ Infrastructure Domain."
          schema:
            type: "array"
            items:
              type: "string"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.virtualised_resource_quota_controller"
  /quotas/network_resources:
    get:
      tags:
      - "virtualisedResourceQuota"
      operationId: "query_network_quota"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Element containing information about the quota resource(s)\
            \ matching the filter. The cardinality can be 0 if no matching quota exists."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/VirtualNetworkQuota"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.virtualised_resource_quota_controller"
    post:
      tags:
      - "virtualisedResourceQuota"
      operationId: "create_network_quota"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/CreateNetworkResourceQuotaRequest"
      responses:
        201:
          description: "Element containing information about the quota resource."
          schema:
            $ref: "#/definitions/VirtualNetworkQuota"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        409:
          description: ""
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.virtualised_resource_quota_controller"
    delete:
      tags:
      - "virtualisedResourceQuota"
      operationId: "terminate_network_quota"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "resourceGroupId"
        in: "query"
        description: "Unique identifier of the \"infrastructure resource group\",\
          \ logical grouping of virtual resources assigned to a tenant within an Infrastructure\
          \ Domain."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        200:
          description: "Unique identifier of the \"infrastructure resource group\"\
            , logical grouping of virtual resources assigned to a tenant within an\
            \ Infrastructure Domain."
          schema:
            $ref: "#/definitions/ResourceGroupIds"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.virtualised_resource_quota_controller"
  /reservations/compute_resources:
    get:
      tags:
      - "virtualisedResourceReservation"
      operationId: "query_compute_reservation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Element containing information about the reserved resource.\
            \ Cardinality is 0 if the query did not return any result."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ReservedVirtualCompute"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.virtualised_resource_reservation_controller"
    post:
      tags:
      - "virtualisedResourceReservation"
      operationId: "create_compute_reservation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/CreateComputeResourceReservationRequest"
      responses:
        201:
          description: "Element containing information about the reserved resource."
          schema:
            $ref: "#/definitions/ReservedVirtualCompute"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        409:
          description: ""
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.virtualised_resource_reservation_controller"
    delete:
      tags:
      - "virtualisedResourceReservation"
      operationId: "terminate_compute_reservation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "reservationId"
        in: "query"
        description: "Identifier of the resource reservation(s) to terminate."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        200:
          description: "Identifier of the resource reservation(s) successfully terminated."
          schema:
            type: "array"
            items:
              type: "string"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.virtualised_resource_reservation_controller"
  /reservations/network_resources:
    get:
      tags:
      - "virtualisedResourceReservation"
      operationId: "query_network_reservation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Element containing information about the reserved resource.\
            \ Cardinality is 0 if the query did not return any result."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ReservedVirtualNetwork"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.virtualised_resource_reservation_controller"
    post:
      tags:
      - "virtualisedResourceReservation"
      operationId: "create_network_reservation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/CreateNetworkResourceReservationRequest"
      responses:
        201:
          description: "Element containing information about the reserved resource."
          schema:
            $ref: "#/definitions/ReservedVirtualNetwork"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        409:
          description: ""
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.virtualised_resource_reservation_controller"
    delete:
      tags:
      - "virtualisedResourceReservation"
      operationId: "terminate_network_reservation"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "reservationId"
        in: "query"
        description: "Identifier of the resource reservation(s) to terminate."
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        200:
          description: "Identifier of the resource reservation(s) successfully terminated."
          schema:
            type: "array"
            items:
              type: "string"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.virtualised_resource_reservation_controller"
  /software_images:
    get:
      tags:
      - "softwareImages"
      operationId: "query_software_images"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "The information of all software images matching the query."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/SoftwareImageInformation"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.software_images_controller"
    post:
      tags:
      - "softwareImages"
      operationId: "add_software_image"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/SoftwareImageAddQuery"
      responses:
        201:
          description: "Metadata about the Software Image that has been added."
          schema:
            $ref: "#/definitions/SoftwareImageInformation"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        409:
          description: "software image already added"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.software_images_controller"
  /software_images/{id}:
    get:
      tags:
      - "softwareImages"
      operationId: "query_software_image"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The identifier of the software image to be queried."
        required: true
        type: "string"
      responses:
        200:
          description: "The information of the software image matching the query."
          schema:
            $ref: "#/definitions/SoftwareImageInformation"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.software_images_controller"
    delete:
      tags:
      - "softwareImages"
      operationId: "delete_software_image"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The identifier of the software image to be deleted."
        required: true
        type: "string"
      responses:
        200:
          description: "The identifier of the software image successfully deleted."
          schema:
            type: "string"
        400:
          description: "Bad request"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not found"
      x-swagger-router-controller: "mtp_plugin_kubernetes.controllers.software_images_controller"
definitions:
  Gateways:
    type: "array"
    items:
      $ref: "#/definitions/Gateways_inner"
  virtualLinks:
    type: "array"
    items:
      $ref: "#/definitions/virtualLinks_inner"
  NetworkIds:
    type: "object"
    required:
    - "networkId"
    properties:
      networkId:
        type: "string"
        description: "Identifier of the virtualised network resource(s) to be terminated."
    example:
      networkId: "networkId"
  AllocateParameters:
    type: "object"
    required:
    - "affinityOrAntiAffinityConstraints"
    - "bandwidth"
    - "delay"
    - "egressPointPortAddress"
    - "ingressPointIPAddress"
    - "ingressPointPortAddress"
    - "isShared"
    - "layer3Attributes"
    - "locationConstraints"
    - "metadata"
    - "networkId"
    - "networkQoS"
    - "networkResourceName"
    - "networkResourceType"
    - "networkType"
    - "portType"
    - "reservationId"
    - "resourceGroupId"
    - "segmentId"
    - "segmentType"
    - "sharingCriteria"
    - "typeNetworkData"
    - "typeNetworkPortData"
    - "typeSubnetData"
    - "wanLinkId"
    properties:
      locationConstraints:
        type: "string"
        description: "Controls the visibility of the image. In case of \"private\"\
          \ value the image is available only for the tenant assigned to the provided\
          \ resourceGroupId and the administrator tenants of the VIM while in case\
          \ of \"public\" value, all tenants of the VIM can use the image."
      reservationId:
        type: "string"
        description: "Identifier of the resource reservation applicable to this virtualised\
          \ resource management operation."
      typeNetworkData:
        type: "string"
        description: "The network data provides information about the particular virtual\
          \ network resource to create. Cardinality can be \"0\" depending on the\
          \ value of networkResourceType."
      affinityOrAntiAffinityConstraints:
        type: "string"
        description: "The binary software image file."
      typeNetworkPortData:
        type: "string"
        description: "The binary software image file."
      resourceGroupId:
        type: "string"
        description: "Unique identifier of the \"infrastructure resource group\",\
          \ logical grouping of virtual resources assigned to a tenant within an Infrastructure\
          \ Domain."
      metadata:
        type: "string"
        description: "The binary software image file."
      networkResourceType:
        type: "string"
        description: "Type of virtualised network resource. Possible values are: \"\
          network\", \"subnet\" or network-port."
      networkResourceName:
        type: "string"
        description: "Name provided by the consumer for the virtualised network resource\
          \ to allocate. It can be used for identifying resources from consumer side."
      typeSubnetData:
        type: "string"
        description: "The subnet data provides information about the particular sub-network\
          \ resource to create."
      bandwidth:
        type: "number"
        description: "The bandwidth of the virtual network interface (in Mbps)."
      delay:
        type: "string"
        description: "Transmission delay."
      networkType:
        type: "string"
        description: "The type of network that maps to the virtualised network."
      segmentType:
        type: "string"
        description: "The isolated segment for the virtualised network."
      networkQoS:
        type: "string"
        description: "Element providing information about Quality of Service attributes\
          \ that the network shall support."
      isShared:
        type: "boolean"
        description: "It defines whether the virtualised network is shared among consumers."
      sharingCriteria:
        type: "string"
        description: "Only present for shared networks. Indicate the sharing criteria\
          \ for this network. These criteria might be a list of authorized consumers."
      layer3Attributes:
        type: "string"
        description: "The attribute allows setting up a network providing defined\
          \ layer 3 connectivity."
      portType:
        type: "string"
        description: "Type of network port."
      networkId:
        type: "string"
        description: "Identifier of the network that the port belongs to."
      segmentId:
        type: "string"
        description: "The isolated segment the network port belongs to."
      ingressPointIPAddress:
        type: "string"
        description: "The ingress point IP Address."
      ingressPointPortAddress:
        type: "string"
        description: "The ingress point Port(interface) Address."
      egressPointIPAddress:
        type: "string"
        description: "The engress point IP Address."
      egressPointPortAddress:
        type: "string"
        description: "The engress point Port(interface) Address."
      wanLinkId:
        type: "string"
        description: "The logical link ID between two nodes."
    example:
      metadata: "metadata"
      wanLinkId: "wanLinkId"
      affinityOrAntiAffinityConstraints: "affinityOrAntiAffinityConstraints"
      locationConstraints: "locationConstraints"
      ingressPointPortAddress: "ingressPointPortAddress"
      networkResourceName: "networkResourceName"
      reservationId: "reservationId"
      egressPointPortAddress: "egressPointPortAddress"
      segmentId: "segmentId"
      networkQoS: "networkQoS"
      resourceGroupId: "resourceGroupId"
      networkId: "networkId"
      networkType: "networkType"
      sharingCriteria: "sharingCriteria"
      networkResourceType: "networkResourceType"
      egressPointIPAddress: "egressPointIPAddress"
      layer3Attributes: "layer3Attributes"
      bandwidth: 0.80082819046101150206595775671303272247314453125
      portType: "portType"
      typeSubnetData: "typeSubnetData"
      ingressPointIPAddress: "ingressPointIPAddress"
      delay: "delay"
      typeNetworkPortData: "typeNetworkPortData"
      typeNetworkData: "typeNetworkData"
      segmentType: "segmentType"
      isShared: true
  AllocateReply:
    type: "object"
    required:
    - "networkId"
    - "networkType"
    - "segmentType"
    properties:
      networkId:
        type: "string"
        description: "Identifier of the network."
      networkType:
        type: "string"
        description: "The type of network that maps to the virtualised network (VLAN,\
          \ VXLAN, L3VPN)."
      segmentType:
        type: "string"
        description: "The isolated segment for the virtualised network (i.e., vlan\
          \ tag)"
    example:
      networkId: "networkId"
      networkType: "networkType"
      segmentType: "segmentType"
  NfviPops:
    type: "array"
    items:
      $ref: "#/definitions/NfviPops_inner"
  networkLayer:
    type: "string"
    description: "5GT - Describes the network layer capabilities of the Gw Layer 2\
      \ (L2) or Layer 3 (L3), i.e. Ethernet, IP, IP/MPLS -- see ETSI NFV-IFA 022 6.4.5.3."
  interNfviPopNetworkType:
    type: "string"
    description: "5GT - Describes the network connectivity types, e.g., L2-VPN, EoMPLS,\
      \ VXLAN, MPLS over GRE, ... -- see ETSI NFV-IFA 022 6.4.5.3."
  interNfviPopNetworkTopology:
    type: "string"
    description: "5GT - Describes the network connectivity topology, i.e., p2p, mesh,\
      \ tree -- see ETSI NFV-IFA 022 6.4.5.2."
  logicalLinkInterNfviPops:
    type: "array"
    items:
      $ref: "#/definitions/logicalLinkInterNfviPops_inner"
  interNfviPopConnectivityRequest:
    type: "object"
    required:
    - "interNfviPopNetworkType"
    - "logicalLinkPathList"
    - "metaData"
    - "networkLayer"
    - "reqBandwidth"
    - "reqLatency"
    properties:
      logicalLinkPathList:
        $ref: "#/definitions/logicalLinkPathList"
      reqBandwidth:
        type: "number"
        description: "requested bandwidth (in Mbps)."
      reqLatency:
        type: "number"
        description: "5GT - requested maximum end-to-end latency (expressed in ms)"
      networkLayer:
        $ref: "#/definitions/networkLayer"
      interNfviPopNetworkType:
        $ref: "#/definitions/interNfviPopNetworkType"
      metaData:
        $ref: "#/definitions/metaData"
  interNfviPopConnnectivityId:
    type: "string"
    description: "Identifier provided by the MTP to identify the inter-Nfvi-Pop connectivity."
  metaData:
    type: "array"
    description: "metaData information used to carry ionformat metadata."
    items:
      $ref: "#/definitions/metaData_inner"
  interNfviPopNetworkSegmentType:
    type: "string"
    description: "5GT - provides the selected segment id, e.g., VLAN Id, VXLAN Id,\
      \ ... -- see ETSI NFV-IFA 022 6.4.5.2."
  deleteInterNfviPopConnectivityRequest:
    type: "object"
    required:
    - "interNfviPopConnnectivityIdList"
    - "metaData"
    properties:
      interNfviPopConnnectivityIdList:
        $ref: "#/definitions/interNfviPopConnnectivityIdList"
      metaData:
        $ref: "#/definitions/metaData"
  logicalLinkAttributes:
    type: "object"
    required:
    - "dstGwIpAddress"
    - "localLinkId"
    - "logicalLinkId"
    - "remoteLinkId"
    - "srcGwIpAddress"
    properties:
      logicalLinkId:
        type: "string"
        description: "(numbered) Identifier of the logical link"
      srcGwIpAddress:
        type: "string"
        description: "5GT - Source NFVI-PoP Gw IPv4 Address in terms of A.B.C.D (/32)."
      localLinkId:
        type: "integer"
        format: "uint32"
        description: "Local Logical Link Id."
      dstGwIpAddress:
        type: "string"
        description: "5GT - Destination NFVI-PoP Gw IPv4 Address in terms of A.B.C.D\
          \ (/32)."
      remoteLinkId:
        type: "integer"
        format: "uint32"
        description: "Remote Logical Link Id."
    description: "5GT - inter-Nfvi-Pop connectivity link."
  logicalLinkPathList:
    type: "array"
    items:
      $ref: "#/definitions/logicalLinkPathList_inner"
  interNfviPopConnnectivityIdList:
    type: "array"
    items:
      $ref: "#/definitions/interNfviPopConnnectivityIdList_inner"
  AllocateComputeRequest:
    type: "object"
    required:
    - "affinityOrAntiAffinityConstraints"
    - "computeFlavourId"
    - "computeName"
    - "interfaceData"
    - "locationConstraints"
    - "metadata"
    - "reservationId"
    - "resourceGroupId"
    - "userData"
    - "vcImageId"
    properties:
      affinityOrAntiAffinityConstraints:
        type: "array"
        description: "A list of elements with affinity or anti affinity information\
          \ of the virtualised compute resource to allocate. There should be a relation\
          \ between the constraints defined in the different elements of the list."
        items:
          $ref: "#/definitions/AllocateComputeRequest_affinityOrAntiAffinityConstraints"
      computeFlavourId:
        type: "string"
        description: "Identifier of the Compute Flavour that provides information\
          \ about the particular memory, CPU and disk resources for virtualised compute\
          \ resource to allocate. The Compute Flavour is created with Create Compute\
          \ Flavour operation"
      computeName:
        type: "string"
        description: "Name provided by the consumer for the virtualised compute resource\
          \ to allocate. It can be used for identifying resources from consumer side."
      interfaceData:
        type: "array"
        description: "The data of network interfaces which are specific to a Virtual\
          \ Compute Resource instance."
        items:
          $ref: "#/definitions/AllocateComputeRequest_interfaceData"
      locationConstraints:
        type: "string"
        description: "If present, it defines location constraints for the resource(s)\
          \ is (are) requested to be allocated, e.g. in what particular Resource Zone."
      metadata:
        type: "array"
        description: "The binary software image file."
        items:
          $ref: "#/definitions/metaData_inner"
      reservationId:
        type: "string"
        description: "Identifier of the resource reservation applicable to this virtualised\
          \ resource management operation. Cardinality can be 0 if no resource reservation\
          \ was used."
      resourceGroupId:
        type: "string"
        description: "Unique identifier of the \"infrastructure resource group\",\
          \ logical grouping of virtual resources assigned to a tenant within an Infrastructure\
          \ Domain."
      userData:
        $ref: "#/definitions/AllocateComputeRequest_userData"
      vcImageId:
        type: "string"
        description: "Identifier of the virtualisation container software image (e.g.\
          \ a virtual machine image). Cardinality can be 0 if an \"empty\" virtualisation\
          \ container is allocated. "
    example:
      metadata:
      - value: "value"
        key: "key"
      - value: "value"
        key: "key"
      userData:
        method: "method"
        content: "content"
      affinityOrAntiAffinityConstraints:
      - affinityAntiAffinityResourceGroup: "affinityAntiAffinityResourceGroup"
        scope: "scope"
        type: "type"
        affinityAntiAffinityResourceList:
          resource:
          - "resource"
          - "resource"
      - affinityAntiAffinityResourceGroup: "affinityAntiAffinityResourceGroup"
        scope: "scope"
        type: "type"
        affinityAntiAffinityResourceList:
          resource:
          - "resource"
          - "resource"
      reservationId: "reservationId"
      vcImageId: "vcImageId"
      locationConstraints: "locationConstraints"
      interfaceData:
      - macAddress: "macAddress"
        ipAddress: "ipAddress"
      - macAddress: "macAddress"
        ipAddress: "ipAddress"
      resourceGroupId: "resourceGroupId"
      computeFlavourId: "computeFlavourId"
      computeName: "computeName"
  AllocateNetworkRequest:
    type: "object"
    required:
    - "affinityOrAntiAffinityConstraints"
    - "locationConstraints"
    - "metadata"
    - "networkResourceName"
    - "networkResourceType"
    - "reservationId"
    - "resourceGroupId"
    - "typeNetworkData"
    - "typeNetworkPortData"
    - "typeSubnetData"
    properties:
      affinityOrAntiAffinityConstraints:
        type: "string"
        description: "The binary software image file."
      locationConstraints:
        type: "string"
        description: "Controls the visibility of the image. In case of \"private\"\
          \ value the image is available only for the tenant assigned to the provided\
          \ resourceGroupId and the administrator tenants of the VIM while in case\
          \ of \"public\" value, all tenants of the VIM can use the image."
      metadata:
        type: "array"
        description: "The binary software image file."
        items:
          $ref: "#/definitions/metaData_inner"
      networkResourceName:
        type: "string"
        description: "Name provided by the consumer for the virtualised network resource\
          \ to allocate. It can be used for identifying resources from consumer side."
      networkResourceType:
        type: "string"
        description: "Type of virtualised network resource. Possible values are: \"\
          network\", \"subnet\" or network-port."
      reservationId:
        type: "string"
        description: "Identifier of the resource reservation applicable to this virtualised\
          \ resource management operation."
      resourceGroupId:
        type: "string"
        description: "Unique identifier of the \"infrastructure resource group\",\
          \ logical grouping of virtual resources assigned to a tenant within an Infrastructure\
          \ Domain."
      typeNetworkData:
        type: "string"
        description: "The network data provides information about the particular virtual\
          \ network resource to create. Cardinality can be \"0\" depending on the\
          \ value of networkResourceType."
      typeNetworkPortData:
        type: "string"
        description: "The binary software image file."
      typeSubnetData:
        type: "string"
        description: "The binary software image file."
    example:
      networkResourceType: "networkResourceType"
      metadata:
      - value: "value"
        key: "key"
      - value: "value"
        key: "key"
      typeSubnetData: "typeSubnetData"
      networkResourceName: "networkResourceName"
      affinityOrAntiAffinityConstraints: "affinityOrAntiAffinityConstraints"
      reservationId: "reservationId"
      typeNetworkPortData: "typeNetworkPortData"
      locationConstraints: "locationConstraints"
      resourceGroupId: "resourceGroupId"
      typeNetworkData: "typeNetworkData"
  AllocateNetworkResult:
    type: "object"
    required:
    - "networkData"
    - "networkPortData"
    - "subnetData"
    properties:
      networkData:
        $ref: "#/definitions/AllocateNetworkResult_networkData"
      networkPortData:
        $ref: "#/definitions/AllocateNetworkResult_networkPortData"
      subnetData:
        $ref: "#/definitions/AllocateNetworkResult_subnetData"
    example:
      networkData:
        subnet: "subnet"
        networkResourceName: "networkResourceName"
        bandwidth: 0.80082819046101150206595775671303272247314453125
        networkQoS:
        - qosName: "qosName"
          qosValue: "qosValue"
        - qosName: "qosName"
          qosValue: "qosValue"
        zoneId: "zoneId"
        networkResourceId: "networkResourceId"
        operationalState: "operationalState"
        networkType: "networkType"
        networkPort:
        - portType: "portType"
          metadata:
          - value: "value"
            key: "key"
          - value: "value"
            key: "key"
          resourceId: "resourceId"
          bandwidth: 6.02745618307040320615897144307382404804229736328125
          segmentId: "segmentId"
          networkId: "networkId"
          operationalState: "operationalState"
          attachedResourceId: "attachedResourceId"
        - portType: "portType"
          metadata:
          - value: "value"
            key: "key"
          - value: "value"
            key: "key"
          resourceId: "resourceId"
          bandwidth: 6.02745618307040320615897144307382404804229736328125
          segmentId: "segmentId"
          networkId: "networkId"
          operationalState: "operationalState"
          attachedResourceId: "attachedResourceId"
        isShared: true
        segmentType: "segmentType"
        sharingCriteria: "sharingCriteria"
      subnetData:
        metadata:
        - value: "value"
          key: "key"
        - value: "value"
          key: "key"
        resourceId: "resourceId"
        ipVersion: "ipVersion"
        isDhcpEnabled: true
        addressPool: "addressPool"
        cidr: "cidr"
        gatewayIp: "gatewayIp"
        networkId: "networkId"
        operationalState: "operationalState"
      networkPortData:
        portType: "portType"
        metadata:
        - value: "value"
          key: "key"
        - value: "value"
          key: "key"
        resourceId: "resourceId"
        bandwidth: 6.02745618307040320615897144307382404804229736328125
        segmentId: "segmentId"
        networkId: "networkId"
        operationalState: "operationalState"
        attachedResourceId: "attachedResourceId"
  CapacityInformation:
    type: "object"
    required:
    - "allocatedCapacity"
    - "availableCapacity"
    - "reservedCapacity"
    - "totalCapacity"
    properties:
      allocatedCapacity:
        type: "string"
        description: "The allocated capacity is usually specified as the current allocated\
          \ capacity."
      availableCapacity:
        type: "string"
        description: "The free capacity available for allocation and reservation.\
          \ It can be specified in terms of current capacity; or minimum and maximum\
          \ capacity; average capacity; or other statistical measurement in the specified\
          \ time interval. The set of measurements is to be defined during Stage 3."
      reservedCapacity:
        type: "string"
        description: "The reserved capacity. It can be specified in terms of current\
          \ capacity; or minimum and maximum capacity; average capacity; or other\
          \ statistical measurement in the specified time interval. The set of measurements\
          \ is to be defined during Stage 3."
      totalCapacity:
        type: "string"
        description: "The total capacity is usually specified as a fixed capacity\
          \ without variations in time. The set of measurements is left to Stage 3."
    example:
      availableCapacity: "availableCapacity"
      reservedCapacity: "reservedCapacity"
      allocatedCapacity: "allocatedCapacity"
      totalCapacity: "totalCapacity"
  CreateComputeResourceQuotaRequest:
    type: "object"
    required:
    - "resourceGroupId"
    - "virtualComputeQuota"
    properties:
      resourceGroupId:
        type: "string"
        description: "Name provided by the consumer for the virtualised compute resource\
          \ to allocate. It can be used for identifying resources from consumer side."
      virtualComputeQuota:
        $ref: "#/definitions/CreateComputeResourceQuotaRequest_virtualComputeQuota"
    example:
      resourceGroupId: "resourceGroupId"
      virtualComputeQuota:
        numVcInstances: 6
        virtualMemSize: 1.46581298050294517310021547018550336360931396484375
        numVCPUs: 0
  CreateComputeResourceReservationRequest:
    type: "object"
    required:
    - "affinityConstraint"
    - "antiAffinityConstraint"
    - "computePoolReservation"
    - "endTime"
    - "expiryTime"
    - "locationConstraints"
    - "resourceGroupId"
    - "startTime"
    - "virtualisationContainerReservation"
    properties:
      affinityConstraint:
        type: "array"
        description: "Element with affinity information of the virtualised compute\
          \ resources to reserve. For the resource reservation at resource pool granularity\
          \ level, it defines the affinity information of the virtual compute pool\
          \ resources to reserve. For the resource reservation at virtual container\
          \ granularity level, it defines the affinity information of the virtualisation\
          \ container(s) to reserve."
        items:
          $ref: "#/definitions/AllocateComputeRequest_affinityOrAntiAffinityConstraints"
      antiAffinityConstraint:
        type: "array"
        description: "Element with anti-affinity information of the virtualised compute\
          \ resources to reserve. For the resource reservation at resource pool granularity\
          \ level, it defines the anti-affinity information of the virtual compute\
          \ pool resources to reserve. For the resource reservation at virtual container\
          \ granularity level, it defines the anti-affinity information of the virtualisation\
          \ container(s) to reserve."
        items:
          $ref: "#/definitions/AllocateComputeRequest_affinityOrAntiAffinityConstraints"
      computePoolReservation:
        $ref: "#/definitions/CreateComputeResourceReservationRequest_computePoolReservation"
      endTime:
        type: "string"
        format: "date-time"
        description: "Indication when the reservation ends (when the issuer of the\
          \ request expects that the resources will no longer be needed) and used\
          \ by the VIM to schedule the reservation. If not present, resources are\
          \ reserved for unlimited usage time."
      expiryTime:
        type: "string"
        format: "date-time"
        description: "Indication when the VIM can release the reservation in case\
          \ no allocation request against this reservation was made."
      locationConstraints:
        type: "string"
        description: "If present, it defines location constraints for the resource(s)\
          \ is (are) requested to be reserved, e.g. in what particular Resource Zone."
      resourceGroupId:
        type: "string"
        description: "Unique identifier of the \"infrastructure resource group\",\
          \ logical grouping of virtual resources assigned to a tenant within an Infrastructure\
          \ Domain."
      startTime:
        type: "string"
        format: "date-time"
        description: "Indication when the consumption of the resources starts. If\
          \ the value is 0, resources are reserved for immediate use."
      virtualisationContainerReservation:
        type: "array"
        description: "Virtualisation containers that need to be reserved (e.g. following\
          \ a specific compute \"flavour\")"
        items:
          $ref: "#/definitions/CreateComputeResourceReservationRequest_virtualisationContainerReservation"
    example:
      computePoolReservation:
        computeAttributes:
          virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
          accelerationCapability: "accelerationCapability"
          cpuArchitecture: "cpuArchitecture"
        numVcInstances: 6
        virtualMemSize: 1.46581298050294517310021547018550336360931396484375
        numCpuCores: 0
      locationConstraints: "locationConstraints"
      expiryTime: "2000-01-23T04:56:07.000+00:00"
      affinityConstraint:
      - affinityAntiAffinityResourceGroup: "affinityAntiAffinityResourceGroup"
        scope: "scope"
        type: "type"
        affinityAntiAffinityResourceList:
          resource:
          - "resource"
          - "resource"
      - affinityAntiAffinityResourceGroup: "affinityAntiAffinityResourceGroup"
        scope: "scope"
        type: "type"
        affinityAntiAffinityResourceList:
          resource:
          - "resource"
          - "resource"
      resourceGroupId: "resourceGroupId"
      startTime: "2000-01-23T04:56:07.000+00:00"
      antiAffinityConstraint:
      - affinityAntiAffinityResourceGroup: "affinityAntiAffinityResourceGroup"
        scope: "scope"
        type: "type"
        affinityAntiAffinityResourceList:
          resource:
          - "resource"
          - "resource"
      - affinityAntiAffinityResourceGroup: "affinityAntiAffinityResourceGroup"
        scope: "scope"
        type: "type"
        affinityAntiAffinityResourceList:
          resource:
          - "resource"
          - "resource"
      endTime: "2000-01-23T04:56:07.000+00:00"
      virtualisationContainerReservation:
      - containerFlavour:
          flavourId: "flavourId"
          accelerationCapability: "accelerationCapability"
          storageAttributes:
          - flavourId: "flavourId"
            typeOfStorage: "typeOfStorage"
            hostId: "hostId"
            zoneId: "zoneId"
            operationalState: "operationalState"
            ownerId: "ownerId"
            sizeOfStorage: 0.80082819046101150206595775671303272247314453125
            storageId: "storageId"
            storageName: "storageName"
          - flavourId: "flavourId"
            typeOfStorage: "typeOfStorage"
            hostId: "hostId"
            zoneId: "zoneId"
            operationalState: "operationalState"
            ownerId: "ownerId"
            sizeOfStorage: 0.80082819046101150206595775671303272247314453125
            storageId: "storageId"
            storageName: "storageName"
          virtualCpu:
          - numVirtualCpu: 1
            virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
            cpuArchitecture: "cpuArchitecture"
            virtualCpuPinning:
              cpuMap: "cpuMap"
              cpuPinningRules: "cpuPinningRules"
              cpuPinningPolicy: "cpuPinningPolicy"
            cpuClock: 6.02745618307040320615897144307382404804229736328125
          - numVirtualCpu: 1
            virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
            cpuArchitecture: "cpuArchitecture"
            virtualCpuPinning:
              cpuMap: "cpuMap"
              cpuPinningRules: "cpuPinningRules"
              cpuPinningPolicy: "cpuPinningPolicy"
            cpuClock: 6.02745618307040320615897144307382404804229736328125
          virtualMemory:
            numaEnabled: true
            virtualMemSize: 5.962133916683182377482808078639209270477294921875
            virtualMemOversubscriptionPolicy: "virtualMemOversubscriptionPolicy"
          virtualNetworkInterface:
            typeConfiguration: "typeConfiguration"
            typeVirtualNic: "typeVirtualNic"
            macAddress: "macAddress"
            metadata: "metadata"
            resourceId: "resourceId"
            networkPortId: "networkPortId"
            accelerationCapability: "accelerationCapability"
            bandwidth: "bandwidth"
            ipAddress: "ipAddress"
            networkId: "networkId"
            operationalState: "operationalState"
            ownerId: "ownerId"
        containerId: "containerId"
      - containerFlavour:
          flavourId: "flavourId"
          accelerationCapability: "accelerationCapability"
          storageAttributes:
          - flavourId: "flavourId"
            typeOfStorage: "typeOfStorage"
            hostId: "hostId"
            zoneId: "zoneId"
            operationalState: "operationalState"
            ownerId: "ownerId"
            sizeOfStorage: 0.80082819046101150206595775671303272247314453125
            storageId: "storageId"
            storageName: "storageName"
          - flavourId: "flavourId"
            typeOfStorage: "typeOfStorage"
            hostId: "hostId"
            zoneId: "zoneId"
            operationalState: "operationalState"
            ownerId: "ownerId"
            sizeOfStorage: 0.80082819046101150206595775671303272247314453125
            storageId: "storageId"
            storageName: "storageName"
          virtualCpu:
          - numVirtualCpu: 1
            virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
            cpuArchitecture: "cpuArchitecture"
            virtualCpuPinning:
              cpuMap: "cpuMap"
              cpuPinningRules: "cpuPinningRules"
              cpuPinningPolicy: "cpuPinningPolicy"
            cpuClock: 6.02745618307040320615897144307382404804229736328125
          - numVirtualCpu: 1
            virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
            cpuArchitecture: "cpuArchitecture"
            virtualCpuPinning:
              cpuMap: "cpuMap"
              cpuPinningRules: "cpuPinningRules"
              cpuPinningPolicy: "cpuPinningPolicy"
            cpuClock: 6.02745618307040320615897144307382404804229736328125
          virtualMemory:
            numaEnabled: true
            virtualMemSize: 5.962133916683182377482808078639209270477294921875
            virtualMemOversubscriptionPolicy: "virtualMemOversubscriptionPolicy"
          virtualNetworkInterface:
            typeConfiguration: "typeConfiguration"
            typeVirtualNic: "typeVirtualNic"
            macAddress: "macAddress"
            metadata: "metadata"
            resourceId: "resourceId"
            networkPortId: "networkPortId"
            accelerationCapability: "accelerationCapability"
            bandwidth: "bandwidth"
            ipAddress: "ipAddress"
            networkId: "networkId"
            operationalState: "operationalState"
            ownerId: "ownerId"
        containerId: "containerId"
  CreateNetworkResourceQuotaRequest:
    type: "object"
    required:
    - "resourceGroupId"
    - "virtualComputeQuota"
    properties:
      resourceGroupId:
        type: "string"
        description: "Unique identifier of the \"infrastructure resource group\",\
          \ logical grouping of virtual resources assigned to a tenant within an Infrastructure\
          \ Domain."
      virtualComputeQuota:
        $ref: "#/definitions/CreateNetworkResourceQuotaRequest_virtualComputeQuota"
    example:
      resourceGroupId: "resourceGroupId"
      virtualComputeQuota:
        numPublicIps: 6
        numPorts: 0
        numSubnets: 1
  CreateNetworkResourceReservationRequest:
    type: "object"
    required:
    - "affinityConstraint"
    - "antiAffinityConstraint"
    - "endTime"
    - "expiryTime"
    - "locationConstraints"
    - "networkReservation"
    - "resourceGroupId"
    - "startTime"
    properties:
      affinityConstraint:
        type: "array"
        description: "Element with anti-affinity information of the virtual network\
          \ resources to reserve."
        items:
          $ref: "#/definitions/AllocateComputeRequest_affinityOrAntiAffinityConstraints"
      antiAffinityConstraint:
        type: "array"
        description: "If present, it defines location constraints for the resource(s)\
          \ is (are) requested to be reserved, e.g. in what particular Resource Zone."
        items:
          $ref: "#/definitions/AllocateComputeRequest_affinityOrAntiAffinityConstraints"
      endTime:
        type: "string"
        format: "date-time"
        description: "Indication when the reservation ends (when the issuer of the\
          \ request expects that the resources will no longer be needed) and used\
          \ by the VIM to schedule the reservation. If not present, resources are\
          \ reserved for unlimited usage time."
      expiryTime:
        type: "string"
        format: "date-time"
        description: "Indication when the VIM can release the reservation in case\
          \ no allocation request against this reservation was made."
      locationConstraints:
        type: "string"
        description: "If present, it defines location constraints for the resource(s)\
          \ is (are) requested to be reserved, e.g. in what particular Resource Zone."
      networkReservation:
        $ref: "#/definitions/CreateNetworkResourceReservationRequest_networkReservation"
      resourceGroupId:
        type: "string"
        description: "Unique identifier of the \"infrastructure resource group\",\
          \ logical grouping of virtual resources assigned to a tenant within an Infrastructure\
          \ Domain."
      startTime:
        type: "string"
        format: "date-time"
        description: "Indication when the consumption of the resources starts. If\
          \ the value is 0, resources are reserved for immediate use."
    example:
      networkReservation:
        numPublicIps: 5
        networkAttributes:
          metadata:
          - value: "value"
            key: "key"
          - value: "value"
            key: "key"
          bandwidth: 0.80082819046101150206595775671303272247314453125
          networkType: "networkType"
          isShared: true
          segmentType: "segmentType"
        networkPorts:
        - portType: "portType"
          metadata:
          - value: "value"
            key: "key"
          - value: "value"
            key: "key"
          bandwidth: 6.02745618307040320615897144307382404804229736328125
          segmentId: "segmentId"
          portId: 1
        - portType: "portType"
          metadata:
          - value: "value"
            key: "key"
          - value: "value"
            key: "key"
          bandwidth: 6.02745618307040320615897144307382404804229736328125
          segmentId: "segmentId"
          portId: 1
      locationConstraints: "locationConstraints"
      expiryTime: "2000-01-23T04:56:07.000+00:00"
      affinityConstraint:
      - affinityAntiAffinityResourceGroup: "affinityAntiAffinityResourceGroup"
        scope: "scope"
        type: "type"
        affinityAntiAffinityResourceList:
          resource:
          - "resource"
          - "resource"
      - affinityAntiAffinityResourceGroup: "affinityAntiAffinityResourceGroup"
        scope: "scope"
        type: "type"
        affinityAntiAffinityResourceList:
          resource:
          - "resource"
          - "resource"
      resourceGroupId: "resourceGroupId"
      startTime: "2000-01-23T04:56:07.000+00:00"
      antiAffinityConstraint:
      - affinityAntiAffinityResourceGroup: "affinityAntiAffinityResourceGroup"
        scope: "scope"
        type: "type"
        affinityAntiAffinityResourceList:
          resource:
          - "resource"
          - "resource"
      - affinityAntiAffinityResourceGroup: "affinityAntiAffinityResourceGroup"
        scope: "scope"
        type: "type"
        affinityAntiAffinityResourceList:
          resource:
          - "resource"
          - "resource"
      endTime: "2000-01-23T04:56:07.000+00:00"
  Filter:
    type: "object"
    required:
    - "filter"
    properties:
      filter:
        type: "object"
        description: "The filter is used to select elements for query purpose."
        properties: {}
    example:
      filter: "{}"
  NfviPop:
    type: "object"
    required:
    - "geographicalLocationInfo"
    - "networkConnectivityEndpoint"
    - "nfviPopId"
    - "vimId"
    properties:
      geographicalLocationInfo:
        type: "string"
        description: "It provides information about the geographic location (e.g.\
          \ geographic coordinates or address of the building, etc.) of the NFVI resources\
          \ that the VIM manages."
      networkConnectivityEndpoint:
        type: "string"
        description: "Information about network connectivity endpoints to the NFVI-PoP\
          \ that the VIM manages which helps build topology information relative to\
          \ NFVI-PoP connectivity to other NFVI-PoP or N-PoP."
      nfviPopId:
        type: "string"
        description: "Identification of the NFVI-PoP."
      vimId:
        type: "string"
        description: "Identification of the VIM."
    example:
      networkConnectivityEndpoint: "networkConnectivityEndpoint"
      vimId: "vimId"
      nfviPopId: "nfviPopId"
      geographicalLocationInfo: "geographicalLocationInfo"
  QueryComputeCapacityRequest:
    type: "object"
    required:
    - "attributeSelector"
    - "computeResourceTypeId"
    - "resourceCriteria"
    - "timePeriod"
    - "zoneId"
    properties:
      attributeSelector:
        type: "string"
        description: "Input parameter for selecting which capacity information (i.e.\
          \ available, total, reserved and/or allocated capacity) is queried. When\
          \ not present, all four values are requested."
      computeResourceTypeId:
        type: "string"
        description: "Identifier of the resource type for which the issuer wants to\
          \ know the available, total, reserved and/or allocated capacity."
      resourceCriteria:
        type: "string"
        description: "Input capacity computation parameter for selecting the virtual\
          \ memory, virtual CPU and acceleration capabilities for which the issuer\
          \ wants to know the available, total, reserved and/or allocated capacity.\
          \ Selecting parameters/attributes that shall be used are defined in the\
          \ VirtualComputeResourceInformation, VirtualCpuResourceInformation, and\
          \ VirtualMemoryResourceInformation information elements. This information\
          \ element and the computeResourceTypeId are mutually exclusive."
      timePeriod:
        $ref: "#/definitions/QueryComputeCapacityRequest_timePeriod"
      zoneId:
        type: "string"
        description: "When specified this parameter identifies the resource zone for\
          \ which the capacity is requested. When not specified the total capacity\
          \ managed by the VIM instance will be returned."
  QueryNetworkCapacityRequest:
    type: "object"
    required:
    - "attributeSelector"
    - "networkResourceTypeId"
    - "resourceCriteria"
    - "timePeriod"
    - "zoneId"
    properties:
      attributeSelector:
        type: "string"
        description: "Input parameter for selecting which capacity information (i.e.\
          \ available, total, reserved and/or allocated capacity) is queried. When\
          \ not present, all four values are requested."
      networkResourceTypeId:
        type: "string"
        description: "Identifier of the resource type for which the issuer wants to\
          \ know the available, total, reserved and/or allocated capacity."
      resourceCriteria:
        type: "string"
        description: "Input capacity computation parameter for selecting the characteristics\
          \ of the virtual network for which the issuer wants to know the available,\
          \ total, reserved and/or allocated capacity. Selecting parameters/attributes\
          \ that shall be used are defined in the VirtualNetworkResourceInformation\
          \ information element. This information element and the networkResourceTypeID\
          \ are mutually exclusive."
      timePeriod:
        $ref: "#/definitions/QueryComputeCapacityRequest_timePeriod"
      zoneId:
        type: "string"
        description: "When specified this parameter identifies the resource zone for\
          \ which the capacity is requested. When not specified the total capacity\
          \ managed by the VIM instance will be returned."
    example:
      networkResourceTypeId: "networkResourceTypeId"
      resourceCriteria: "resourceCriteria"
      timePeriod:
        startTime: "2000-01-23T04:56:07.000+00:00"
        stopTime: "2000-01-23T04:56:07.000+00:00"
      zoneId: "zoneId"
      attributeSelector: "attributeSelector"
  ReservedVirtualCompute:
    type: "object"
    required:
    - "computePoolReserved"
    - "endTime"
    - "expiryTime"
    - "reservationId"
    - "reservationStatus"
    - "startTime"
    - "virtualisationContainerReserved"
    properties:
      computePoolReserved:
        $ref: "#/definitions/ReservedVirtualCompute_computePoolReserved"
      endTime:
        type: "string"
        format: "date-time"
        description: "Indication when the reservation ends (when it is expected that\
          \ the resources will no longer be needed) and used by the VIM to schedule\
          \ the reservation. If not present, resources are reserved for unlimited\
          \ usage time."
      expiryTime:
        type: "string"
        format: "date-time"
        description: "Indication when the VIM can release the reservation in case\
          \ no allocation request against this reservation was made."
      reservationId:
        type: "string"
        description: "Identifier of the resource reservation."
      reservationStatus:
        type: "string"
        description: "Status of the compute resource reservation, e.g. to indicate\
          \ if a reservation is being used."
      startTime:
        type: "string"
        format: "date-time"
        description: "Indication when the consumption of the resources starts. If\
          \ the value is 0, resources are reserved for immediate use."
      virtualisationContainerReserved:
        $ref: "#/definitions/ReservedVirtualCompute_virtualisationContainerReserved"
    example:
      reservationId: "reservationId"
      computePoolReserved:
        computeAttributes:
          virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
          accelerationCapability: "accelerationCapability"
          cpuArchitecture: "cpuArchitecture"
        numVcInstances: 6
        virtualMemSize: 1.46581298050294517310021547018550336360931396484375
        zoneId: "zoneId"
        numCpuCores: 0
      expiryTime: "2000-01-23T04:56:07.000+00:00"
      startTime: "2000-01-23T04:56:07.000+00:00"
      virtualisationContainerReserved:
        flavourId:
        - computeAttributes:
            virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
            accelerationCapability: "accelerationCapability"
            cpuArchitecture: "cpuArchitecture"
          numVcInstances: 5
          virtualMemSize: 2.3021358869347654518833223846741020679473876953125
          zoneId: "zoneId"
          numCpuCores: 5
        - computeAttributes:
            virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
            accelerationCapability: "accelerationCapability"
            cpuArchitecture: "cpuArchitecture"
          numVcInstances: 5
          virtualMemSize: 2.3021358869347654518833223846741020679473876953125
          zoneId: "zoneId"
          numCpuCores: 5
        accelerationCapability: "accelerationCapability"
        virtualCpu:
          numVirtualCpu: 9
          virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
          cpuArchitecture: "cpuArchitecture"
          virtualCpuPinning:
            cpuMap: "cpuMap"
            cpuPinningRules: "cpuPinningRules"
            cpuPinningPolicy: "cpuPinningPolicy"
          cpuClock: 7.061401241503109105224211816675961017608642578125
        zoneId: "zoneId"
        containerId: "containerId"
        virtualDisks:
        - flavourId: "flavourId"
          typeOfStorage: "typeOfStorage"
          hostId: "hostId"
          zoneId: "zoneId"
          operationalState: "operationalState"
          ownerId: "ownerId"
          sizeOfStorage: 0.80082819046101150206595775671303272247314453125
          storageId: "storageId"
          storageName: "storageName"
        - flavourId: "flavourId"
          typeOfStorage: "typeOfStorage"
          hostId: "hostId"
          zoneId: "zoneId"
          operationalState: "operationalState"
          ownerId: "ownerId"
          sizeOfStorage: 0.80082819046101150206595775671303272247314453125
          storageId: "storageId"
          storageName: "storageName"
        virtualMemory:
          numaEnabled: true
          virtualMemSize: 3.61607674925191080461672754609026014804840087890625
          virtualMemOversubscriptionPolicy: "virtualMemOversubscriptionPolicy"
        virtualNetworkInterface:
        - typeConfiguration: "typeConfiguration"
          typeVirtualNic: "typeVirtualNic"
          macAddress: "macAddress"
          metadata: "metadata"
          resourceId: "resourceId"
          networkPortId: "networkPortId"
          accelerationCapability: "accelerationCapability"
          bandwidth: "bandwidth"
          ipAddress: "ipAddress"
          networkId: "networkId"
          operationalState: "operationalState"
          ownerId: "ownerId"
        - typeConfiguration: "typeConfiguration"
          typeVirtualNic: "typeVirtualNic"
          macAddress: "macAddress"
          metadata: "metadata"
          resourceId: "resourceId"
          networkPortId: "networkPortId"
          accelerationCapability: "accelerationCapability"
          bandwidth: "bandwidth"
          ipAddress: "ipAddress"
          networkId: "networkId"
          operationalState: "operationalState"
          ownerId: "ownerId"
      endTime: "2000-01-23T04:56:07.000+00:00"
      reservationStatus: "reservationStatus"
  ReservedVirtualNetwork:
    type: "object"
    required:
    - "endTime"
    - "expiryTime"
    - "networkAttributes"
    - "networkPorts"
    - "publicIps"
    - "reservationId"
    - "reservationStatus"
    - "startTime"
    - "zoneId"
    properties:
      endTime:
        type: "string"
        format: "date-time"
        description: "Indication when the reservation ends (when it is expected that\
          \ the resources will no longer be needed) and used by the VIM to schedule\
          \ the reservation. If not present, resources are reserved for unlimited\
          \ usage time."
      expiryTime:
        type: "string"
        format: "date-time"
        description: "Indication when the VIM can release the reservation in case\
          \ no allocation request against this reservation was made."
      networkAttributes:
        $ref: "#/definitions/ReservedVirtualNetwork_networkAttributes"
      networkPorts:
        type: "array"
        description: "List of specific network ports that have been reserved."
        items:
          $ref: "#/definitions/ReservedVirtualNetwork_networkPorts"
      publicIps:
        type: "string"
        description: "List of public IP addresses that have been reserved."
      reservationId:
        type: "string"
        description: "Identifier of the resource reservation."
      reservationStatus:
        type: "string"
        description: "Status of the network resource reservation, e.g. to indicate\
          \ if a reservation is being used."
      startTime:
        type: "string"
        format: "date-time"
        description: "Indication when the consumption of the resources starts. If\
          \ the value is 0, resources are reserved for immediate use."
      zoneId:
        type: "string"
        description: "References the resource zone where the virtual network resources\
          \ have been reserved. Cardinality can be 0 to cover the case where reserved\
          \ network resources are not bound to a specific resource zone."
    example:
      reservationId: "reservationId"
      networkAttributes:
        metadata:
        - value: "value"
          key: "key"
        - value: "value"
          key: "key"
        bandwidth: 0.80082819046101150206595775671303272247314453125
        networkType: "networkType"
        isShared: true
        segmentType: "segmentType"
      networkPorts:
      - portType: "portType"
        metadata:
        - value: "value"
          key: "key"
        - value: "value"
          key: "key"
        bandwidth: 6.02745618307040320615897144307382404804229736328125
        segmentId: "segmentId"
        portId: "portId"
      - portType: "portType"
        metadata:
        - value: "value"
          key: "key"
        - value: "value"
          key: "key"
        bandwidth: 6.02745618307040320615897144307382404804229736328125
        segmentId: "segmentId"
        portId: "portId"
      expiryTime: "2000-01-23T04:56:07.000+00:00"
      zoneId: "zoneId"
      startTime: "2000-01-23T04:56:07.000+00:00"
      endTime: "2000-01-23T04:56:07.000+00:00"
      publicIps: "publicIps"
      reservationStatus: "reservationStatus"
  ResourceGroupIds:
    type: "object"
    required:
    - "resourceGroupId"
    properties:
      resourceGroupId:
        type: "string"
        description: "Unique identifier of the \"infrastructure resource group\",\
          \ logical grouping of virtual resources assigned to a tenant within an Infrastructure\
          \ Domain."
    example:
      resourceGroupId: "resourceGroupId"
  ResourceZone:
    type: "object"
    required:
    - "nfviPopId"
    - "zoneId"
    - "zoneName"
    - "zoneProperty"
    - "zoneState"
    properties:
      metadata:
        type: "array"
        description: "Other metadata associated to the Resource Zone."
        items:
          $ref: "#/definitions/metaData_inner"
      nfviPopId:
        type: "string"
        description: "The identifier of the NFVI-PoP the Resource Zone belongs to."
      zoneId:
        type: "string"
        description: "The identifier of the Resource Zone."
      zoneName:
        type: "string"
        description: "The name of the Resource Zone."
      zoneProperty:
        type: "string"
        description: "Set of properties that define the capabilities associated to\
          \ the Resource Zone. Examples of capabilities may include: support of certain\
          \ compute resource types (e.g. low performance, acceleration capabilities,\
          \ etc. association to certain NFVI-PoP physical segregation (e.g. different\
          \ power or network sub-systems, availability of redundancy power sub-systems),\
          \ etc."
      zoneState:
        type: "string"
        description: "Information about the current state of the Resource Zone, e.g.\
          \ if the Resource Zone is available."
    example:
      metadata:
      - value: "value"
        key: "key"
      - value: "value"
        key: "key"
      nfviPopId: "nfviPopId"
      zoneId: "zoneId"
      zoneProperty: "zoneProperty"
      zoneName: "zoneName"
      zoneState: "zoneState"
  SoftwareImageAddQuery:
    type: "object"
    required:
    - "name"
    - "provider"
    - "resourceGroupId"
    - "softwareImage"
    - "userMetadata"
    - "version"
    - "visibility"
    properties:
      name:
        type: "string"
        description: "The name of the software image."
      provider:
        type: "string"
        description: "The provider of the software image."
      resourceGroupId:
        type: "string"
        description: "Unique identifier of the \"infrastructure resource group\",\
          \ logical grouping of virtual resources assigned to a tenant within an Infrastructure\
          \ Domain."
      softwareImage:
        type: "string"
        description: "The binary software image file."
      userMetadata:
        type: "array"
        description: "User-defined metadata."
        items:
          $ref: "#/definitions/metaData_inner"
      version:
        type: "string"
        description: "The version of the software image."
      visibility:
        type: "string"
        description: "Controls the visibility of the image. In case of \"private\"\
          \ value the image is available only for the tenant assigned to the provided\
          \ resourceGroupId and the administrator tenants of the VIM while in case\
          \ of \"public\" value, all tenants of the VIM can use the image."
    example:
      visibility: "visibility"
      provider: "provider"
      softwareImage: "softwareImage"
      name: "name"
      resourceGroupId: "resourceGroupId"
      userMetadata:
      - value: "value"
        key: "key"
      - value: "value"
        key: "key"
      version: "version"
  SoftwareImageInformation:
    type: "object"
    required:
    - "checksum"
    - "containerFormat"
    - "createdAt"
    - "diskFormat"
    - "id"
    - "minDisk"
    - "minRam"
    - "name"
    - "provider"
    - "size"
    - "status"
    - "updatedAt"
    - "version"
    properties:
      checksum:
        type: "string"
        description: "The checksum of the software image file."
      containerFormat:
        type: "string"
        description: "The container format indicates whether the software image is\
          \ in a file format that also contains metadata about the actual software."
      createdAt:
        type: "string"
        description: "The created time of this software image."
      diskFormat:
        type: "string"
        description: "The disk format of a software image is the format of the underlying\
          \ disk image."
      id:
        type: "string"
        description: "The identifier of this software image."
      minDisk:
        type: "string"
        description: "The minimal Disk for this software image."
      minRam:
        type: "string"
        description: "The minimal RAM for this software image."
      name:
        type: "string"
        description: "The name of this software image."
      provider:
        type: "string"
        description: "The provider of this software image."
      size:
        type: "string"
        description: "The size of this software image."
      status:
        type: "string"
        description: "The status of this software image."
      updatedAt:
        type: "string"
        description: "The updated time of this software image."
        x-nullable: true
      version:
        type: "string"
        description: "The version of this software image."
        x-nullable: true
    example:
      minDisk: "minDisk"
      version: "version"
      createdAt: "createdAt"
      size: "size"
      provider: "provider"
      minRam: "minRam"
      checksum: "checksum"
      name: "name"
      containerFormat: "containerFormat"
      id: "id"
      diskFormat: "diskFormat"
      status: "status"
      updatedAt: "updatedAt"
  VirtualCompute:
    type: "object"
    required:
    - "accelerationCapability"
    - "computeId"
    - "computeName"
    - "flavourId"
    - "hostId"
    - "operationalState"
    - "vcImageId"
    - "virtualCpu"
    - "virtualDisks"
    - "virtualMemory"
    - "virtualNetworkInterface"
    - "zoneId"
    properties:
      accelerationCapability:
        type: "array"
        description: "Selected acceleration capabilities (e.g. crypto, GPU) from the\
          \ set of capabilities offered by the compute node acceleration resources.\
          \ The cardinality can be 0, if no particular acceleration capability is\
          \ provided."
        items:
          type: "string"
      computeId:
        type: "string"
        description: "Identifier of the virtualised compute resource."
      computeName:
        type: "string"
        description: "Name of the virtualised compute resource."
      flavourId:
        type: "string"
        description: "Identifier of the given compute flavour used to instantiate\
          \ this virtual compute."
      hostId:
        type: "string"
        description: "Identifier of the host the virtualised compute resource is allocated\
          \ on."
      operationalState:
        type: "string"
        description: "Operational state of the compute resource."
      vcImageId:
        type: "string"
        description: "Identifier of the virtualisation container software image (e.g.\
          \ virtual machine image). Cardinality can be 0 if an \"empty\" virtualisation\
          \ container is allocated."
      virtualCpu:
        $ref: "#/definitions/VirtualCompute_virtualCpu"
      virtualDisks:
        type: "string"
        description: "Element with information of the virtualised storage resources\
          \ (volumes, ephemeral that are attached to the compute resource.)"
      virtualMemory:
        $ref: "#/definitions/VirtualCompute_virtualMemory"
      virtualNetworkInterface:
        type: "array"
        description: "Element with information of the instantiated virtual network\
          \ interfaces of the compute resource."
        items:
          $ref: "#/definitions/ReservedVirtualCompute_virtualisationContainerReserved_virtualNetworkInterface"
      zoneId:
        type: "string"
        description: "If present, it identifies the Resource Zone where the virtual\
          \ compute resources have been allocated."
    example:
      flavourId: "flavourId"
      computeId: "computeId"
      vcImageId: "vcImageId"
      accelerationCapability:
      - "accelerationCapability"
      - "accelerationCapability"
      hostId: "hostId"
      virtualCpu:
        numVirtualCpu: 6
        virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
        cpuArchitecture: "cpuArchitecture"
        virtualCpuPinning:
          cpuMap: "cpuMap"
          cpuPinningRules: "cpuPinningRules"
          cpuPinningPolicy: "cpuPinningPolicy"
        cpuClock: 0.80082819046101150206595775671303272247314453125
      zoneId: "zoneId"
      operationalState: "operationalState"
      virtualDisks: "virtualDisks"
      computeName: "computeName"
      virtualMemory:
        numaEnabled: true
        virtualMemSize: 1.46581298050294517310021547018550336360931396484375
        virtualMemOversubscriptionPolicy: "virtualMemOversubscriptionPolicy"
      virtualNetworkInterface:
      - typeConfiguration: "typeConfiguration"
        typeVirtualNic: "typeVirtualNic"
        macAddress: "macAddress"
        metadata: "metadata"
        resourceId: "resourceId"
        networkPortId: "networkPortId"
        accelerationCapability: "accelerationCapability"
        bandwidth: "bandwidth"
        ipAddress: "ipAddress"
        networkId: "networkId"
        operationalState: "operationalState"
        ownerId: "ownerId"
      - typeConfiguration: "typeConfiguration"
        typeVirtualNic: "typeVirtualNic"
        macAddress: "macAddress"
        metadata: "metadata"
        resourceId: "resourceId"
        networkPortId: "networkPortId"
        accelerationCapability: "accelerationCapability"
        bandwidth: "bandwidth"
        ipAddress: "ipAddress"
        networkId: "networkId"
        operationalState: "operationalState"
        ownerId: "ownerId"
  VirtualComputeFlavour:
    type: "object"
    required:
    - "accelerationCapability"
    - "flavourId"
    - "storageAttributes"
    - "virtualCpu"
    - "virtualMemory"
    - "virtualNetworkInterface"
    properties:
      accelerationCapability:
        type: "string"
        description: "Selected acceleration capabilities (e.g. crypto, GPU) from the\
          \ set of capabilities offered by the compute node acceleration resources.\
          \ The cardinality can be 0, if no particular acceleration capability is\
          \ requested."
      flavourId:
        type: "string"
        description: "Identifier given to the compute flavour."
      storageAttributes:
        type: "array"
        description: "Element containing information about the size of virtualised\
          \ storage resources (e.g. size of volume, in GB), the type of storage (e.g.\
          \ volume, object)."
        items:
          $ref: "#/definitions/CreateComputeResourceReservationRequest_containerFlavour_storageAttributes"
      virtualCpu:
        type: "array"
        description: "The virtual CPU(s) of the virtualised compute."
        items:
          $ref: "#/definitions/CreateComputeResourceReservationRequest_containerFlavour_virtualCpu"
      virtualMemory:
        $ref: "#/definitions/CreateComputeResourceReservationRequest_containerFlavour_virtualMemory"
      virtualNetworkInterface:
        $ref: "#/definitions/CreateComputeResourceReservationRequest_containerFlavour_virtualNetworkInterface"
    example:
      flavourId: "flavourId"
      accelerationCapability: "accelerationCapability"
      storageAttributes:
      - flavourId: "flavourId"
        typeOfStorage: "typeOfStorage"
        hostId: "hostId"
        zoneId: "zoneId"
        operationalState: "operationalState"
        ownerId: "ownerId"
        sizeOfStorage: 0.80082819046101150206595775671303272247314453125
        storageId: "storageId"
        storageName: "storageName"
      - flavourId: "flavourId"
        typeOfStorage: "typeOfStorage"
        hostId: "hostId"
        zoneId: "zoneId"
        operationalState: "operationalState"
        ownerId: "ownerId"
        sizeOfStorage: 0.80082819046101150206595775671303272247314453125
        storageId: "storageId"
        storageName: "storageName"
      virtualCpu:
      - numVirtualCpu: 1
        virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
        cpuArchitecture: "cpuArchitecture"
        virtualCpuPinning:
          cpuMap: "cpuMap"
          cpuPinningRules: "cpuPinningRules"
          cpuPinningPolicy: "cpuPinningPolicy"
        cpuClock: 6.02745618307040320615897144307382404804229736328125
      - numVirtualCpu: 1
        virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
        cpuArchitecture: "cpuArchitecture"
        virtualCpuPinning:
          cpuMap: "cpuMap"
          cpuPinningRules: "cpuPinningRules"
          cpuPinningPolicy: "cpuPinningPolicy"
        cpuClock: 6.02745618307040320615897144307382404804229736328125
      virtualMemory:
        numaEnabled: true
        virtualMemSize: 5.962133916683182377482808078639209270477294921875
        virtualMemOversubscriptionPolicy: "virtualMemOversubscriptionPolicy"
      virtualNetworkInterface:
        typeConfiguration: "typeConfiguration"
        typeVirtualNic: "typeVirtualNic"
        macAddress: "macAddress"
        metadata: "metadata"
        resourceId: "resourceId"
        networkPortId: "networkPortId"
        accelerationCapability: "accelerationCapability"
        bandwidth: "bandwidth"
        ipAddress: "ipAddress"
        networkId: "networkId"
        operationalState: "operationalState"
        ownerId: "ownerId"
  VirtualComputeQuota:
    type: "object"
    required:
    - "numVCPUs"
    - "numVcInstances"
    - "resourceGroupId"
    - "virtualMemSize"
    properties:
      numVCPUs:
        type: "integer"
        format: "int32"
        description: "Number of CPU cores that have been restricted by the quota.\
          \ The cardinality can be 0 if no specific number of CPU cores has been requested\
          \ to be restricted by the quota."
      numVcInstances:
        type: "integer"
        format: "int32"
        description: "Number of virtualisation container instances that have been\
          \ restricted by the quota. The cardinality can be 0 if no specific number\
          \ of CPU cores has been requested to be restricted by the quota."
      resourceGroupId:
        type: "string"
        description: "Unique identifier of the \"infrastructure resource group\",\
          \ logical grouping of virtual resources assigned to a tenant within an Infrastructure\
          \ Domain."
      virtualMemSize:
        type: "number"
        description: "Size of virtual memory that has been restricted by the quota.\
          \ The cardinality can be 0 if no specific number of CPU cores has been requested\
          \ to be restricted by the quota."
    example:
      numVcInstances: 6
      virtualMemSize: 1.46581298050294517310021547018550336360931396484375
      resourceGroupId: "resourceGroupId"
      numVCPUs: 0
  VirtualComputeResourceInformation:
    type: "object"
    required:
    - "accelerationCapability"
    - "computeResourceTypeId"
    - "virtualCPU"
    - "virtualMemory"
    properties:
      accelerationCapability:
        type: "string"
        description: "Acceleration capabilities (e.g. crypto, GPU) for the consumable\
          \ virtualised compute resources from the set of capabilities offered by\
          \ the compute node acceleration resources. The cardinality can be 0, if\
          \ no particular acceleration capability is provided."
      computeResourceTypeId:
        type: "string"
        description: "Identifier of the consumable virtualised compute resource type."
      virtualCPU:
        $ref: "#/definitions/VirtualComputeResourceInformation_virtualCPU"
      virtualMemory:
        $ref: "#/definitions/VirtualComputeResourceInformation_virtualMemory"
    example:
      computeResourceTypeId: "computeResourceTypeId"
      accelerationCapability: "accelerationCapability"
      virtualCPU:
        numVirtualCpu: 6.02745618307040320615897144307382404804229736328125
        virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
        cpuArchitecture: "cpuArchitecture"
        cpuClock: 0.80082819046101150206595775671303272247314453125
        virtualCpuPinningSupported: true
      virtualMemory:
        numaSupported: true
        virtualMemSize: 1.46581298050294517310021547018550336360931396484375
        virtualMemOversubscriptionPolicy: "virtualMemOversubscriptionPolicy"
  VirtualNetwork:
    type: "object"
    required:
    - "bandwidth"
    - "isShared"
    - "networkPort"
    - "networkQoS"
    - "networkResourceId"
    - "networkResourceName"
    - "networkType"
    - "operationalState"
    - "segmentType"
    - "sharingCriteria"
    - "subnet"
    - "zoneId"
    properties:
      bandwidth:
        type: "number"
        description: "Minimum network bandwidth (in Mbps)."
      isShared:
        type: "boolean"
        description: "It defines whether the virtualised network is shared among consumers."
      networkPort:
        type: "array"
        description: "Element providing information of an instantiated virtual network\
          \ port."
        items:
          $ref: "#/definitions/AllocateNetworkResult_networkData_networkPort"
      networkQoS:
        type: "array"
        description: "Element providing information about Quality of Service attributes\
          \ that the network shall support. The cardinality can be \"0\" to allow\
          \ for networks without any specified QoS requirements."
        items:
          $ref: "#/definitions/AllocateNetworkResult_networkData_networkQoS"
      networkResourceId:
        type: "string"
        description: "Identifier of the virtualised network resource."
      networkResourceName:
        type: "string"
        description: "Name of the virtualised network resource."
      networkType:
        type: "string"
        description: "The type of network that maps to the virtualised network. This\
          \ list is extensible. Examples are: \"local\", \"vlan\", \"vxlan\", \"gre\"\
          , \"l3-vpn\", etc. The cardinality can be \"0\" to cover the case where\
          \ this attribute is not required to create the virtualised network."
      operationalState:
        type: "string"
        description: "The operational state of the virtualised network."
      segmentType:
        type: "string"
        description: "The isolated segment for the virtualised network. For instance,\
          \ for a \"vlan\" networkType, it corresponds to the vlan identifier; and\
          \ for a \"gre\" networkType, this corresponds to a gre key. The cardinality\
          \ can be \"0\" to allow for flat networks without any specific segmentation."
      sharingCriteria:
        type: "string"
        description: "Only present for shared networks. Indicate the sharing criteria\
          \ for this network. This criteria might be a list of authorized consumers."
      subnet:
        type: "string"
        description: "Only present if the network provides layer 3 connectivity."
      zoneId:
        type: "string"
        description: "If present, it identifies the Resource Zone where the virtual\
          \ network resources have been allocated."
    example:
      subnet: "subnet"
      networkResourceName: "networkResourceName"
      bandwidth: 0.80082819046101150206595775671303272247314453125
      networkQoS:
      - qosName: "qosName"
        qosValue: "qosValue"
      - qosName: "qosName"
        qosValue: "qosValue"
      zoneId: "zoneId"
      networkResourceId: "networkResourceId"
      operationalState: "operationalState"
      networkType: "networkType"
      networkPort:
      - portType: "portType"
        metadata:
        - value: "value"
          key: "key"
        - value: "value"
          key: "key"
        resourceId: "resourceId"
        bandwidth: 6.02745618307040320615897144307382404804229736328125
        segmentId: "segmentId"
        networkId: "networkId"
        operationalState: "operationalState"
        attachedResourceId: "attachedResourceId"
      - portType: "portType"
        metadata:
        - value: "value"
          key: "key"
        - value: "value"
          key: "key"
        resourceId: "resourceId"
        bandwidth: 6.02745618307040320615897144307382404804229736328125
        segmentId: "segmentId"
        networkId: "networkId"
        operationalState: "operationalState"
        attachedResourceId: "attachedResourceId"
      isShared: true
      segmentType: "segmentType"
      sharingCriteria: "sharingCriteria"
  VirtualNetworkQuota:
    type: "object"
    required:
    - "numPorts"
    - "numPublicIps"
    - "numSubnets"
    - "resourceGroupId"
    properties:
      numPorts:
        type: "integer"
        format: "int32"
        description: "Number of ports that have been restricted by the quota. The\
          \ cardinality can be 0 if no specific number of ports has been requested\
          \ to be restricted by the quota."
      numPublicIps:
        type: "integer"
        format: "int32"
        description: "Number of public IP addresses that have been restricted by the\
          \ quota. The cardinality can be 0 if no specific number of public IP addresses\
          \ has been requested to be restricted by the quota."
      numSubnets:
        type: "integer"
        format: "int32"
        description: "Number of subnets that have been restricted by the quota. The\
          \ cardinality can be 0 if no specific number of subnets has been requested\
          \ to be restricted by the quota."
      resourceGroupId:
        type: "string"
        description: "Unique identifier of the \"infrastructure resource group\",\
          \ logical grouping of virtual resources assigned to a tenant within an Infrastructure\
          \ Domain."
    example:
      numPublicIps: 6
      numPorts: 0
      numSubnets: 1
      resourceGroupId: "resourceGroupId"
  VirtualNetworkResourceInformation:
    type: "object"
    required:
    - "bandwidth"
    - "networkQoS"
    - "networkResourceTypeId"
    - "networkType"
    properties:
      bandwidth:
        type: "number"
        description: "Minimum network bandwidth (in Mbps)."
      networkQoS:
        type: "array"
        description: "Element providing information about Quality of Service attributes\
          \ that the network shall support."
        items:
          $ref: "#/definitions/AllocateNetworkResult_networkData_networkQoS"
      networkResourceTypeId:
        type: "string"
        description: "Identifier of the network resource type."
      networkType:
        type: "string"
        description: "The type of network that maps to the virtualised network. Examples\
          \ are: \"local\", \"vlan\", \"vxlan\", \"gre\", etc."
    example:
      bandwidth: 0.80082819046101150206595775671303272247314453125
      networkResourceTypeId: "networkResourceTypeId"
      networkQoS:
      - qosName: "qosName"
        qosValue: "qosValue"
      - qosName: "qosName"
        qosValue: "qosValue"
      networkType: "networkType"
  inline_response_200:
    properties:
      Gateways:
        $ref: "#/definitions/Gateways"
      virtualLinks:
        $ref: "#/definitions/virtualLinks"
    example:
      Gateways: ""
      virtualLinks: ""
  inline_response_200_1:
    properties:
      NfviPops:
        $ref: "#/definitions/NfviPops"
      logicalLinkInterNfviPops:
        $ref: "#/definitions/logicalLinkInterNfviPops"
    example:
      NfviPops: ""
      logicalLinkInterNfviPops: ""
  inline_response_201:
    required:
    - "interNfviPopConnnectivityId"
    - "interNfviPopNetworkSegmentType"
    properties:
      interNfviPopConnnectivityId:
        $ref: "#/definitions/interNfviPopConnnectivityId"
      interNfviPopNetworkSegmentType:
        $ref: "#/definitions/interNfviPopNetworkSegmentType"
    example:
      interNfviPopNetworkSegmentType: {}
      interNfviPopConnnectivityId: {}
  Gateways_inner_gatewayAttributes_networkConnectivityEndpoint:
    required:
    - "netGwInterfceId"
    - "netGwIpAddress"
    properties:
      netGwIpAddress:
        type: "string"
        description: "5GT - Reachable Gw IPv4 Address in terms of A.B.C.D (/32)."
      netGwInterfceId:
        type: "number"
        description: "5GT - Reachable Gw interface ID."
    description: "Information about network connectivity endpoints to the NFVI-PoP\
      \ that the WIM manage."
  Gateways_inner_gatewayAttributes:
    required:
    - "gatewayId"
    - "geographicalLocationInfo"
    - "networkConnectivityEndpoint"
    - "wimId"
    properties:
      geographicalLocationInfo:
        type: "string"
        description: "It provides information about the geographic location (e.g.\
          \ geographic coordinates or address of the building, etc.) of the NFVI resources\
          \ that the VIM manages."
      wimId:
        type: "string"
        description: "Identification of the WIM."
      networkConnectivityEndpoint:
        type: "array"
        items:
          $ref: "#/definitions/Gateways_inner_gatewayAttributes_networkConnectivityEndpoint"
      gatewayId:
        type: "string"
        description: "Identification of the gateway in the format IPv4."
  Gateways_inner:
    required:
    - "gatewayAttributes"
    properties:
      gatewayAttributes:
        $ref: "#/definitions/Gateways_inner_gatewayAttributes"
  virtualLinks_inner_virtualLink_networkQoS:
    required:
    - "linkCostValue"
    - "linkDelayValue"
    - "packetLossRate"
    properties:
      linkCostValue:
        type: "number"
        description: "5GT - Value of Link Cost"
      linkDelayValue:
        type: "number"
        description: "5GT - Value of Link Delay (expressed in ms)"
      packetLossRate:
        type: "number"
        description: "5GT - Link packet loss rate."
    description: "5GT - Element providing information about Quality of Service attributes\
      \ (cost and delay) that the network shall support."
  virtualLinks_inner_virtualLink:
    required:
    - "availableBandwidth"
    - "dstGwId"
    - "networkQoS"
    - "srcGwId"
    - "totalBandwidth"
    - "virtualLinkId"
    properties:
      virtualLinkId:
        type: "string"
        description: "(numbered) Identifier of the virtual link"
      totalBandwidth:
        type: "number"
        description: "Total bandwidth capacity supported by the logical link (in Mbps)."
      availableBandwidth:
        type: "number"
        description: "Available bandwidth capacity supported by the logical link (in\
          \ Mbps)."
      networkQoS:
        $ref: "#/definitions/virtualLinks_inner_virtualLink_networkQoS"
      srcGwId:
        type: "string"
        description: "5GT - Source NFVI-PoP Gw IPv4 Address in terms of A.B.C.D (/32)."
      srcLinkId:
        type: "integer"
        format: "uint32"
        description: "Local Logical Link Id."
      dstGwId:
        type: "string"
        description: "5GT - Destination NFVI-PoP Gw IPv4 Address in terms of A.B.C.D\
          \ (/32)."
      dstLinkId:
        type: "integer"
        format: "uint32"
        description: "Remote Logical Link Id."
      networkLayer:
        $ref: "#/definitions/networkLayer"
    description: "5GT - Element providing information the attributes related to particular\
      \ logical links between pair of NFVI-PoPs."
  virtualLinks_inner:
    required:
    - "virtualLink"
    properties:
      virtualLink:
        $ref: "#/definitions/virtualLinks_inner_virtualLink"
  NfviPops_inner_nfviPopAttributes_networkConnectivityEndpoint:
    required:
    - "netGwIpAddress"
    properties:
      netGwIpAddress:
        type: "string"
        description: "5GT - Reachable Gw IPv4 Address in terms of A.B.C.D (/32)."
    description: "Information about network connectivity endpoints to the NFVI-PoP\
      \ that the VIM manages which helps build topology information relative to NFVI-PoP\
      \ connectivity to other NFVI-PoP or N-PoP."
  NfviPops_inner_nfviPopAttributes_memoryResourceAttributes:
    required:
    - "allocatedCapacity"
    - "availableCapacity"
    - "reservedCapacity"
    - "totalCapacity"
    properties:
      availableCapacity:
        type: "string"
        description: "The free capacity available for allocation and reservation of\
          \ memory resources."
      reservedCapacity:
        type: "string"
        description: "The reserved capacity of   memory resources."
      totalCapacity:
        type: "string"
        description: "The total capacity of memory resources."
      allocatedCapacity:
        type: "string"
        description: "The allocated capacity of memory resources."
  NfviPops_inner_nfviPopAttributes_cpuResourceAttributes:
    required:
    - "allocatedCapacity"
    - "availableCapacity"
    - "reservedCapacity"
    - "totalCapacity"
    properties:
      availableCapacity:
        type: "string"
        description: "The free capacity available for allocation and reservation of\
          \ CPU resources."
      reservedCapacity:
        type: "string"
        description: "The reserved capacity of   CPU resources."
      totalCapacity:
        type: "string"
        description: "The total capacity of CPU resources."
      allocatedCapacity:
        type: "string"
        description: "The allocated capacity of CPU resources."
  NfviPops_inner_nfviPopAttributes_storageResourceAttributes:
    required:
    - "allocatedCapacity"
    - "availableCapacity"
    - "reservedCapacity"
    - "totalCapacity"
    properties:
      availableCapacity:
        type: "string"
        description: "The free capacity available for allocation and reservation of\
          \ storage resources."
      reservedCapacity:
        type: "string"
        description: "The reserved capacity of storage resources."
      totalCapacity:
        type: "string"
        description: "The total capacity of storage resources."
      allocatedCapacity:
        type: "string"
        description: "The allocated capacity of storage resources."
  NfviPops_inner_nfviPopAttributes_resourceZoneAttributes:
    required:
    - "cpuResourceAttributes"
    - "memoryResourceAttributes"
    - "metadata"
    - "storageResourceAttributes"
    - "zoneId"
    - "zoneName"
    - "zoneProperty"
    - "zoneState"
    properties:
      zoneId:
        type: "string"
        description: "The identifier of the Resource Zone."
      zoneName:
        type: "string"
        description: "The name of the Resource Zone."
      zoneState:
        type: "string"
        description: "Information about the current state of the Resource Zone, e.g.\
          \ if the Resource Zone is available."
      zoneProperty:
        type: "string"
        description: "Set of properties that define the capabilities associated to\
          \ the Resource Zone. Examples of capabilities may include: support of certain\
          \ compute resource types (e.g. low performance, acceleration capabilities,\
          \ etc. association to certain NFVI-PoP physical segregation (e.g. different\
          \ power or network sub-systems, availability of redundancy power sub-systems),\
          \ etc."
      metadata:
        type: "string"
        description: "List of metadata key-value pairs used to associate meaningful\
          \ metadata to the NFVI-PoP Zone."
      memoryResourceAttributes:
        $ref: "#/definitions/NfviPops_inner_nfviPopAttributes_memoryResourceAttributes"
      cpuResourceAttributes:
        $ref: "#/definitions/NfviPops_inner_nfviPopAttributes_cpuResourceAttributes"
      storageResourceAttributes:
        $ref: "#/definitions/NfviPops_inner_nfviPopAttributes_storageResourceAttributes"
  NfviPops_inner_nfviPopAttributes:
    required:
    - "geographicalLocationInfo"
    - "networkConnectivityEndpoint"
    - "nfviPopId"
    - "resourceZoneAttributes"
    - "vimId"
    properties:
      geographicalLocationInfo:
        type: "string"
        description: "It provides information about the geographic location (e.g.\
          \ geographic coordinates or address of the building, etc.) of the NFVI resources\
          \ that the VIM manages."
      vimId:
        type: "string"
        description: "Identification of the VIM."
      networkConnectivityEndpoint:
        type: "array"
        items:
          $ref: "#/definitions/NfviPops_inner_nfviPopAttributes_networkConnectivityEndpoint"
      nfviPopId:
        type: "string"
        description: "Identification of the NFVI-PoP."
      resourceZoneAttributes:
        type: "array"
        items:
          $ref: "#/definitions/NfviPops_inner_nfviPopAttributes_resourceZoneAttributes"
  NfviPops_inner:
    required:
    - "nfviPopAttributes"
    properties:
      nfviPopAttributes:
        $ref: "#/definitions/NfviPops_inner_nfviPopAttributes"
  logicalLinkInterNfviPops_inner_logicalLinks_networkQoS:
    required:
    - "linkCost"
    - "linkCostValue"
    - "linkDelay"
    - "linkDelayValue"
    properties:
      linkCostValue:
        type: "number"
        description: "5GT - Value of Link Cost"
      linkCost:
        type: "string"
        description: "5GT - Link cost name ."
      linkDelayValue:
        type: "number"
        description: "5GT - Value of Link Delay (expressed in ms)"
      linkDelay:
        type: "string"
        description: "5GT - Link delay name."
    description: "5GT - Element providing information about Quality of Service attributes\
      \ (cost and delay) that the network shall support."
  logicalLinkInterNfviPops_inner_logicalLinks:
    required:
    - "availableBandwidth"
    - "dstGwIpAddress"
    - "interNfviPopNetworkTopology"
    - "interNfviPopNetworkType"
    - "localLinkId"
    - "logicalLinkId"
    - "networkLayer"
    - "networkQoS"
    - "remoteLinkId"
    - "srcGwIpAddress"
    - "totalBandwidth"
    properties:
      logicalLinkId:
        type: "string"
        description: "(numbered) Identifier of the logical link"
      totalBandwidth:
        type: "number"
        description: "Total bandwidth capacity supported by the logical link (in Mbps)."
      availableBandwidth:
        type: "number"
        description: "Available bandwidth capacity supported by the logical link (in\
          \ Mbps)."
      networkQoS:
        $ref: "#/definitions/logicalLinkInterNfviPops_inner_logicalLinks_networkQoS"
      srcGwIpAddress:
        type: "string"
        description: "5GT - Source NFVI-PoP Gw IPv4 Address in terms of A.B.C.D (/32)."
      localLinkId:
        type: "integer"
        format: "uint32"
        description: "Local Logical Link Id."
      dstGwIpAddress:
        type: "string"
        description: "5GT - Destination NFVI-PoP Gw IPv4 Address in terms of A.B.C.D\
          \ (/32)."
      remoteLinkId:
        type: "integer"
        format: "uint32"
        description: "Remote Logical Link Id."
      networkLayer:
        $ref: "#/definitions/networkLayer"
      interNfviPopNetworkType:
        $ref: "#/definitions/interNfviPopNetworkType"
      interNfviPopNetworkTopology:
        $ref: "#/definitions/interNfviPopNetworkTopology"
    description: "5GT - Element providing information the attributes related to particular\
      \ logical links between pair of NFVI-PoPs."
  logicalLinkInterNfviPops_inner:
    required:
    - "logicalLinks"
    properties:
      logicalLinks:
        $ref: "#/definitions/logicalLinkInterNfviPops_inner_logicalLinks"
  metaData_inner:
    required:
    - "key"
    - "value"
    properties:
      key:
        type: "string"
      value:
        type: "string"
    example:
      value: "value"
      key: "key"
  logicalLinkPathList_inner:
    required:
    - "logicalLinkAttributes"
    properties:
      logicalLinkAttributes:
        $ref: "#/definitions/logicalLinkAttributes"
  interNfviPopConnnectivityIdList_inner:
    required:
    - "interNfviPopConnnectivityId"
    properties:
      interNfviPopConnnectivityId:
        $ref: "#/definitions/interNfviPopConnnectivityId"
  AllocateComputeRequest_affinityAntiAffinityResourceList:
    required:
    - "resource"
    properties:
      resource:
        type: "array"
        description: "List of identifiers of virtualised resources."
        items:
          type: "string"
    description: "Consumer-managed list of identifiers of virtualised resources with\
      \ which the actual resource is requested to be affine or anti-affine. Either\
      \ affinityAntiAffinityResourceList or affinityAntiAffinityResourceGroup but\
      \ not both shall be present."
    example:
      resource:
      - "resource"
      - "resource"
  AllocateComputeRequest_affinityOrAntiAffinityConstraints:
    required:
    - "affinityAntiAffinityResourceGroup"
    - "affinityAntiAffinityResourceList"
    - "scope"
    - "type"
    properties:
      affinityAntiAffinityResourceGroup:
        type: "string"
        description: "Identifier of the producer-managed group of virtualised resources\
          \ with which the actual resource is requested to be affine or anti-affine.\
          \ Either affinityAntiAffinityResourceList or affinityAntiAffinityResourceGroup\
          \ but not both shall be present."
      affinityAntiAffinityResourceList:
        $ref: "#/definitions/AllocateComputeRequest_affinityAntiAffinityResourceList"
      scope:
        type: "string"
        description: "Qualifies the scope of the constraint. In case of compute resource:\
          \ e.g. \"NFVI-PoP\" or \"NFVI Node\". In case of ports: e.g. \"virtual switch\
          \ or router\" or \"physical NIC\", or \"physical network\" or \"NFVI Node\"\
          . In case of networks: e.g. \"physical NIC\", \"physical network\" or \"\
          NFVI Node\". In case of subnets: it should be ignored. Defaults to \"NFVI\
          \ Node\" if absent."
      type:
        type: "string"
        description: "Indicates whether this is an affinity or anti-affinity constraint."
    example:
      affinityAntiAffinityResourceGroup: "affinityAntiAffinityResourceGroup"
      scope: "scope"
      type: "type"
      affinityAntiAffinityResourceList:
        resource:
        - "resource"
        - "resource"
  AllocateComputeRequest_interfaceData:
    required:
    - "ipAddress"
    - "macAddress"
    properties:
      ipAddress:
        type: "string"
        description: "The virtual network interface can be configured with specific\
          \ IP address(es) associated to the network to be attached to. The cardinality\
          \ can be 0 in the case that a network interface is created without being\
          \ attached to any specific network, or when an IP address can be automatically\
          \ configured, e.g. by DHCP."
      macAddress:
        type: "string"
        description: "The MAC address desired for the virtual network interface. The\
          \ cardinality can be 0 to allow for network interface without specific MAC\
          \ address configuration."
    example:
      macAddress: "macAddress"
      ipAddress: "ipAddress"
  AllocateComputeRequest_userData:
    required:
    - "content"
    - "method"
    properties:
      content:
        type: "string"
        description: "String containing the user data to customize a virtualised compute\
          \ resource at boot-time."
      method:
        type: "string"
        description: "Method used as transportation media to convey the content of\
          \ the UserData to the virtualised compute resource. Possible values: CONFIG-DRIVE."
    description: "Element containing user data to customize the virtualised compute\
      \ resource at boot-time."
    example:
      method: "method"
      content: "content"
  AllocateNetworkResult_networkData_networkPort:
    required:
    - "attachedResourceId"
    - "bandwidth"
    - "networkId"
    - "operationalState"
    - "portType"
    - "resourceId"
    - "segmentId"
    properties:
      attachedResourceId:
        type: "string"
        description: "Identifier of the attached resource to the network port (e.g.\
          \ a virtualised compute resource, or identifier of the virtual network interface).\
          \ The cardinality can be \"0\" if there is no specific resource connected\
          \ to the network port."
      bandwidth:
        type: "number"
        description: "The bandwidth of the virtual network port (in Mbps). Cardinality\
          \ can be \"0\" for virtual network ports without any specific allocated\
          \ bandwidth."
      metadata:
        type: "array"
        description: "List of metadata key-value pairs used by the consumer to associate\
          \ meaningful metadata to the related virtualised resource."
        items:
          $ref: "#/definitions/metaData_inner"
      networkId:
        type: "string"
        description: "Identifier of the network that the port belongs to. When creating\
          \ a port, such port needs to be part of a network."
      operationalState:
        type: "string"
        description: "The operational state of the virtual network port."
      portType:
        type: "string"
        description: "Type of network port. Examples of types are access ports (layer\
          \ 2 or 3), or trunk ports (layer 1) that become transport for multiple layer\
          \ 2 or layer 3 networks."
      resourceId:
        type: "string"
        description: "Identifier of the virtual network port."
      segmentId:
        type: "string"
        description: "The isolated segment the network port belongs to. For instance,\
          \ for a \"vlan\", it corresponds to the vlan identifier; and for a \"gre\"\
          , this corresponds to a gre key. The cardinality can be \"0\" for flat networks\
          \ without any specific segmentation."
    example:
      portType: "portType"
      metadata:
      - value: "value"
        key: "key"
      - value: "value"
        key: "key"
      resourceId: "resourceId"
      bandwidth: 6.02745618307040320615897144307382404804229736328125
      segmentId: "segmentId"
      networkId: "networkId"
      operationalState: "operationalState"
      attachedResourceId: "attachedResourceId"
  AllocateNetworkResult_networkData_networkQoS:
    required:
    - "qosName"
    - "qosValue"
    properties:
      qosName:
        type: "string"
        description: "Name given to the QoS parameter."
      qosValue:
        type: "string"
        description: "Value of the QoS parameter."
    example:
      qosName: "qosName"
      qosValue: "qosValue"
  AllocateNetworkResult_networkData:
    required:
    - "bandwidth"
    - "isShared"
    - "networkPort"
    - "networkQoS"
    - "networkResourceId"
    - "networkResourceName"
    - "networkType"
    - "operationalState"
    - "segmentType"
    - "sharingCriteria"
    - "subnet"
    - "zoneId"
    properties:
      bandwidth:
        type: "number"
        description: "Minimum network bandwidth (in Mbps)."
      isShared:
        type: "boolean"
        description: "It defines whether the virtualised network is shared among consumers."
      networkPort:
        type: "array"
        description: "Element providing information of an instantiated virtual network\
          \ port."
        items:
          $ref: "#/definitions/AllocateNetworkResult_networkData_networkPort"
      networkQoS:
        type: "array"
        description: "Element providing information about Quality of Service attributes\
          \ that the network shall support. The cardinality can be \"0\" to allow\
          \ for networks without any specified QoS requirements."
        items:
          $ref: "#/definitions/AllocateNetworkResult_networkData_networkQoS"
      networkResourceId:
        type: "string"
        description: "Identifier of the virtualised network resource."
      networkResourceName:
        type: "string"
        description: "Name of the virtualised network resource."
      networkType:
        type: "string"
        description: "The type of network that maps to the virtualised network. This\
          \ list is extensible. Examples are: \"local\", \"vlan\", \"vxlan\", \"gre\"\
          , \"l3-vpn\", etc. The cardinality can be \"0\" to cover the case where\
          \ this attribute is not required to create the virtualised network."
      operationalState:
        type: "string"
        description: "The operational state of the virtualised network."
      segmentType:
        type: "string"
        description: "The isolated segment for the virtualised network. For instance,\
          \ for a \"vlan\" networkType, it corresponds to the vlan identifier; and\
          \ for a \"gre\" networkType, this corresponds to a gre key. The cardinality\
          \ can be \"0\" to allow for flat networks without any specific segmentation."
      sharingCriteria:
        type: "string"
        description: "Only present for shared networks. Indicate the sharing criteria\
          \ for this network. This criteria might be a list of authorized consumers."
      subnet:
        type: "string"
        description: "Only present if the network provides layer 3 connectivity."
      zoneId:
        type: "string"
        description: "If present, it identifies the Resource Zone where the virtual\
          \ network resources have been allocated."
    description: "If network types are created satisfactorily, it contains the data\
      \ relative to the instantiated virtualised network resource. Cardinality can\
      \ be \"0\" if the request did not include creation of such type of resource."
    example:
      subnet: "subnet"
      networkResourceName: "networkResourceName"
      bandwidth: 0.80082819046101150206595775671303272247314453125
      networkQoS:
      - qosName: "qosName"
        qosValue: "qosValue"
      - qosName: "qosName"
        qosValue: "qosValue"
      zoneId: "zoneId"
      networkResourceId: "networkResourceId"
      operationalState: "operationalState"
      networkType: "networkType"
      networkPort:
      - portType: "portType"
        metadata:
        - value: "value"
          key: "key"
        - value: "value"
          key: "key"
        resourceId: "resourceId"
        bandwidth: 6.02745618307040320615897144307382404804229736328125
        segmentId: "segmentId"
        networkId: "networkId"
        operationalState: "operationalState"
        attachedResourceId: "attachedResourceId"
      - portType: "portType"
        metadata:
        - value: "value"
          key: "key"
        - value: "value"
          key: "key"
        resourceId: "resourceId"
        bandwidth: 6.02745618307040320615897144307382404804229736328125
        segmentId: "segmentId"
        networkId: "networkId"
        operationalState: "operationalState"
        attachedResourceId: "attachedResourceId"
      isShared: true
      segmentType: "segmentType"
      sharingCriteria: "sharingCriteria"
  AllocateNetworkResult_networkPortData:
    required:
    - "attachedResourceId"
    - "bandwidth"
    - "networkId"
    - "operationalState"
    - "portType"
    - "resourceId"
    - "segmentId"
    properties:
      attachedResourceId:
        type: "string"
        description: "Identifier of the attached resource to the network port (e.g.\
          \ a virtualised compute resource, or identifier of the virtual network interface).\
          \ The cardinality can be \"0\" if there is no specific resource connected\
          \ to the network port."
      bandwidth:
        type: "number"
        description: "The bandwidth of the virtual network port (in Mbps). Cardinality\
          \ can be \"0\" for virtual network ports without any specific allocated\
          \ bandwidth."
      metadata:
        type: "array"
        description: "List of metadata key-value pairs used by the consumer to associate\
          \ meaningful metadata to the related virtualised resource."
        items:
          $ref: "#/definitions/metaData_inner"
      networkId:
        type: "string"
        description: "Identifier of the network that the port belongs to. When creating\
          \ a port, such port needs to be part of a network."
      operationalState:
        type: "string"
        description: "The operational state of the virtual network port."
      portType:
        type: "string"
        description: "Type of network port. Examples of types are access ports (layer\
          \ 2 or 3), or trunk ports (layer 1) that become transport for multiple layer\
          \ 2 or layer 3 networks."
      resourceId:
        type: "string"
        description: "Identifier of the virtual network port."
      segmentId:
        type: "string"
        description: "The isolated segment the network port belongs to. For instance,\
          \ for a \"vlan\", it corresponds to the vlan identifier; and for a \"gre\"\
          , this corresponds to a gre key. The cardinality can be \"0\" for flat networks\
          \ without any specific segmentation."
    description: "If network types are created satisfactorily, it contains the data\
      \ relative to the instantiated virtualised network resource. Cardinality can\
      \ be \"0\" if the request did not include creation of such type of resource."
    example:
      portType: "portType"
      metadata:
      - value: "value"
        key: "key"
      - value: "value"
        key: "key"
      resourceId: "resourceId"
      bandwidth: 6.02745618307040320615897144307382404804229736328125
      segmentId: "segmentId"
      networkId: "networkId"
      operationalState: "operationalState"
      attachedResourceId: "attachedResourceId"
  AllocateNetworkResult_subnetData:
    required:
    - "addressPool"
    - "cidr"
    - "gatewayIp"
    - "ipVersion"
    - "isDhcpEnabled"
    - "networkId"
    - "operationalState"
    - "resourceId"
    properties:
      addressPool:
        type: "string"
        description: "Address pools for the network/subnetwork. The cardinality can\
          \ be 0 when VIM is allowed to allocate all addresses in the CIDR except\
          \ for the address of the network/subnetwork gateway."
      cidr:
        type: "string"
        description: "The CIDR of the network/subnetwork, i.e. network address and\
          \ subnet mask."
      gatewayIp:
        type: "string"
        description: "The IP address of the network/subnetwork gateway."
      ipVersion:
        type: "string"
        description: "The IP version of the network/subnetwork."
      isDhcpEnabled:
        type: "boolean"
        description: "True when DHCP is enabled for this network/subnetwork, or false\
          \ otherwise."
      metadata:
        type: "array"
        description: "List of metadata key-value pairs used by the consumer to associate\
          \ meaningful metadata to the related virtualised resource."
        items:
          $ref: "#/definitions/metaData_inner"
      networkId:
        type: "string"
        description: "The identifier of the virtualised network that the virtualised\
          \ sub-network is attached to. The cardinality can be 0 to cover the case\
          \ where this type is used to describe the L3 attributes of a network rather\
          \ than a subnetwork."
      operationalState:
        type: "string"
        description: "The operational state of the virtualised sub-network."
      resourceId:
        type: "string"
        description: "Identifier of the virtualised sub-network."
    description: "If subnet types are created satisfactorily, it contains the data\
      \ relative to the allocated subnet. Cardinality can be \"0\" if the request\
      \ did not include creation of such type of resource."
    example:
      metadata:
      - value: "value"
        key: "key"
      - value: "value"
        key: "key"
      resourceId: "resourceId"
      ipVersion: "ipVersion"
      isDhcpEnabled: true
      addressPool: "addressPool"
      cidr: "cidr"
      gatewayIp: "gatewayIp"
      networkId: "networkId"
      operationalState: "operationalState"
  CreateComputeResourceQuotaRequest_virtualComputeQuota:
    required:
    - "numVCPUs"
    - "numVcInstances"
    - "virtualMemSize"
    properties:
      numVCPUs:
        type: "integer"
        format: "int32"
        description: "Number of CPU cores to be restricted by the quota. The cardinality\
          \ can be 0 if no specific number of CPU cores is to be restricted by the\
          \ quota or the quota for CPU cores is not to be update."
      numVcInstances:
        type: "integer"
        format: "int32"
        description: "Number of virtualisation container instances to be restricted\
          \ by the quota. The cardinality can be 0 if no specific number of virtualisation\
          \ container instances is to be restricted by the quota or the quota for\
          \ virtualisation container instances is not to be update."
      virtualMemSize:
        type: "number"
        description: "Size of virtual memory to be restricted by the quota. The cardinality\
          \ can be 0 if no specific size of virtual memory is to be restricted by\
          \ the quota or the quota for virtual memory is not to be update."
    description: "Identifier of the resource reservation applicable to this virtualised\
      \ resource management operation. Cardinality can be 0 if no resource reservation\
      \ was used."
    example:
      numVcInstances: 6
      virtualMemSize: 1.46581298050294517310021547018550336360931396484375
      numVCPUs: 0
  CreateComputeResourceReservationRequest_computePoolReservation_computeAttributes:
    required:
    - "accelerationCapability"
    - "cpuArchitecture"
    - "virtualCpuOversubscriptionPolicy"
    properties:
      accelerationCapability:
        type: "string"
        description: "Selected acceleration capabilities (e.g. crypto, GPU) from the\
          \ set of capabilities offered by the compute node acceleration resources.\
          \ The cardinality can be 0, if no particular acceleration capability is\
          \ requested."
      cpuArchitecture:
        type: "string"
        description: "CPU architecture type. Examples are \"x86\", \"ARM\". The cardinality\
          \ can be 0, if no particular CPU architecture type is requested."
      virtualCpuOversubscriptionPolicy:
        type: "string"
        description: "The CPU core oversubscription policy in terms of virtual CPU\
          \ cores to physical CPU cores/threads on the platform. The cardinality can\
          \ be 0, if no particular value is requested."
    description: "Information specifying additional attributes of the compute resource\
      \ to be reserved."
    example:
      virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
      accelerationCapability: "accelerationCapability"
      cpuArchitecture: "cpuArchitecture"
  CreateComputeResourceReservationRequest_computePoolReservation:
    required:
    - "computeAttributes"
    - "numCpuCores"
    - "numVcInstances"
    - "virtualMemSize"
    properties:
      computeAttributes:
        $ref: "#/definitions/CreateComputeResourceReservationRequest_computePoolReservation_computeAttributes"
      numCpuCores:
        type: "integer"
        format: "int32"
        description: "Number of CPU cores to be reserved."
      numVcInstances:
        type: "integer"
        format: "int32"
        description: "Number of virtualised container instances to be reserved."
      virtualMemSize:
        type: "number"
        description: "Size of virtual memory to be reserved."
    description: "Amount of compute resources that need to be reserved, e.g. {\"cpu_cores\"\
      : 90, \"vm_instances\": 10, \"ram\": 10000}."
    example:
      computeAttributes:
        virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
        accelerationCapability: "accelerationCapability"
        cpuArchitecture: "cpuArchitecture"
      numVcInstances: 6
      virtualMemSize: 1.46581298050294517310021547018550336360931396484375
      numCpuCores: 0
  CreateComputeResourceReservationRequest_containerFlavour_storageAttributes:
    required:
    - "flavourId"
    - "hostId"
    - "operationalState"
    - "ownerId"
    - "sizeOfStorage"
    - "storageId"
    - "storageName"
    - "typeOfStorage"
    - "zoneId"
    properties:
      flavourId:
        type: "string"
        description: "Identifier of the storage flavour used to instantiate this virtual\
          \ storage."
      hostId:
        type: "string"
        description: "Identifier of the host where the virtualised storage resource\
          \ is allocated. A cardinality of 0 refers to distributed storage solutions."
      operationalState:
        type: "string"
        description: "Operational state of the resource."
      ownerId:
        type: "string"
        description: "Identifier of the virtualised resource that owns and uses such\
          \ a virtualised storage resource. The value can be NULL if the virtualised\
          \ storage is not attached yet to any other resource (e.g. a virtual machine)."
      sizeOfStorage:
        type: "number"
        description: "Size of virtualised storage resource (e.g. size of volume, in\
          \ GB)."
      storageId:
        type: "string"
        description: "Identifier of the virtualised storage resource."
      storageName:
        type: "string"
        description: "Name of the virtualised storage resource."
      typeOfStorage:
        type: "string"
        description: "Type of virtualised storage resource (e.g. volume, object)."
      zoneId:
        type: "string"
        description: "If present, it identifies the Resource Zone where the virtual\
          \ storage resources have been allocated."
    example:
      flavourId: "flavourId"
      typeOfStorage: "typeOfStorage"
      hostId: "hostId"
      zoneId: "zoneId"
      operationalState: "operationalState"
      ownerId: "ownerId"
      sizeOfStorage: 0.80082819046101150206595775671303272247314453125
      storageId: "storageId"
      storageName: "storageName"
  CreateComputeResourceReservationRequest_containerFlavour_virtualCpuPinning:
    required:
    - "cpuMap"
    - "cpuPinningPolicy"
    - "cpuPinningRules"
    properties:
      cpuMap:
        type: "string"
        description: "Shows the association of virtual CPU cores to physical CPU cores."
      cpuPinningPolicy:
        type: "string"
        description: "The policy can take values of \"static\" or \"dynamic\". In\
          \ case of \"static\" the virtual CPU cores have been allocated to physical\
          \ CPU cores according to the rules defined in cpuPinningRules. In case of\
          \ \"dynamic\" the allocation of virtual CPU cores to physical CPU cores\
          \ is decided by the VIM."
      cpuPinningRules:
        type: "string"
        description: "A list of rules that should be considered during the allocation\
          \ of the virtual CPUs to physical CPUs in case of \"static\" cpuPinningPolicy."
    description: "The virtual CPU pinning configuration for the virtualised compute\
      \ resource."
    example:
      cpuMap: "cpuMap"
      cpuPinningRules: "cpuPinningRules"
      cpuPinningPolicy: "cpuPinningPolicy"
  CreateComputeResourceReservationRequest_containerFlavour_virtualCpu:
    required:
    - "cpuArchitecture"
    - "cpuClock"
    - "numVirtualCpu"
    - "virtualCpuOversubscriptionPolicy"
    - "virtualCpuPinning"
    properties:
      cpuArchitecture:
        type: "string"
        description: "CPU architecture type. Examples are x86, ARM."
      cpuClock:
        type: "number"
        description: "Minimum CPU clock rate (e.g. in MHz) available for the virtualised\
          \ CPU resources."
      numVirtualCpu:
        type: "integer"
        format: "int32"
        description: "Number of virtual CPUs."
      virtualCpuOversubscriptionPolicy:
        type: "string"
        description: "The CPU core oversubscription policy, e.g. the relation of virtual\
          \ CPU cores to physical CPU cores/threads. The cardinality can be 0 if no\
          \ policy has been defined during the allocation request."
      virtualCpuPinning:
        $ref: "#/definitions/CreateComputeResourceReservationRequest_containerFlavour_virtualCpuPinning"
    example:
      numVirtualCpu: 1
      virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
      cpuArchitecture: "cpuArchitecture"
      virtualCpuPinning:
        cpuMap: "cpuMap"
        cpuPinningRules: "cpuPinningRules"
        cpuPinningPolicy: "cpuPinningPolicy"
      cpuClock: 6.02745618307040320615897144307382404804229736328125
  CreateComputeResourceReservationRequest_containerFlavour_virtualMemory:
    required:
    - "numaEnabled"
    - "virtualMemOversubscriptionPolicy"
    - "virtualMemSize"
    properties:
      numaEnabled:
        type: "boolean"
        description: "It specifies the memory allocation to be cognisant of the relevant\
          \ process/core allocation."
      virtualMemOversubscriptionPolicy:
        type: "string"
        description: "The memory core oversubscription policy in terms of virtual\
          \ memory to physical memory on the platform. The cardinality can be 0 if\
          \ no policy has been defined during the allocation request."
      virtualMemSize:
        type: "number"
        description: "Amount of virtual Memory (e.g. in MB)."
    description: "The virtual memory of the virtualised compute."
    example:
      numaEnabled: true
      virtualMemSize: 5.962133916683182377482808078639209270477294921875
      virtualMemOversubscriptionPolicy: "virtualMemOversubscriptionPolicy"
  CreateComputeResourceReservationRequest_containerFlavour_virtualNetworkInterface:
    required:
    - "accelerationCapability"
    - "bandwidth"
    - "ipAddress"
    - "macAddress"
    - "metadata"
    - "networkId"
    - "networkPortId"
    - "operationalState"
    - "ownerId"
    - "resourceId"
    - "typeConfiguration"
    - "typeVirtualNic"
    properties:
      accelerationCapability:
        type: "string"
        description: "Shows the acceleration capabilities utilized by the virtual\
          \ network interface. The cardinality can be 0, if no acceleration capability\
          \ is utilized."
      bandwidth:
        type: "string"
        description: "The bandwidth of the virtual network interface (in Mbps)."
      ipAddress:
        type: "string"
        description: "The virtual network interface can be configured with specific\
          \ IP address(es) associated to the network to be attached to. The cardinality\
          \ can be 0 in the case that a network interface is created without being\
          \ attached to any specific network, or when an IP address can be automatically\
          \ configured, e.g. by DHCP."
      macAddress:
        type: "string"
        description: "The MAC address of the virtual network interface."
      metadata:
        type: "string"
        description: "List of metadata key-value pairs used by the consumer to associate\
          \ meaningful metadata to the related virtualised resource."
      networkId:
        type: "string"
        description: "In the case when the virtual network interface is attached to\
          \ the network, it identifies such a network. The cardinality can be 0 in\
          \ the case that a network interface is created without being attached to\
          \ any specific network."
      networkPortId:
        type: "string"
        description: "If the virtual network interface is attached to a specific network\
          \ port, it identifies such a network port. The cardinality can be 0 in the\
          \ case that a network interface is created without any specific network\
          \ port attachment."
      operationalState:
        type: "string"
        description: "The operational state of the virtual network interface."
      ownerId:
        type: "string"
        description: "Identifier of the owner of the network interface (e.g. a virtualised\
          \ compute resource). "
      resourceId:
        type: "string"
        description: "Identifier of the virtual network interface."
      typeConfiguration:
        type: "string"
        description: "Extra configuration that the virtual network interface supports\
          \ based on the type of virtual network interface, including support for\
          \ SR-IOV with configuration of virtual functions (VF)."
      typeVirtualNic:
        type: "string"
        description: "Type of network interface. The type allows for defining how\
          \ such interface is to be realized, e.g. normal virtual NIC, with direct\
          \ PCI passthrough, etc."
    description: "The virtual network interfaces of the virtualised compute."
    example:
      typeConfiguration: "typeConfiguration"
      typeVirtualNic: "typeVirtualNic"
      macAddress: "macAddress"
      metadata: "metadata"
      resourceId: "resourceId"
      networkPortId: "networkPortId"
      accelerationCapability: "accelerationCapability"
      bandwidth: "bandwidth"
      ipAddress: "ipAddress"
      networkId: "networkId"
      operationalState: "operationalState"
      ownerId: "ownerId"
  CreateComputeResourceReservationRequest_containerFlavour:
    required:
    - "accelerationCapability"
    - "flavourId"
    - "storageAttributes"
    - "virtualCpu"
    - "virtualMemory"
    - "virtualNetworkInterface"
    properties:
      accelerationCapability:
        type: "string"
        description: "Selected acceleration capabilities (e.g. crypto, GPU) from the\
          \ set of capabilities offered by the compute node acceleration resources.\
          \ The cardinality can be 0, if no particular acceleration capability is\
          \ requested."
      flavourId:
        type: "string"
        description: "Identifier given to the compute flavour."
      storageAttributes:
        type: "array"
        description: "Element containing information about the size of virtualised\
          \ storage resources (e.g. size of volume, in GB), the type of storage (e.g.\
          \ volume, object)."
        items:
          $ref: "#/definitions/CreateComputeResourceReservationRequest_containerFlavour_storageAttributes"
      virtualCpu:
        type: "array"
        description: "The virtual CPU(s) of the virtualised compute."
        items:
          $ref: "#/definitions/CreateComputeResourceReservationRequest_containerFlavour_virtualCpu"
      virtualMemory:
        $ref: "#/definitions/CreateComputeResourceReservationRequest_containerFlavour_virtualMemory"
      virtualNetworkInterface:
        $ref: "#/definitions/CreateComputeResourceReservationRequest_containerFlavour_virtualNetworkInterface"
    description: "The containerFlavour encapsulates information of the virtualisation\
      \ container to be reserved."
    example:
      flavourId: "flavourId"
      accelerationCapability: "accelerationCapability"
      storageAttributes:
      - flavourId: "flavourId"
        typeOfStorage: "typeOfStorage"
        hostId: "hostId"
        zoneId: "zoneId"
        operationalState: "operationalState"
        ownerId: "ownerId"
        sizeOfStorage: 0.80082819046101150206595775671303272247314453125
        storageId: "storageId"
        storageName: "storageName"
      - flavourId: "flavourId"
        typeOfStorage: "typeOfStorage"
        hostId: "hostId"
        zoneId: "zoneId"
        operationalState: "operationalState"
        ownerId: "ownerId"
        sizeOfStorage: 0.80082819046101150206595775671303272247314453125
        storageId: "storageId"
        storageName: "storageName"
      virtualCpu:
      - numVirtualCpu: 1
        virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
        cpuArchitecture: "cpuArchitecture"
        virtualCpuPinning:
          cpuMap: "cpuMap"
          cpuPinningRules: "cpuPinningRules"
          cpuPinningPolicy: "cpuPinningPolicy"
        cpuClock: 6.02745618307040320615897144307382404804229736328125
      - numVirtualCpu: 1
        virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
        cpuArchitecture: "cpuArchitecture"
        virtualCpuPinning:
          cpuMap: "cpuMap"
          cpuPinningRules: "cpuPinningRules"
          cpuPinningPolicy: "cpuPinningPolicy"
        cpuClock: 6.02745618307040320615897144307382404804229736328125
      virtualMemory:
        numaEnabled: true
        virtualMemSize: 5.962133916683182377482808078639209270477294921875
        virtualMemOversubscriptionPolicy: "virtualMemOversubscriptionPolicy"
      virtualNetworkInterface:
        typeConfiguration: "typeConfiguration"
        typeVirtualNic: "typeVirtualNic"
        macAddress: "macAddress"
        metadata: "metadata"
        resourceId: "resourceId"
        networkPortId: "networkPortId"
        accelerationCapability: "accelerationCapability"
        bandwidth: "bandwidth"
        ipAddress: "ipAddress"
        networkId: "networkId"
        operationalState: "operationalState"
        ownerId: "ownerId"
  CreateComputeResourceReservationRequest_virtualisationContainerReservation:
    required:
    - "containerFlavour"
    - "containerId"
    properties:
      containerFlavour:
        $ref: "#/definitions/CreateComputeResourceReservationRequest_containerFlavour"
      containerId:
        type: "string"
        description: "The identifier of the virtualisation container to be reserved."
    example:
      containerFlavour:
        flavourId: "flavourId"
        accelerationCapability: "accelerationCapability"
        storageAttributes:
        - flavourId: "flavourId"
          typeOfStorage: "typeOfStorage"
          hostId: "hostId"
          zoneId: "zoneId"
          operationalState: "operationalState"
          ownerId: "ownerId"
          sizeOfStorage: 0.80082819046101150206595775671303272247314453125
          storageId: "storageId"
          storageName: "storageName"
        - flavourId: "flavourId"
          typeOfStorage: "typeOfStorage"
          hostId: "hostId"
          zoneId: "zoneId"
          operationalState: "operationalState"
          ownerId: "ownerId"
          sizeOfStorage: 0.80082819046101150206595775671303272247314453125
          storageId: "storageId"
          storageName: "storageName"
        virtualCpu:
        - numVirtualCpu: 1
          virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
          cpuArchitecture: "cpuArchitecture"
          virtualCpuPinning:
            cpuMap: "cpuMap"
            cpuPinningRules: "cpuPinningRules"
            cpuPinningPolicy: "cpuPinningPolicy"
          cpuClock: 6.02745618307040320615897144307382404804229736328125
        - numVirtualCpu: 1
          virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
          cpuArchitecture: "cpuArchitecture"
          virtualCpuPinning:
            cpuMap: "cpuMap"
            cpuPinningRules: "cpuPinningRules"
            cpuPinningPolicy: "cpuPinningPolicy"
          cpuClock: 6.02745618307040320615897144307382404804229736328125
        virtualMemory:
          numaEnabled: true
          virtualMemSize: 5.962133916683182377482808078639209270477294921875
          virtualMemOversubscriptionPolicy: "virtualMemOversubscriptionPolicy"
        virtualNetworkInterface:
          typeConfiguration: "typeConfiguration"
          typeVirtualNic: "typeVirtualNic"
          macAddress: "macAddress"
          metadata: "metadata"
          resourceId: "resourceId"
          networkPortId: "networkPortId"
          accelerationCapability: "accelerationCapability"
          bandwidth: "bandwidth"
          ipAddress: "ipAddress"
          networkId: "networkId"
          operationalState: "operationalState"
          ownerId: "ownerId"
      containerId: "containerId"
  CreateNetworkResourceQuotaRequest_virtualComputeQuota:
    required:
    - "numPorts"
    - "numPublicIps"
    - "numSubnets"
    properties:
      numPorts:
        type: "integer"
        format: "int32"
        description: "Number of ports to be restricted by the quota. The cardinality\
          \ can be 0 if no specific number of ports is to be restricted by the quota\
          \ or the quota for ports is not to be update."
      numPublicIps:
        type: "integer"
        format: "int32"
        description: "Number of public IP addresses to be restricted by the quota.\
          \ The cardinality can be 0 if no specific number of public IP addresses\
          \ is to be restricted by the quota or the quota for public IP addresses\
          \ is not to be update."
      numSubnets:
        type: "integer"
        format: "int32"
        description: "Number of subnets to be restricted by the quota. The cardinality\
          \ can be 0 if no specific number of subnets is to be restricted by the quota\
          \ or the quota for subnets is not to be update."
    description: "Type and configuration of virtualised network resources that need\
      \ to be restricted by the quota, e.g. {\"numPublicIps\": 20}."
    example:
      numPublicIps: 6
      numPorts: 0
      numSubnets: 1
  CreateNetworkResourceReservationRequest_networkReservation_networkAttributes:
    required:
    - "bandwidth"
    - "isShared"
    - "networkType"
    - "segmentType"
    properties:
      bandwidth:
        type: "number"
        description: "Minimum network bitrate (in Mbps)."
      isShared:
        type: "boolean"
        description: "It defines whether the virtualised network to be reserved is\
          \ shared among consumers."
      metadata:
        type: "array"
        description: "List of metadata key-value pairs used by the consumer to associate\
          \ meaningful metadata to the related virtualised resource."
        items:
          $ref: "#/definitions/metaData_inner"
      networkType:
        type: "string"
        description: "The type of network that maps to the virtualised network to\
          \ be reserved. Examples are: \"local\", \"vlan\", \"vxlan\", \"gre\", etc."
      segmentType:
        type: "string"
        description: "The isolated segment for the virtualised network to be reserved.\
          \ For instance, for a \"vlan\" networkType, it corresponds to the vlan identifier;\
          \ and for a \"gre\" networkType, this corresponds to a gre key."
    description: "Information specifying additional attributes of the network resource\
      \ to be reserved."
    example:
      metadata:
      - value: "value"
        key: "key"
      - value: "value"
        key: "key"
      bandwidth: 0.80082819046101150206595775671303272247314453125
      networkType: "networkType"
      isShared: true
      segmentType: "segmentType"
  CreateNetworkResourceReservationRequest_networkReservation_networkPorts:
    required:
    - "bandwidth"
    - "portId"
    - "portType"
    - "segmentId"
    properties:
      bandwidth:
        type: "number"
        description: "The bitrate of the virtual network port (in Mbps)."
      metadata:
        type: "array"
        description: "List of metadata key-value pairs used by the consumer to associate\
          \ meaningful metadata to the related virtualised resource."
        items:
          $ref: "#/definitions/metaData_inner"
      portId:
        type: "integer"
        format: "int32"
        description: "Identifier of the network port to reserve."
      portType:
        type: "string"
        description: "Type of network port. Examples of types are access ports, or\
          \ trunk ports (layer 1) that become transport for multiple layer 2 or layer\
          \ 3 networks."
      segmentId:
        type: "string"
        description: "The isolated segment the network port belongs to. For instance,\
          \ for a \"vlan\", it corresponds to the vlan identifier; and for a \"gre\"\
          , this corresponds to a gre key. The cardinality can be 0 to allow for flat\
          \ networks without any specific segmentation."
    example:
      portType: "portType"
      metadata:
      - value: "value"
        key: "key"
      - value: "value"
        key: "key"
      bandwidth: 6.02745618307040320615897144307382404804229736328125
      segmentId: "segmentId"
      portId: 1
  CreateNetworkResourceReservationRequest_networkReservation:
    required:
    - "networkAttributes"
    - "networkPorts"
    - "numPublicIps"
    properties:
      networkAttributes:
        $ref: "#/definitions/CreateNetworkResourceReservationRequest_networkReservation_networkAttributes"
      networkPorts:
        type: "array"
        description: "List of specific network ports to be reserved."
        items:
          $ref: "#/definitions/CreateNetworkResourceReservationRequest_networkReservation_networkPorts"
      numPublicIps:
        type: "integer"
        format: "int32"
        description: "Number of public IP addresses to be reserved."
    description: "Type and configuration of virtualised network resources that need\
      \ to be reserved, e.g. {\"PublicIps\": 20}"
    example:
      numPublicIps: 5
      networkAttributes:
        metadata:
        - value: "value"
          key: "key"
        - value: "value"
          key: "key"
        bandwidth: 0.80082819046101150206595775671303272247314453125
        networkType: "networkType"
        isShared: true
        segmentType: "segmentType"
      networkPorts:
      - portType: "portType"
        metadata:
        - value: "value"
          key: "key"
        - value: "value"
          key: "key"
        bandwidth: 6.02745618307040320615897144307382404804229736328125
        segmentId: "segmentId"
        portId: 1
      - portType: "portType"
        metadata:
        - value: "value"
          key: "key"
        - value: "value"
          key: "key"
        bandwidth: 6.02745618307040320615897144307382404804229736328125
        segmentId: "segmentId"
        portId: 1
  QueryComputeCapacityRequest_timePeriod:
    required:
    - "startTime"
    - "stopTime"
    properties:
      startTime:
        type: "string"
        format: "date-time"
        description: "Indication when the capacity query period starts."
      stopTime:
        type: "string"
        format: "date-time"
        description: "Indication when the capacity query period stops."
    description: "The time interval for which capacity is queried. When omitted, an\
      \ interval starting \"now\" is used. The time interval can be specified since\
      \ resource reservations can be made for a specified time interval."
    example:
      startTime: "2000-01-23T04:56:07.000+00:00"
      stopTime: "2000-01-23T04:56:07.000+00:00"
  ReservedVirtualCompute_computePoolReserved_computeAttributes:
    required:
    - "accelerationCapability"
    - "cpuArchitecture"
    - "virtualCpuOversubscriptionPolicy"
    properties:
      accelerationCapability:
        type: "string"
        description: "Selected acceleration capabilities (e.g. crypto, GPU) from the\
          \ set of capabilities offered by the compute node acceleration resources.\
          \ The cardinality can be 0, if no particular acceleration capability is\
          \ provided."
      cpuArchitecture:
        type: "string"
        description: "CPU architecture type. Examples are \"x86\", \"ARM\". The cardinality\
          \ can be 0, if no particular CPU architecture type is provided."
      virtualCpuOversubscriptionPolicy:
        type: "string"
        description: "The CPU core oversubscription policy in terms of virtual CPU\
          \ cores to physical CPU cores/threads on the platform. The cardinality can\
          \ be 0, if no particular value is provided."
    description: "Information specifying additional attributes of the virtual compute\
      \ resource that have been reserved."
    example:
      virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
      accelerationCapability: "accelerationCapability"
      cpuArchitecture: "cpuArchitecture"
  ReservedVirtualCompute_computePoolReserved:
    required:
    - "computeAttributes"
    - "numCpuCores"
    - "numVcInstances"
    - "virtualMemSize"
    - "zoneId"
    properties:
      computeAttributes:
        $ref: "#/definitions/ReservedVirtualCompute_computePoolReserved_computeAttributes"
      numCpuCores:
        type: "integer"
        format: "int32"
        description: "Number of CPU cores that have been reserved."
      numVcInstances:
        type: "integer"
        format: "int32"
        description: "Number of virtual container instances that have been reserved."
      virtualMemSize:
        type: "number"
        description: "Size of virtual memory that has been reserved."
      zoneId:
        type: "string"
        description: "References the resource zone where the virtual compute resources\
          \ have been reserved. Cardinality can be 0 to cover the case where reserved\
          \ compute resources are not bound to a specific resource zone."
    description: "Information about compute resources that have been reserved, e.g.\
      \ {\"cpu_cores\": 90, \"vm_instances\": 10, \"ram\": 10000}"
    example:
      computeAttributes:
        virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
        accelerationCapability: "accelerationCapability"
        cpuArchitecture: "cpuArchitecture"
      numVcInstances: 6
      virtualMemSize: 1.46581298050294517310021547018550336360931396484375
      zoneId: "zoneId"
      numCpuCores: 0
  ReservedVirtualCompute_virtualisationContainerReserved_flavourId:
    required:
    - "computeAttributes"
    - "numCpuCores"
    - "numVcInstances"
    - "virtualMemSize"
    - "zoneId"
    properties:
      computeAttributes:
        $ref: "#/definitions/ReservedVirtualCompute_computePoolReserved_computeAttributes"
      numCpuCores:
        type: "integer"
        format: "int32"
        description: "Number of CPU cores that have been reserved."
      numVcInstances:
        type: "integer"
        format: "int32"
        description: "Number of virtual container instances that have been reserved."
      virtualMemSize:
        type: "number"
        description: "Size of virtual memory that has been reserved."
      zoneId:
        type: "string"
        description: "References the resource zone where the virtual compute resources\
          \ have been reserved. Cardinality can be 0 to cover the case where reserved\
          \ compute resources are not bound to a specific resource zone."
    example:
      computeAttributes:
        virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
        accelerationCapability: "accelerationCapability"
        cpuArchitecture: "cpuArchitecture"
      numVcInstances: 5
      virtualMemSize: 2.3021358869347654518833223846741020679473876953125
      zoneId: "zoneId"
      numCpuCores: 5
  ReservedVirtualCompute_virtualisationContainerReserved_virtualCpu:
    required:
    - "cpuArchitecture"
    - "cpuClock"
    - "numVirtualCpu"
    - "virtualCpuOversubscriptionPolicy"
    - "virtualCpuPinning"
    properties:
      cpuArchitecture:
        type: "string"
        description: "CPU architecture type. Examples are x86, ARM."
      cpuClock:
        type: "number"
        description: "Minimum CPU clock rate (e.g. in MHz) available for the virtualised\
          \ CPU resources."
      numVirtualCpu:
        type: "integer"
        format: "int32"
        description: "Number of virtual CPUs."
      virtualCpuOversubscriptionPolicy:
        type: "string"
        description: "The CPU core oversubscription policy, e.g. the relation of virtual\
          \ CPU cores to physical CPU cores/threads. The cardinality can be 0 if no\
          \ policy has been defined during the allocation request."
      virtualCpuPinning:
        $ref: "#/definitions/CreateComputeResourceReservationRequest_containerFlavour_virtualCpuPinning"
    description: "The virtual CPU(s) of the reserved virtualisation container."
    example:
      numVirtualCpu: 9
      virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
      cpuArchitecture: "cpuArchitecture"
      virtualCpuPinning:
        cpuMap: "cpuMap"
        cpuPinningRules: "cpuPinningRules"
        cpuPinningPolicy: "cpuPinningPolicy"
      cpuClock: 7.061401241503109105224211816675961017608642578125
  ReservedVirtualCompute_virtualisationContainerReserved_virtualMemory:
    required:
    - "numaEnabled"
    - "virtualMemOversubscriptionPolicy"
    - "virtualMemSize"
    properties:
      numaEnabled:
        type: "boolean"
        description: "It specifies the memory allocation to be cognisant of the relevant\
          \ process/core allocation."
      virtualMemOversubscriptionPolicy:
        type: "string"
        description: "The memory core oversubscription policy in terms of virtual\
          \ memory to physical memory on the platform. The cardinality can be 0 if\
          \ no policy has been defined during the allocation request."
      virtualMemSize:
        type: "number"
        description: "Amount of virtual Memory (e.g. in MB)."
    description: "The virtual memory of the reserved virtualisation container."
    example:
      numaEnabled: true
      virtualMemSize: 3.61607674925191080461672754609026014804840087890625
      virtualMemOversubscriptionPolicy: "virtualMemOversubscriptionPolicy"
  ReservedVirtualCompute_virtualisationContainerReserved_virtualNetworkInterface:
    required:
    - "accelerationCapability"
    - "bandwidth"
    - "ipAddress"
    - "macAddress"
    - "metadata"
    - "networkId"
    - "networkPortId"
    - "operationalState"
    - "ownerId"
    - "resourceId"
    - "typeConfiguration"
    - "typeVirtualNic"
    properties:
      accelerationCapability:
        type: "string"
        description: "Shows the acceleration capabilities utilized by the virtual\
          \ network interface. The cardinality can be 0, if no acceleration capability\
          \ is utilized."
      bandwidth:
        type: "string"
        description: "The bandwidth of the virtual network interface (in Mbps)."
      ipAddress:
        type: "string"
        description: "The virtual network interface can be configured with specific\
          \ IP address(es) associated to the network to be attached to. The cardinality\
          \ can be 0 in the case that a network interface is created without being\
          \ attached to any specific network, or when an IP address can be automatically\
          \ configured, e.g. by DHCP."
      macAddress:
        type: "string"
        description: "The MAC address of the virtual network interface."
      metadata:
        type: "string"
        description: "List of metadata key-value pairs used by the consumer to associate\
          \ meaningful metadata to the related virtualised resource."
      networkId:
        type: "string"
        description: "In the case when the virtual network interface is attached to\
          \ the network, it identifies such a network. The cardinality can be 0 in\
          \ the case that a network interface is created without being attached to\
          \ any specific network."
      networkPortId:
        type: "string"
        description: "If the virtual network interface is attached to a specific network\
          \ port, it identifies such a network port. The cardinality can be 0 in the\
          \ case that a network interface is created without any specific network\
          \ port attachment."
      operationalState:
        type: "string"
        description: "The operational state of the virtual network interface."
      ownerId:
        type: "string"
        description: "Identifier of the owner of the network interface (e.g. a virtualised\
          \ compute resource). "
      resourceId:
        type: "string"
        description: "Identifier of the virtual network interface."
      typeConfiguration:
        type: "string"
        description: "Extra configuration that the virtual network interface supports\
          \ based on the type of virtual network interface, including support for\
          \ SR-IOV with configuration of virtual functions (VF)."
      typeVirtualNic:
        type: "string"
        description: "Type of network interface. The type allows for defining how\
          \ such interface is to be realized, e.g. normal virtual NIC, with direct\
          \ PCI passthrough, etc."
    example:
      typeConfiguration: "typeConfiguration"
      typeVirtualNic: "typeVirtualNic"
      macAddress: "macAddress"
      metadata: "metadata"
      resourceId: "resourceId"
      networkPortId: "networkPortId"
      accelerationCapability: "accelerationCapability"
      bandwidth: "bandwidth"
      ipAddress: "ipAddress"
      networkId: "networkId"
      operationalState: "operationalState"
      ownerId: "ownerId"
  ReservedVirtualCompute_virtualisationContainerReserved:
    required:
    - "accelerationCapability"
    - "containerId"
    - "flavourId"
    - "virtualCpu"
    - "virtualDisks"
    - "virtualMemory"
    - "virtualNetworkInterface"
    - "zoneId"
    properties:
      accelerationCapability:
        type: "string"
        description: "Selected acceleration capabilities (e.g. crypto, GPU) from the\
          \ set of capabilities offered by the compute node acceleration resources.\
          \ The cardinality can be 0, if no particular acceleration capability is\
          \ provided."
      containerId:
        type: "string"
        description: "The identifier of the virtualisation container that has been\
          \ reserved."
      flavourId:
        type: "array"
        description: "Identifier of the given compute flavour used to reserve the\
          \ virtualisation container."
        items:
          $ref: "#/definitions/ReservedVirtualCompute_virtualisationContainerReserved_flavourId"
      virtualCpu:
        $ref: "#/definitions/ReservedVirtualCompute_virtualisationContainerReserved_virtualCpu"
      virtualDisks:
        type: "array"
        description: "Element with information of the virtualised storage resources\
          \ attached to the reserved virtualisation container."
        items:
          $ref: "#/definitions/CreateComputeResourceReservationRequest_containerFlavour_storageAttributes"
      virtualMemory:
        $ref: "#/definitions/ReservedVirtualCompute_virtualisationContainerReserved_virtualMemory"
      virtualNetworkInterface:
        type: "array"
        description: "Element with information of the virtual network interfaces of\
          \ the reserved virtualisation container."
        items:
          $ref: "#/definitions/ReservedVirtualCompute_virtualisationContainerReserved_virtualNetworkInterface"
      zoneId:
        type: "string"
        description: "References the resource zone where the virtualisation container\
          \ has been reserved. Cardinality can be 0 to cover the case where reserved\
          \ network resources are not bound to a specific resource zone."
    description: "Information about the virtualisation container(s) that have been\
      \ reserved."
    example:
      flavourId:
      - computeAttributes:
          virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
          accelerationCapability: "accelerationCapability"
          cpuArchitecture: "cpuArchitecture"
        numVcInstances: 5
        virtualMemSize: 2.3021358869347654518833223846741020679473876953125
        zoneId: "zoneId"
        numCpuCores: 5
      - computeAttributes:
          virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
          accelerationCapability: "accelerationCapability"
          cpuArchitecture: "cpuArchitecture"
        numVcInstances: 5
        virtualMemSize: 2.3021358869347654518833223846741020679473876953125
        zoneId: "zoneId"
        numCpuCores: 5
      accelerationCapability: "accelerationCapability"
      virtualCpu:
        numVirtualCpu: 9
        virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
        cpuArchitecture: "cpuArchitecture"
        virtualCpuPinning:
          cpuMap: "cpuMap"
          cpuPinningRules: "cpuPinningRules"
          cpuPinningPolicy: "cpuPinningPolicy"
        cpuClock: 7.061401241503109105224211816675961017608642578125
      zoneId: "zoneId"
      containerId: "containerId"
      virtualDisks:
      - flavourId: "flavourId"
        typeOfStorage: "typeOfStorage"
        hostId: "hostId"
        zoneId: "zoneId"
        operationalState: "operationalState"
        ownerId: "ownerId"
        sizeOfStorage: 0.80082819046101150206595775671303272247314453125
        storageId: "storageId"
        storageName: "storageName"
      - flavourId: "flavourId"
        typeOfStorage: "typeOfStorage"
        hostId: "hostId"
        zoneId: "zoneId"
        operationalState: "operationalState"
        ownerId: "ownerId"
        sizeOfStorage: 0.80082819046101150206595775671303272247314453125
        storageId: "storageId"
        storageName: "storageName"
      virtualMemory:
        numaEnabled: true
        virtualMemSize: 3.61607674925191080461672754609026014804840087890625
        virtualMemOversubscriptionPolicy: "virtualMemOversubscriptionPolicy"
      virtualNetworkInterface:
      - typeConfiguration: "typeConfiguration"
        typeVirtualNic: "typeVirtualNic"
        macAddress: "macAddress"
        metadata: "metadata"
        resourceId: "resourceId"
        networkPortId: "networkPortId"
        accelerationCapability: "accelerationCapability"
        bandwidth: "bandwidth"
        ipAddress: "ipAddress"
        networkId: "networkId"
        operationalState: "operationalState"
        ownerId: "ownerId"
      - typeConfiguration: "typeConfiguration"
        typeVirtualNic: "typeVirtualNic"
        macAddress: "macAddress"
        metadata: "metadata"
        resourceId: "resourceId"
        networkPortId: "networkPortId"
        accelerationCapability: "accelerationCapability"
        bandwidth: "bandwidth"
        ipAddress: "ipAddress"
        networkId: "networkId"
        operationalState: "operationalState"
        ownerId: "ownerId"
  ReservedVirtualNetwork_networkAttributes:
    required:
    - "bandwidth"
    - "isShared"
    - "networkType"
    - "segmentType"
    properties:
      bandwidth:
        type: "number"
        description: "Minimum network bitrate (in Mbps)."
      isShared:
        type: "boolean"
        description: "It defines whether the virtualised network that has been reserved\
          \ is shared among consumers."
      metadata:
        type: "array"
        description: "List of metadata key-value pairs used by the consumer to associate\
          \ meaningful metadata to the related virtualised resource."
        items:
          $ref: "#/definitions/metaData_inner"
      networkType:
        type: "string"
        description: "The type of network that maps to the virtualised network that\
          \ has been reserved. Examples are: \"local\", \"vlan\", \"vxlan\", \"gre\"\
          , etc."
      segmentType:
        type: "string"
        description: "The isolated segment for the virtualised network that has been\
          \ reserved. For instance, for a \"vlan\" networkType, it corresponds to\
          \ the vlan identifier; and for a \"gre\" networkType, this corresponds to\
          \ a gre key."
    description: "Information specifying additional attributes of the network resource\
      \ that has been reserved."
    example:
      metadata:
      - value: "value"
        key: "key"
      - value: "value"
        key: "key"
      bandwidth: 0.80082819046101150206595775671303272247314453125
      networkType: "networkType"
      isShared: true
      segmentType: "segmentType"
  ReservedVirtualNetwork_networkPorts:
    required:
    - "bandwidth"
    - "portId"
    - "portType"
    - "segmentId"
    properties:
      bandwidth:
        type: "number"
        description: "The bitrate of the virtual network port (in Mbps)"
      metadata:
        type: "array"
        description: "List of metadata key-value pairs used by the consumer to associate\
          \ meaningful metadata to the related virtualised resource."
        items:
          $ref: "#/definitions/metaData_inner"
      portId:
        type: "string"
        description: "Identifier of the network port that has been reserved."
      portType:
        type: "string"
        description: "Type of network port. Examples of types are access ports, or\
          \ trunk ports (layer 1) that become transport for multiple layer 2 or layer\
          \ 3 networks."
      segmentId:
        type: "string"
        description: "The isolated segment the network port belongs to. For instance,\
          \ for a \"vlan\", it corresponds to the vlan identifier; and for a \"gre\"\
          , this corresponds to a gre key. The cardinality can be 0 to allow for flat\
          \ networks without any specific segmentation."
    example:
      portType: "portType"
      metadata:
      - value: "value"
        key: "key"
      - value: "value"
        key: "key"
      bandwidth: 6.02745618307040320615897144307382404804229736328125
      segmentId: "segmentId"
      portId: "portId"
  VirtualCompute_virtualCpu:
    required:
    - "cpuArchitecture"
    - "cpuClock"
    - "numVirtualCpu"
    - "virtualCpuOversubscriptionPolicy"
    - "virtualCpuPinning"
    properties:
      cpuArchitecture:
        type: "string"
        description: "CPU architecture type. Examples are x86, ARM."
      cpuClock:
        type: "number"
        description: "Minimum CPU clock rate (e.g. in MHz) available for the virtualised\
          \ CPU resources."
      numVirtualCpu:
        type: "integer"
        format: "int32"
        description: "Number of virtual CPUs."
      virtualCpuOversubscriptionPolicy:
        type: "string"
        description: "The CPU core oversubscription policy, e.g. the relation of virtual\
          \ CPU cores to physical CPU cores/threads. The cardinality can be 0 if no\
          \ policy has been defined during the allocation request."
      virtualCpuPinning:
        $ref: "#/definitions/CreateComputeResourceReservationRequest_containerFlavour_virtualCpuPinning"
    description: "The virtual CPU(s) of the virtualised compute."
    example:
      numVirtualCpu: 6
      virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
      cpuArchitecture: "cpuArchitecture"
      virtualCpuPinning:
        cpuMap: "cpuMap"
        cpuPinningRules: "cpuPinningRules"
        cpuPinningPolicy: "cpuPinningPolicy"
      cpuClock: 0.80082819046101150206595775671303272247314453125
  VirtualCompute_virtualMemory:
    required:
    - "numaEnabled"
    - "virtualMemOversubscriptionPolicy"
    - "virtualMemSize"
    properties:
      numaEnabled:
        type: "boolean"
        description: "It specifies the memory allocation to be cognisant of the relevant\
          \ process/core allocation."
      virtualMemOversubscriptionPolicy:
        type: "string"
        description: "The memory core oversubscription policy in terms of virtual\
          \ memory to physical memory on the platform. The cardinality can be 0 if\
          \ no policy has been defined during the allocation request."
      virtualMemSize:
        type: "number"
        description: "Amount of virtual Memory (e.g. in MB)."
    description: "The virtual memory of the compute."
    example:
      numaEnabled: true
      virtualMemSize: 1.46581298050294517310021547018550336360931396484375
      virtualMemOversubscriptionPolicy: "virtualMemOversubscriptionPolicy"
  VirtualComputeResourceInformation_virtualCPU:
    required:
    - "cpuArchitecture"
    - "cpuClock"
    - "numVirtualCpu"
    - "virtualCpuOversubscriptionPolicy"
    - "virtualCpuPinningSupported"
    properties:
      cpuArchitecture:
        type: "string"
        description: "CPU architecture type. Examples are x86, ARM."
      cpuClock:
        type: "number"
        description: "Minimum CPU clock rate (e.g. in MHz) available for the virtualised\
          \ CPU resources."
      numVirtualCpu:
        type: "number"
        description: "Number of virtual CPUs. Cardinality \"1\" covers the case where\
          \ a specific configuration for the consumable resource is advertised."
      virtualCpuOversubscriptionPolicy:
        type: "string"
        description: "The CPU core oversubscription policy, e.g. the relation of virtual\
          \ CPU cores to physical CPU cores/threads. The cardinality can be 0 if no\
          \ concrete policy is defined."
      virtualCpuPinningSupported:
        type: "boolean"
        description: "It defines whether CPU pinning capability is available on the\
          \ consumable virtualised compute resource."
    description: "It defines the virtual CPU(s) characteristics of the consumable\
      \ virtualised compute resource."
    example:
      numVirtualCpu: 6.02745618307040320615897144307382404804229736328125
      virtualCpuOversubscriptionPolicy: "virtualCpuOversubscriptionPolicy"
      cpuArchitecture: "cpuArchitecture"
      cpuClock: 0.80082819046101150206595775671303272247314453125
      virtualCpuPinningSupported: true
  VirtualComputeResourceInformation_virtualMemory:
    required:
    - "numaSupported"
    - "virtualMemOversubscriptionPolicy"
    - "virtualMemSize"
    properties:
      numaSupported:
        type: "boolean"
        description: "It specifies if the memory allocation can be cognisant of the\
          \ relevant process/core allocation."
      virtualMemOversubscriptionPolicy:
        type: "string"
        description: "The memory core oversubscription policy in terms of virtual\
          \ memory to physical memory on the platform. The cardinality can be 0 if\
          \ no concrete policy is defined."
      virtualMemSize:
        type: "number"
        description: "Amount of virtual memory (e.g. in MB). Cardinality \"1\" covers\
          \ the case where a specific configuration for the consumable resource is\
          \ advertised."
    description: "It defines the virtual memory characteristics of the consumable\
      \ virtualised compute resource."
    example:
      numaSupported: true
      virtualMemSize: 1.46581298050294517310021547018550336360931396484375
      virtualMemOversubscriptionPolicy: "virtualMemOversubscriptionPolicy"
