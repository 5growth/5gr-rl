# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mtp_plugin_kubernetes.models.base_model_ import Model
from mtp_plugin_kubernetes import util


class CreateNetworkResourceQuotaRequestVirtualComputeQuota(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, num_ports: int=None, num_public_ips: int=None, num_subnets: int=None):  # noqa: E501
        """CreateNetworkResourceQuotaRequestVirtualComputeQuota - a model defined in Swagger

        :param num_ports: The num_ports of this CreateNetworkResourceQuotaRequestVirtualComputeQuota.  # noqa: E501
        :type num_ports: int
        :param num_public_ips: The num_public_ips of this CreateNetworkResourceQuotaRequestVirtualComputeQuota.  # noqa: E501
        :type num_public_ips: int
        :param num_subnets: The num_subnets of this CreateNetworkResourceQuotaRequestVirtualComputeQuota.  # noqa: E501
        :type num_subnets: int
        """
        self.swagger_types = {
            'num_ports': int,
            'num_public_ips': int,
            'num_subnets': int
        }

        self.attribute_map = {
            'num_ports': 'numPorts',
            'num_public_ips': 'numPublicIps',
            'num_subnets': 'numSubnets'
        }

        self._num_ports = num_ports
        self._num_public_ips = num_public_ips
        self._num_subnets = num_subnets

    @classmethod
    def from_dict(cls, dikt) -> 'CreateNetworkResourceQuotaRequestVirtualComputeQuota':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreateNetworkResourceQuotaRequest_virtualComputeQuota of this CreateNetworkResourceQuotaRequestVirtualComputeQuota.  # noqa: E501
        :rtype: CreateNetworkResourceQuotaRequestVirtualComputeQuota
        """
        return util.deserialize_model(dikt, cls)

    @property
    def num_ports(self) -> int:
        """Gets the num_ports of this CreateNetworkResourceQuotaRequestVirtualComputeQuota.

        Number of ports to be restricted by the quota. The cardinality can be 0 if no specific number of ports is to be restricted by the quota or the quota for ports is not to be update.  # noqa: E501

        :return: The num_ports of this CreateNetworkResourceQuotaRequestVirtualComputeQuota.
        :rtype: int
        """
        return self._num_ports

    @num_ports.setter
    def num_ports(self, num_ports: int):
        """Sets the num_ports of this CreateNetworkResourceQuotaRequestVirtualComputeQuota.

        Number of ports to be restricted by the quota. The cardinality can be 0 if no specific number of ports is to be restricted by the quota or the quota for ports is not to be update.  # noqa: E501

        :param num_ports: The num_ports of this CreateNetworkResourceQuotaRequestVirtualComputeQuota.
        :type num_ports: int
        """
        if num_ports is None:
            raise ValueError("Invalid value for `num_ports`, must not be `None`")  # noqa: E501

        self._num_ports = num_ports

    @property
    def num_public_ips(self) -> int:
        """Gets the num_public_ips of this CreateNetworkResourceQuotaRequestVirtualComputeQuota.

        Number of public IP addresses to be restricted by the quota. The cardinality can be 0 if no specific number of public IP addresses is to be restricted by the quota or the quota for public IP addresses is not to be update.  # noqa: E501

        :return: The num_public_ips of this CreateNetworkResourceQuotaRequestVirtualComputeQuota.
        :rtype: int
        """
        return self._num_public_ips

    @num_public_ips.setter
    def num_public_ips(self, num_public_ips: int):
        """Sets the num_public_ips of this CreateNetworkResourceQuotaRequestVirtualComputeQuota.

        Number of public IP addresses to be restricted by the quota. The cardinality can be 0 if no specific number of public IP addresses is to be restricted by the quota or the quota for public IP addresses is not to be update.  # noqa: E501

        :param num_public_ips: The num_public_ips of this CreateNetworkResourceQuotaRequestVirtualComputeQuota.
        :type num_public_ips: int
        """
        if num_public_ips is None:
            raise ValueError("Invalid value for `num_public_ips`, must not be `None`")  # noqa: E501

        self._num_public_ips = num_public_ips

    @property
    def num_subnets(self) -> int:
        """Gets the num_subnets of this CreateNetworkResourceQuotaRequestVirtualComputeQuota.

        Number of subnets to be restricted by the quota. The cardinality can be 0 if no specific number of subnets is to be restricted by the quota or the quota for subnets is not to be update.  # noqa: E501

        :return: The num_subnets of this CreateNetworkResourceQuotaRequestVirtualComputeQuota.
        :rtype: int
        """
        return self._num_subnets

    @num_subnets.setter
    def num_subnets(self, num_subnets: int):
        """Sets the num_subnets of this CreateNetworkResourceQuotaRequestVirtualComputeQuota.

        Number of subnets to be restricted by the quota. The cardinality can be 0 if no specific number of subnets is to be restricted by the quota or the quota for subnets is not to be update.  # noqa: E501

        :param num_subnets: The num_subnets of this CreateNetworkResourceQuotaRequestVirtualComputeQuota.
        :type num_subnets: int
        """
        if num_subnets is None:
            raise ValueError("Invalid value for `num_subnets`, must not be `None`")  # noqa: E501

        self._num_subnets = num_subnets
