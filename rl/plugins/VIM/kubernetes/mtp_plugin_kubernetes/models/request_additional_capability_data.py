# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mtp_plugin_kubernetes.models.base_model_ import Model
from mtp_plugin_kubernetes import util


class RequestAdditionalCapabilityData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, requested_additional_capability_name: str=None, support_mandatory: bool=None, min_requested_additional_capability_version: str=None, preferred_requested_additional_capability_version: str=None, target_performance_parameters: object=None):  # noqa: E501
        """RequestAdditionalCapabilityData - a model defined in Swagger

        :param requested_additional_capability_name: The requested_additional_capability_name of this RequestAdditionalCapabilityData.  # noqa: E501
        :type requested_additional_capability_name: str
        :param support_mandatory: The support_mandatory of this RequestAdditionalCapabilityData.  # noqa: E501
        :type support_mandatory: bool
        :param min_requested_additional_capability_version: The min_requested_additional_capability_version of this RequestAdditionalCapabilityData.  # noqa: E501
        :type min_requested_additional_capability_version: str
        :param preferred_requested_additional_capability_version: The preferred_requested_additional_capability_version of this RequestAdditionalCapabilityData.  # noqa: E501
        :type preferred_requested_additional_capability_version: str
        :param target_performance_parameters: The target_performance_parameters of this RequestAdditionalCapabilityData.  # noqa: E501
        :type target_performance_parameters: object
        """
        self.swagger_types = {
            'requested_additional_capability_name': str,
            'support_mandatory': bool,
            'min_requested_additional_capability_version': str,
            'preferred_requested_additional_capability_version': str,
            'target_performance_parameters': object
        }

        self.attribute_map = {
            'requested_additional_capability_name': 'requestedAdditionalCapabilityName',
            'support_mandatory': 'supportMandatory',
            'min_requested_additional_capability_version': 'minRequestedAdditionalCapabilityVersion',
            'preferred_requested_additional_capability_version': 'preferredRequestedAdditionalCapabilityVersion',
            'target_performance_parameters': 'targetPerformanceParameters'
        }

        self._requested_additional_capability_name = requested_additional_capability_name
        self._support_mandatory = support_mandatory
        self._min_requested_additional_capability_version = min_requested_additional_capability_version
        self._preferred_requested_additional_capability_version = preferred_requested_additional_capability_version
        self._target_performance_parameters = target_performance_parameters

    @classmethod
    def from_dict(cls, dikt) -> 'RequestAdditionalCapabilityData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RequestAdditionalCapabilityData of this RequestAdditionalCapabilityData.  # noqa: E501
        :rtype: RequestAdditionalCapabilityData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def requested_additional_capability_name(self) -> str:
        """Gets the requested_additional_capability_name of this RequestAdditionalCapabilityData.

        Identifies a requested additional capability for the VDU. ETSI GS NFV-IFA 002 describes acceleration capabilities.  # noqa: E501

        :return: The requested_additional_capability_name of this RequestAdditionalCapabilityData.
        :rtype: str
        """
        return self._requested_additional_capability_name

    @requested_additional_capability_name.setter
    def requested_additional_capability_name(self, requested_additional_capability_name: str):
        """Sets the requested_additional_capability_name of this RequestAdditionalCapabilityData.

        Identifies a requested additional capability for the VDU. ETSI GS NFV-IFA 002 describes acceleration capabilities.  # noqa: E501

        :param requested_additional_capability_name: The requested_additional_capability_name of this RequestAdditionalCapabilityData.
        :type requested_additional_capability_name: str
        """
        if requested_additional_capability_name is None:
            raise ValueError("Invalid value for `requested_additional_capability_name`, must not be `None`")  # noqa: E501

        self._requested_additional_capability_name = requested_additional_capability_name

    @property
    def support_mandatory(self) -> bool:
        """Gets the support_mandatory of this RequestAdditionalCapabilityData.

        Indicates whether the requested additional capability is mandatory for successful operation.  # noqa: E501

        :return: The support_mandatory of this RequestAdditionalCapabilityData.
        :rtype: bool
        """
        return self._support_mandatory

    @support_mandatory.setter
    def support_mandatory(self, support_mandatory: bool):
        """Sets the support_mandatory of this RequestAdditionalCapabilityData.

        Indicates whether the requested additional capability is mandatory for successful operation.  # noqa: E501

        :param support_mandatory: The support_mandatory of this RequestAdditionalCapabilityData.
        :type support_mandatory: bool
        """

        self._support_mandatory = support_mandatory

    @property
    def min_requested_additional_capability_version(self) -> str:
        """Gets the min_requested_additional_capability_version of this RequestAdditionalCapabilityData.

        Identifies the minimum version of the requested additional capability.  # noqa: E501

        :return: The min_requested_additional_capability_version of this RequestAdditionalCapabilityData.
        :rtype: str
        """
        return self._min_requested_additional_capability_version

    @min_requested_additional_capability_version.setter
    def min_requested_additional_capability_version(self, min_requested_additional_capability_version: str):
        """Sets the min_requested_additional_capability_version of this RequestAdditionalCapabilityData.

        Identifies the minimum version of the requested additional capability.  # noqa: E501

        :param min_requested_additional_capability_version: The min_requested_additional_capability_version of this RequestAdditionalCapabilityData.
        :type min_requested_additional_capability_version: str
        """

        self._min_requested_additional_capability_version = min_requested_additional_capability_version

    @property
    def preferred_requested_additional_capability_version(self) -> str:
        """Gets the preferred_requested_additional_capability_version of this RequestAdditionalCapabilityData.

        Identifies the preferred version of the requested additional capability.  # noqa: E501

        :return: The preferred_requested_additional_capability_version of this RequestAdditionalCapabilityData.
        :rtype: str
        """
        return self._preferred_requested_additional_capability_version

    @preferred_requested_additional_capability_version.setter
    def preferred_requested_additional_capability_version(self, preferred_requested_additional_capability_version: str):
        """Sets the preferred_requested_additional_capability_version of this RequestAdditionalCapabilityData.

        Identifies the preferred version of the requested additional capability.  # noqa: E501

        :param preferred_requested_additional_capability_version: The preferred_requested_additional_capability_version of this RequestAdditionalCapabilityData.
        :type preferred_requested_additional_capability_version: str
        """

        self._preferred_requested_additional_capability_version = preferred_requested_additional_capability_version

    @property
    def target_performance_parameters(self) -> object:
        """Gets the target_performance_parameters of this RequestAdditionalCapabilityData.

        Identifies specific attributes, dependent on the requested additional capability type.  # noqa: E501

        :return: The target_performance_parameters of this RequestAdditionalCapabilityData.
        :rtype: object
        """
        return self._target_performance_parameters

    @target_performance_parameters.setter
    def target_performance_parameters(self, target_performance_parameters: object):
        """Sets the target_performance_parameters of this RequestAdditionalCapabilityData.

        Identifies specific attributes, dependent on the requested additional capability type.  # noqa: E501

        :param target_performance_parameters: The target_performance_parameters of this RequestAdditionalCapabilityData.
        :type target_performance_parameters: object
        """

        self._target_performance_parameters = target_performance_parameters
