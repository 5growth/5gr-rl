# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mtp_plugin_kubernetes.models.base_model_ import Model
from mtp_plugin_kubernetes import util


class CreateComputeResourceReservationRequestContainerFlavourStorageAttributes(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, flavour_id: str=None, host_id: str=None, operational_state: str=None, owner_id: str=None, size_of_storage: float=None, storage_id: str=None, storage_name: str=None, type_of_storage: str=None, zone_id: str=None):  # noqa: E501
        """CreateComputeResourceReservationRequestContainerFlavourStorageAttributes - a model defined in Swagger

        :param flavour_id: The flavour_id of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.  # noqa: E501
        :type flavour_id: str
        :param host_id: The host_id of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.  # noqa: E501
        :type host_id: str
        :param operational_state: The operational_state of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.  # noqa: E501
        :type operational_state: str
        :param owner_id: The owner_id of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.  # noqa: E501
        :type owner_id: str
        :param size_of_storage: The size_of_storage of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.  # noqa: E501
        :type size_of_storage: float
        :param storage_id: The storage_id of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.  # noqa: E501
        :type storage_id: str
        :param storage_name: The storage_name of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.  # noqa: E501
        :type storage_name: str
        :param type_of_storage: The type_of_storage of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.  # noqa: E501
        :type type_of_storage: str
        :param zone_id: The zone_id of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.  # noqa: E501
        :type zone_id: str
        """
        self.swagger_types = {
            'flavour_id': str,
            'host_id': str,
            'operational_state': str,
            'owner_id': str,
            'size_of_storage': float,
            'storage_id': str,
            'storage_name': str,
            'type_of_storage': str,
            'zone_id': str
        }

        self.attribute_map = {
            'flavour_id': 'flavourId',
            'host_id': 'hostId',
            'operational_state': 'operationalState',
            'owner_id': 'ownerId',
            'size_of_storage': 'sizeOfStorage',
            'storage_id': 'storageId',
            'storage_name': 'storageName',
            'type_of_storage': 'typeOfStorage',
            'zone_id': 'zoneId'
        }

        self._flavour_id = flavour_id
        self._host_id = host_id
        self._operational_state = operational_state
        self._owner_id = owner_id
        self._size_of_storage = size_of_storage
        self._storage_id = storage_id
        self._storage_name = storage_name
        self._type_of_storage = type_of_storage
        self._zone_id = zone_id

    @classmethod
    def from_dict(cls, dikt) -> 'CreateComputeResourceReservationRequestContainerFlavourStorageAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreateComputeResourceReservationRequest_containerFlavour_storageAttributes of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.  # noqa: E501
        :rtype: CreateComputeResourceReservationRequestContainerFlavourStorageAttributes
        """
        return util.deserialize_model(dikt, cls)

    @property
    def flavour_id(self) -> str:
        """Gets the flavour_id of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.

        Identifier of the storage flavour used to instantiate this virtual storage.  # noqa: E501

        :return: The flavour_id of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.
        :rtype: str
        """
        return self._flavour_id

    @flavour_id.setter
    def flavour_id(self, flavour_id: str):
        """Sets the flavour_id of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.

        Identifier of the storage flavour used to instantiate this virtual storage.  # noqa: E501

        :param flavour_id: The flavour_id of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.
        :type flavour_id: str
        """
        if flavour_id is None:
            raise ValueError("Invalid value for `flavour_id`, must not be `None`")  # noqa: E501

        self._flavour_id = flavour_id

    @property
    def host_id(self) -> str:
        """Gets the host_id of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.

        Identifier of the host where the virtualised storage resource is allocated. A cardinality of 0 refers to distributed storage solutions.  # noqa: E501

        :return: The host_id of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.
        :rtype: str
        """
        return self._host_id

    @host_id.setter
    def host_id(self, host_id: str):
        """Sets the host_id of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.

        Identifier of the host where the virtualised storage resource is allocated. A cardinality of 0 refers to distributed storage solutions.  # noqa: E501

        :param host_id: The host_id of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.
        :type host_id: str
        """
        if host_id is None:
            raise ValueError("Invalid value for `host_id`, must not be `None`")  # noqa: E501

        self._host_id = host_id

    @property
    def operational_state(self) -> str:
        """Gets the operational_state of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.

        Operational state of the resource.  # noqa: E501

        :return: The operational_state of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.
        :rtype: str
        """
        return self._operational_state

    @operational_state.setter
    def operational_state(self, operational_state: str):
        """Sets the operational_state of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.

        Operational state of the resource.  # noqa: E501

        :param operational_state: The operational_state of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.
        :type operational_state: str
        """
        if operational_state is None:
            raise ValueError("Invalid value for `operational_state`, must not be `None`")  # noqa: E501

        self._operational_state = operational_state

    @property
    def owner_id(self) -> str:
        """Gets the owner_id of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.

        Identifier of the virtualised resource that owns and uses such a virtualised storage resource. The value can be NULL if the virtualised storage is not attached yet to any other resource (e.g. a virtual machine).  # noqa: E501

        :return: The owner_id of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.
        :rtype: str
        """
        return self._owner_id

    @owner_id.setter
    def owner_id(self, owner_id: str):
        """Sets the owner_id of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.

        Identifier of the virtualised resource that owns and uses such a virtualised storage resource. The value can be NULL if the virtualised storage is not attached yet to any other resource (e.g. a virtual machine).  # noqa: E501

        :param owner_id: The owner_id of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.
        :type owner_id: str
        """
        if owner_id is None:
            raise ValueError("Invalid value for `owner_id`, must not be `None`")  # noqa: E501

        self._owner_id = owner_id

    @property
    def size_of_storage(self) -> float:
        """Gets the size_of_storage of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.

        Size of virtualised storage resource (e.g. size of volume, in GB).  # noqa: E501

        :return: The size_of_storage of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.
        :rtype: float
        """
        return self._size_of_storage

    @size_of_storage.setter
    def size_of_storage(self, size_of_storage: float):
        """Sets the size_of_storage of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.

        Size of virtualised storage resource (e.g. size of volume, in GB).  # noqa: E501

        :param size_of_storage: The size_of_storage of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.
        :type size_of_storage: float
        """
        if size_of_storage is None:
            raise ValueError("Invalid value for `size_of_storage`, must not be `None`")  # noqa: E501

        self._size_of_storage = size_of_storage

    @property
    def storage_id(self) -> str:
        """Gets the storage_id of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.

        Identifier of the virtualised storage resource.  # noqa: E501

        :return: The storage_id of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.
        :rtype: str
        """
        return self._storage_id

    @storage_id.setter
    def storage_id(self, storage_id: str):
        """Sets the storage_id of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.

        Identifier of the virtualised storage resource.  # noqa: E501

        :param storage_id: The storage_id of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.
        :type storage_id: str
        """
        if storage_id is None:
            raise ValueError("Invalid value for `storage_id`, must not be `None`")  # noqa: E501

        self._storage_id = storage_id

    @property
    def storage_name(self) -> str:
        """Gets the storage_name of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.

        Name of the virtualised storage resource.  # noqa: E501

        :return: The storage_name of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.
        :rtype: str
        """
        return self._storage_name

    @storage_name.setter
    def storage_name(self, storage_name: str):
        """Sets the storage_name of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.

        Name of the virtualised storage resource.  # noqa: E501

        :param storage_name: The storage_name of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.
        :type storage_name: str
        """
        if storage_name is None:
            raise ValueError("Invalid value for `storage_name`, must not be `None`")  # noqa: E501

        self._storage_name = storage_name

    @property
    def type_of_storage(self) -> str:
        """Gets the type_of_storage of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.

        Type of virtualised storage resource (e.g. volume, object).  # noqa: E501

        :return: The type_of_storage of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.
        :rtype: str
        """
        return self._type_of_storage

    @type_of_storage.setter
    def type_of_storage(self, type_of_storage: str):
        """Sets the type_of_storage of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.

        Type of virtualised storage resource (e.g. volume, object).  # noqa: E501

        :param type_of_storage: The type_of_storage of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.
        :type type_of_storage: str
        """
        if type_of_storage is None:
            raise ValueError("Invalid value for `type_of_storage`, must not be `None`")  # noqa: E501

        self._type_of_storage = type_of_storage

    @property
    def zone_id(self) -> str:
        """Gets the zone_id of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.

        If present, it identifies the Resource Zone where the virtual storage resources have been allocated.  # noqa: E501

        :return: The zone_id of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.
        :rtype: str
        """
        return self._zone_id

    @zone_id.setter
    def zone_id(self, zone_id: str):
        """Sets the zone_id of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.

        If present, it identifies the Resource Zone where the virtual storage resources have been allocated.  # noqa: E501

        :param zone_id: The zone_id of this CreateComputeResourceReservationRequestContainerFlavourStorageAttributes.
        :type zone_id: str
        """
        if zone_id is None:
            raise ValueError("Invalid value for `zone_id`, must not be `None`")  # noqa: E501

        self._zone_id = zone_id
