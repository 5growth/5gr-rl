# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mtp_plugin_kubernetes.models.base_model_ import Model
from mtp_plugin_kubernetes import util


class AllocateNetworkResultNetworkDataNetworkQoS(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, qos_name: str=None, qos_value: str=None):  # noqa: E501
        """AllocateNetworkResultNetworkDataNetworkQoS - a model defined in Swagger

        :param qos_name: The qos_name of this AllocateNetworkResultNetworkDataNetworkQoS.  # noqa: E501
        :type qos_name: str
        :param qos_value: The qos_value of this AllocateNetworkResultNetworkDataNetworkQoS.  # noqa: E501
        :type qos_value: str
        """
        self.swagger_types = {
            'qos_name': str,
            'qos_value': str
        }

        self.attribute_map = {
            'qos_name': 'qosName',
            'qos_value': 'qosValue'
        }

        self._qos_name = qos_name
        self._qos_value = qos_value

    @classmethod
    def from_dict(cls, dikt) -> 'AllocateNetworkResultNetworkDataNetworkQoS':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AllocateNetworkResult_networkData_networkQoS of this AllocateNetworkResultNetworkDataNetworkQoS.  # noqa: E501
        :rtype: AllocateNetworkResultNetworkDataNetworkQoS
        """
        return util.deserialize_model(dikt, cls)

    @property
    def qos_name(self) -> str:
        """Gets the qos_name of this AllocateNetworkResultNetworkDataNetworkQoS.

        Name given to the QoS parameter.  # noqa: E501

        :return: The qos_name of this AllocateNetworkResultNetworkDataNetworkQoS.
        :rtype: str
        """
        return self._qos_name

    @qos_name.setter
    def qos_name(self, qos_name: str):
        """Sets the qos_name of this AllocateNetworkResultNetworkDataNetworkQoS.

        Name given to the QoS parameter.  # noqa: E501

        :param qos_name: The qos_name of this AllocateNetworkResultNetworkDataNetworkQoS.
        :type qos_name: str
        """
        if qos_name is None:
            raise ValueError("Invalid value for `qos_name`, must not be `None`")  # noqa: E501

        self._qos_name = qos_name

    @property
    def qos_value(self) -> str:
        """Gets the qos_value of this AllocateNetworkResultNetworkDataNetworkQoS.

        Value of the QoS parameter.  # noqa: E501

        :return: The qos_value of this AllocateNetworkResultNetworkDataNetworkQoS.
        :rtype: str
        """
        return self._qos_value

    @qos_value.setter
    def qos_value(self, qos_value: str):
        """Sets the qos_value of this AllocateNetworkResultNetworkDataNetworkQoS.

        Value of the QoS parameter.  # noqa: E501

        :param qos_value: The qos_value of this AllocateNetworkResultNetworkDataNetworkQoS.
        :type qos_value: str
        """
        if qos_value is None:
            raise ValueError("Invalid value for `qos_value`, must not be `None`")  # noqa: E501

        self._qos_value = qos_value
