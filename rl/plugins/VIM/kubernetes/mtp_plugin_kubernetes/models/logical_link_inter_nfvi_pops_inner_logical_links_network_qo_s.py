# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mtp_plugin_kubernetes.models.base_model_ import Model
from mtp_plugin_kubernetes import util


class LogicalLinkInterNfviPopsInnerLogicalLinksNetworkQoS(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, link_cost_value: float=None, link_cost: str=None, link_delay_value: float=None, link_delay: str=None):  # noqa: E501
        """LogicalLinkInterNfviPopsInnerLogicalLinksNetworkQoS - a model defined in Swagger

        :param link_cost_value: The link_cost_value of this LogicalLinkInterNfviPopsInnerLogicalLinksNetworkQoS.  # noqa: E501
        :type link_cost_value: float
        :param link_cost: The link_cost of this LogicalLinkInterNfviPopsInnerLogicalLinksNetworkQoS.  # noqa: E501
        :type link_cost: str
        :param link_delay_value: The link_delay_value of this LogicalLinkInterNfviPopsInnerLogicalLinksNetworkQoS.  # noqa: E501
        :type link_delay_value: float
        :param link_delay: The link_delay of this LogicalLinkInterNfviPopsInnerLogicalLinksNetworkQoS.  # noqa: E501
        :type link_delay: str
        """
        self.swagger_types = {
            'link_cost_value': float,
            'link_cost': str,
            'link_delay_value': float,
            'link_delay': str
        }

        self.attribute_map = {
            'link_cost_value': 'linkCostValue',
            'link_cost': 'linkCost',
            'link_delay_value': 'linkDelayValue',
            'link_delay': 'linkDelay'
        }

        self._link_cost_value = link_cost_value
        self._link_cost = link_cost
        self._link_delay_value = link_delay_value
        self._link_delay = link_delay

    @classmethod
    def from_dict(cls, dikt) -> 'LogicalLinkInterNfviPopsInnerLogicalLinksNetworkQoS':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The logicalLinkInterNfviPops_inner_logicalLinks_networkQoS of this LogicalLinkInterNfviPopsInnerLogicalLinksNetworkQoS.  # noqa: E501
        :rtype: LogicalLinkInterNfviPopsInnerLogicalLinksNetworkQoS
        """
        return util.deserialize_model(dikt, cls)

    @property
    def link_cost_value(self) -> float:
        """Gets the link_cost_value of this LogicalLinkInterNfviPopsInnerLogicalLinksNetworkQoS.

        5GT - Value of Link Cost  # noqa: E501

        :return: The link_cost_value of this LogicalLinkInterNfviPopsInnerLogicalLinksNetworkQoS.
        :rtype: float
        """
        return self._link_cost_value

    @link_cost_value.setter
    def link_cost_value(self, link_cost_value: float):
        """Sets the link_cost_value of this LogicalLinkInterNfviPopsInnerLogicalLinksNetworkQoS.

        5GT - Value of Link Cost  # noqa: E501

        :param link_cost_value: The link_cost_value of this LogicalLinkInterNfviPopsInnerLogicalLinksNetworkQoS.
        :type link_cost_value: float
        """
        if link_cost_value is None:
            raise ValueError("Invalid value for `link_cost_value`, must not be `None`")  # noqa: E501

        self._link_cost_value = link_cost_value

    @property
    def link_cost(self) -> str:
        """Gets the link_cost of this LogicalLinkInterNfviPopsInnerLogicalLinksNetworkQoS.

        5GT - Link cost name .  # noqa: E501

        :return: The link_cost of this LogicalLinkInterNfviPopsInnerLogicalLinksNetworkQoS.
        :rtype: str
        """
        return self._link_cost

    @link_cost.setter
    def link_cost(self, link_cost: str):
        """Sets the link_cost of this LogicalLinkInterNfviPopsInnerLogicalLinksNetworkQoS.

        5GT - Link cost name .  # noqa: E501

        :param link_cost: The link_cost of this LogicalLinkInterNfviPopsInnerLogicalLinksNetworkQoS.
        :type link_cost: str
        """
        if link_cost is None:
            raise ValueError("Invalid value for `link_cost`, must not be `None`")  # noqa: E501

        self._link_cost = link_cost

    @property
    def link_delay_value(self) -> float:
        """Gets the link_delay_value of this LogicalLinkInterNfviPopsInnerLogicalLinksNetworkQoS.

        5GT - Value of Link Delay (expressed in ms)  # noqa: E501

        :return: The link_delay_value of this LogicalLinkInterNfviPopsInnerLogicalLinksNetworkQoS.
        :rtype: float
        """
        return self._link_delay_value

    @link_delay_value.setter
    def link_delay_value(self, link_delay_value: float):
        """Sets the link_delay_value of this LogicalLinkInterNfviPopsInnerLogicalLinksNetworkQoS.

        5GT - Value of Link Delay (expressed in ms)  # noqa: E501

        :param link_delay_value: The link_delay_value of this LogicalLinkInterNfviPopsInnerLogicalLinksNetworkQoS.
        :type link_delay_value: float
        """
        if link_delay_value is None:
            raise ValueError("Invalid value for `link_delay_value`, must not be `None`")  # noqa: E501

        self._link_delay_value = link_delay_value

    @property
    def link_delay(self) -> str:
        """Gets the link_delay of this LogicalLinkInterNfviPopsInnerLogicalLinksNetworkQoS.

        5GT - Link delay name.  # noqa: E501

        :return: The link_delay of this LogicalLinkInterNfviPopsInnerLogicalLinksNetworkQoS.
        :rtype: str
        """
        return self._link_delay

    @link_delay.setter
    def link_delay(self, link_delay: str):
        """Sets the link_delay of this LogicalLinkInterNfviPopsInnerLogicalLinksNetworkQoS.

        5GT - Link delay name.  # noqa: E501

        :param link_delay: The link_delay of this LogicalLinkInterNfviPopsInnerLogicalLinksNetworkQoS.
        :type link_delay: str
        """
        if link_delay is None:
            raise ValueError("Invalid value for `link_delay`, must not be `None`")  # noqa: E501

        self._link_delay = link_delay
