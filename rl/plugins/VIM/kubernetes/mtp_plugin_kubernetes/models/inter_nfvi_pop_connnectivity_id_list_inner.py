# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mtp_plugin_kubernetes.models.base_model_ import Model
from mtp_plugin_kubernetes.models.inter_nfvi_pop_connnectivity_id import InterNfviPopConnnectivityId  # noqa: F401,E501
from mtp_plugin_kubernetes import util


class InterNfviPopConnnectivityIdListInner(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, inter_nfvi_pop_connnectivity_id: InterNfviPopConnnectivityId=None):  # noqa: E501
        """InterNfviPopConnnectivityIdListInner - a model defined in Swagger

        :param inter_nfvi_pop_connnectivity_id: The inter_nfvi_pop_connnectivity_id of this InterNfviPopConnnectivityIdListInner.  # noqa: E501
        :type inter_nfvi_pop_connnectivity_id: InterNfviPopConnnectivityId
        """
        self.swagger_types = {
            'inter_nfvi_pop_connnectivity_id': InterNfviPopConnnectivityId
        }

        self.attribute_map = {
            'inter_nfvi_pop_connnectivity_id': 'interNfviPopConnnectivityId'
        }

        self._inter_nfvi_pop_connnectivity_id = inter_nfvi_pop_connnectivity_id

    @classmethod
    def from_dict(cls, dikt) -> 'InterNfviPopConnnectivityIdListInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The interNfviPopConnnectivityIdList_inner of this InterNfviPopConnnectivityIdListInner.  # noqa: E501
        :rtype: InterNfviPopConnnectivityIdListInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def inter_nfvi_pop_connnectivity_id(self) -> InterNfviPopConnnectivityId:
        """Gets the inter_nfvi_pop_connnectivity_id of this InterNfviPopConnnectivityIdListInner.


        :return: The inter_nfvi_pop_connnectivity_id of this InterNfviPopConnnectivityIdListInner.
        :rtype: InterNfviPopConnnectivityId
        """
        return self._inter_nfvi_pop_connnectivity_id

    @inter_nfvi_pop_connnectivity_id.setter
    def inter_nfvi_pop_connnectivity_id(self, inter_nfvi_pop_connnectivity_id: InterNfviPopConnnectivityId):
        """Sets the inter_nfvi_pop_connnectivity_id of this InterNfviPopConnnectivityIdListInner.


        :param inter_nfvi_pop_connnectivity_id: The inter_nfvi_pop_connnectivity_id of this InterNfviPopConnnectivityIdListInner.
        :type inter_nfvi_pop_connnectivity_id: InterNfviPopConnnectivityId
        """
        if inter_nfvi_pop_connnectivity_id is None:
            raise ValueError("Invalid value for `inter_nfvi_pop_connnectivity_id`, must not be `None`")  # noqa: E501

        self._inter_nfvi_pop_connnectivity_id = inter_nfvi_pop_connnectivity_id
