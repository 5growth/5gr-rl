# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mtp_plugin_kubernetes.models.base_model_ import Model
from mtp_plugin_kubernetes.models.create_compute_resource_reservation_request_container_flavour import CreateComputeResourceReservationRequestContainerFlavour  # noqa: F401,E501
from mtp_plugin_kubernetes import util


class CreateComputeResourceReservationRequestVirtualisationContainerReservation(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, container_flavour: CreateComputeResourceReservationRequestContainerFlavour=None, container_id: str=None):  # noqa: E501
        """CreateComputeResourceReservationRequestVirtualisationContainerReservation - a model defined in Swagger

        :param container_flavour: The container_flavour of this CreateComputeResourceReservationRequestVirtualisationContainerReservation.  # noqa: E501
        :type container_flavour: CreateComputeResourceReservationRequestContainerFlavour
        :param container_id: The container_id of this CreateComputeResourceReservationRequestVirtualisationContainerReservation.  # noqa: E501
        :type container_id: str
        """
        self.swagger_types = {
            'container_flavour': CreateComputeResourceReservationRequestContainerFlavour,
            'container_id': str
        }

        self.attribute_map = {
            'container_flavour': 'containerFlavour',
            'container_id': 'containerId'
        }

        self._container_flavour = container_flavour
        self._container_id = container_id

    @classmethod
    def from_dict(cls, dikt) -> 'CreateComputeResourceReservationRequestVirtualisationContainerReservation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreateComputeResourceReservationRequest_virtualisationContainerReservation of this CreateComputeResourceReservationRequestVirtualisationContainerReservation.  # noqa: E501
        :rtype: CreateComputeResourceReservationRequestVirtualisationContainerReservation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def container_flavour(self) -> CreateComputeResourceReservationRequestContainerFlavour:
        """Gets the container_flavour of this CreateComputeResourceReservationRequestVirtualisationContainerReservation.


        :return: The container_flavour of this CreateComputeResourceReservationRequestVirtualisationContainerReservation.
        :rtype: CreateComputeResourceReservationRequestContainerFlavour
        """
        return self._container_flavour

    @container_flavour.setter
    def container_flavour(self, container_flavour: CreateComputeResourceReservationRequestContainerFlavour):
        """Sets the container_flavour of this CreateComputeResourceReservationRequestVirtualisationContainerReservation.


        :param container_flavour: The container_flavour of this CreateComputeResourceReservationRequestVirtualisationContainerReservation.
        :type container_flavour: CreateComputeResourceReservationRequestContainerFlavour
        """
        if container_flavour is None:
            raise ValueError("Invalid value for `container_flavour`, must not be `None`")  # noqa: E501

        self._container_flavour = container_flavour

    @property
    def container_id(self) -> str:
        """Gets the container_id of this CreateComputeResourceReservationRequestVirtualisationContainerReservation.

        The identifier of the virtualisation container to be reserved.  # noqa: E501

        :return: The container_id of this CreateComputeResourceReservationRequestVirtualisationContainerReservation.
        :rtype: str
        """
        return self._container_id

    @container_id.setter
    def container_id(self, container_id: str):
        """Sets the container_id of this CreateComputeResourceReservationRequestVirtualisationContainerReservation.

        The identifier of the virtualisation container to be reserved.  # noqa: E501

        :param container_id: The container_id of this CreateComputeResourceReservationRequestVirtualisationContainerReservation.
        :type container_id: str
        """
        if container_id is None:
            raise ValueError("Invalid value for `container_id`, must not be `None`")  # noqa: E501

        self._container_id = container_id
