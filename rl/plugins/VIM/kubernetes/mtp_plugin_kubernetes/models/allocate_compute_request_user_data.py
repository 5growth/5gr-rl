# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mtp_plugin_kubernetes.models.base_model_ import Model
from mtp_plugin_kubernetes import util


class AllocateComputeRequestUserData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, content: str=None, method: str=None):  # noqa: E501
        """AllocateComputeRequestUserData - a model defined in Swagger

        :param content: The content of this AllocateComputeRequestUserData.  # noqa: E501
        :type content: str
        :param method: The method of this AllocateComputeRequestUserData.  # noqa: E501
        :type method: str
        """
        self.swagger_types = {
            'content': str,
            'method': str
        }

        self.attribute_map = {
            'content': 'content',
            'method': 'method'
        }

        self._content = content
        self._method = method

    @classmethod
    def from_dict(cls, dikt) -> 'AllocateComputeRequestUserData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AllocateComputeRequest_userData of this AllocateComputeRequestUserData.  # noqa: E501
        :rtype: AllocateComputeRequestUserData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content(self) -> str:
        """Gets the content of this AllocateComputeRequestUserData.

        String containing the user data to customize a virtualised compute resource at boot-time.  # noqa: E501

        :return: The content of this AllocateComputeRequestUserData.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content: str):
        """Sets the content of this AllocateComputeRequestUserData.

        String containing the user data to customize a virtualised compute resource at boot-time.  # noqa: E501

        :param content: The content of this AllocateComputeRequestUserData.
        :type content: str
        """
        if content is None:
            raise ValueError("Invalid value for `content`, must not be `None`")  # noqa: E501

        self._content = content

    @property
    def method(self) -> str:
        """Gets the method of this AllocateComputeRequestUserData.

        Method used as transportation media to convey the content of the UserData to the virtualised compute resource. Possible values: CONFIG-DRIVE.  # noqa: E501

        :return: The method of this AllocateComputeRequestUserData.
        :rtype: str
        """
        return self._method

    @method.setter
    def method(self, method: str):
        """Sets the method of this AllocateComputeRequestUserData.

        Method used as transportation media to convey the content of the UserData to the virtualised compute resource. Possible values: CONFIG-DRIVE.  # noqa: E501

        :param method: The method of this AllocateComputeRequestUserData.
        :type method: str
        """
        if method is None:
            raise ValueError("Invalid value for `method`, must not be `None`")  # noqa: E501

        self._method = method
