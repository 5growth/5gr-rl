{
  "definitions": {
    "AllocateComputeRequest": {
      "properties": {
        "affinityOrAntiAffinityConstraints": {
          "description": "A list of elements with affinity or anti affinity information of the virtualised compute resource to allocate. There should be a relation between the constraints defined in the different elements of the list.",
          "items": {
            "properties": {
              "affinityAntiAffinityResourceGroup": {
                "description": "Identifier of the producer-managed group of virtualised resources with which the actual resource is requested to be affine or anti-affine. Either affinityAntiAffinityResourceList or affinityAntiAffinityResourceGroup but not both shall be present.",
                "type": "string"
              },
              "affinityAntiAffinityResourceList": {
                "description": "Consumer-managed list of identifiers of virtualised resources with which the actual resource is requested to be affine or anti-affine. Either affinityAntiAffinityResourceList or affinityAntiAffinityResourceGroup but not both shall be present.",
                "properties": {
                  "resource": {
                    "description": "List of identifiers of virtualised resources.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "resource"
                ],
                "type": "object"
              },
              "scope": {
                "description": "Qualifies the scope of the constraint. In case of compute resource: e.g. \"NFVI-PoP\" or \"NFVI Node\". In case of ports: e.g. \"virtual switch or router\" or \"physical NIC\", or \"physical network\" or \"NFVI Node\". In case of networks: e.g. \"physical NIC\", \"physical network\" or \"NFVI Node\". In case of subnets: it should be ignored. Defaults to \"NFVI Node\" if absent.",
                "type": "string"
              },
              "type": {
                "description": "Indicates whether this is an affinity or anti-affinity constraint.",
                "type": "string"
              }
            },
            "required": [
              "affinityAntiAffinityResourceGroup",
              "affinityAntiAffinityResourceList",
              "scope",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "computeFlavourId": {
          "description": "Identifier of the Compute Flavour that provides information about the particular memory, CPU and disk resources for virtualised compute resource to allocate. The Compute Flavour is created with Create Compute Flavour operation",
          "type": "string"
        },
        "computeName": {
          "description": "Name provided by the consumer for the virtualised compute resource to allocate. It can be used for identifying resources from consumer side.",
          "type": "string"
        },
        "interfaceData": {
          "description": "The data of network interfaces which are specific to a Virtual Compute Resource instance.",
          "items": {
            "properties": {
              "ipAddress": {
                "description": "The virtual network interface can be configured with specific IP address(es) associated to the network to be attached to. The cardinality can be 0 in the case that a network interface is created without being attached to any specific network, or when an IP address can be automatically configured, e.g. by DHCP.",
                "type": "string"
              },
              "macAddress": {
                "description": "The MAC address desired for the virtual network interface. The cardinality can be 0 to allow for network interface without specific MAC address configuration.",
                "type": "string"
              },
              "networkId": {
                "description": "Field not included in the IFA005 norm and added by BCOM This field is needed by openstack to create the interface on the specific subnet.",
                "type": "string"
              }
            },
            "required": [
              "ipAddress",
              "macAddress",
              "networkId"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "locationConstraints": {
          "description": "If present, it defines location constraints for the resource(s) is (are) requested to be allocated, e.g. in what particular Resource Zone.",
          "type": "string"
        },
        "metadata": {
          "description": "List of metadata key-value pairs used by the consumer to associate meaningful metadata to the related virtualised resource.",
          "type": "object"
        },
        "reservationId": {
          "description": "Identifier of the resource reservation applicable to this virtualised resource management operation. Cardinality can be 0 if no resource reservation was used.",
          "type": "string"
        },
        "resourceGroupId": {
          "description": "Unique identifier of the \"infrastructure resource group\", logical grouping of virtual resources assigned to a tenant within an Infrastructure Domain.",
          "type": "string"
        },
        "userData": {
          "description": "Element containing user data to customize the virtualised compute resource at boot-time.",
          "properties": {
            "content": {
              "description": "String containing the user data to customize a virtualised compute resource at boot-time.",
              "type": "string"
            },
            "method": {
              "description": "Method used as transportation media to convey the content of the UserData to the virtualised compute resource. Possible values: CONFIG-DRIVE.",
              "type": "string"
            }
          },
          "required": [
            "content",
            "method"
          ],
          "type": "object"
        },
        "vcImageId": {
          "description": "Identifier of the virtualisation container software image (e.g. a virtual machine image). Cardinality can be 0 if an \"empty\" virtualisation container is allocated. ",
          "type": "string"
        }
      },
      "required": [
        "affinityOrAntiAffinityConstraints",
        "computeFlavourId",
        "computeName",
        "interfaceData",
        "locationConstraints",
        "reservationId",
        "resourceGroupId",
        "userData",
        "vcImageId"
      ],
      "type": "object"
    },
    "AllocateNetworkRequest": {
      "properties": {
        "affinityOrAntiAffinityConstraints": {
          "description": "A list of element with affinity or anti affinity information of the virtualised network resource to allocate. All the listed constraints  shall be fulfilled for a successful operation.",
          "items": {
            "properties": {
              "affinityAntiAffinityResourceGroup": {
                "description": "Identifier of the producer-managed group of virtualised resources with which the actual resource is requested to be affine or anti-affine. Either affinityAntiAffinityResourceList or affinityAntiAffinityResourceGroup but not both shall be present.",
                "type": "string"
              },
              "affinityAntiAffinityResourceList": {
                "description": "Consumer-managed list of identifiers of virtualised resources with which the actual resource is requested to be affine or anti-affine. Either affinityAntiAffinityResourceList or affinityAntiAffinityResourceGroup but not both shall be present.",
                "properties": {
                  "resource": {
                    "description": "List of identifiers of virtualised resources.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "resource"
                ],
                "type": "object"
              },
              "scope": {
                "description": "Qualifies the scope of the constraint. In case of compute resource: e.g. \"NFVI-PoP\" or \"NFVI Node\". In case of ports: e.g. \"virtual switch or router\" or \"physical NIC\", or \"physical network\" or \"NFVI Node\". In case of networks: e.g. \"physical NIC\", \"physical network\" or \"NFVI Node\". In case of subnets: it should be ignored. Defaults to \"NFVI Node\" if absent.",
                "type": "string"
              },
              "type": {
                "description": "Indicates whether this is an affinity or anti-affinity constraint.",
                "type": "string"
              }
            },
            "required": [
              "affinityAntiAffinityResourceGroup",
              "affinityAntiAffinityResourceList",
              "scope",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "locationConstraints": {
          "description": "Controls the visibility of the image. In case of \"private\" value the image is available only for the tenant assigned to the provided resourceGroupId and the administrator tenants of the VIM while in case of \"public\" value, all tenants of the VIM can use the image.",
          "type": "string"
        },
        "metadata": {
          "description": "List of metadata key-value pairs used by the consumer to associate meaningful metadata to the related network ressource.",
          "type": "object"
        },
        "networkResourceName": {
          "description": "Name provided by the consumer for the virtualised network resource to allocate. It can be used for identifying resources from consumer side.",
          "type": "string"
        },
        "networkResourceType": {
          "description": "Type of virtualised network resource. Possible values are: \"network\", \"subnet\" or network-port.",
          "type": "string"
        },
        "reservationId": {
          "description": "Identifier of the resource reservation applicable to this virtualised resource management operation.",
          "type": "string"
        },
        "resourceGroupId": {
          "description": "Unique identifier of the \"infrastructure resource group\", logical grouping of virtual resources assigned to a tenant within an Infrastructure Domain.",
          "type": "string"
        },
        "typeNetworkData": {
          "description": "The network data provides information about the particular virtual network resource to create. Cardinality can be \"0\" depending on the value of networkResourceType.",
          "properties": {
            "bandwidth": {
              "description": "Minimum network bandwidth (in Mbps).",
              "type": "number"
            },
            "isShared": {
              "description": "It defines whether the virtualised network is shared among consumers.",
              "type": "boolean"
            },
            "layer3Attributes": {
              "description": "The attribute allows setting up a network providing defined layer 3 connectivity. See clause 8.4.4.4 for further information on the attributes required for layer 3 connectivity.",
              "items": {
                "properties": {
                  "addressPool": {
                    "description": "Address pools for the network/subnetwork. The cardinality can be 0 when VIM is allowed to allocate alladdresses in the CIDR except for the address of the network/subnetwork gateway.",
                    "type": "string"
                  },
                  "cidr": {
                    "description": "The CIDR of the network/subnetwork, i.e. network address and subnet mask. Cardinality can be 0 when NetworkSubnetData is part of Update Virtualised Network Resource.",
                    "type": "string"
                  },
                  "gatewayIp": {
                    "description": "Specifies the IP address of the network/subnetwork gateway when the gateway is selected by the requestor.",
                    "type": "string"
                  },
                  "ipVersion": {
                    "description": "The IP version of the network/subnetwork. Cardinality can be 0 when NetworkSubnetData is part of Update Virtualised Network Resource.",
                    "type": "string"
                  },
                  "isDhcpEnabled": {
                    "description": "True when DHCP is to be enabled for this network/subnetwork, or false otherwise.",
                    "type": "boolean"
                  },
                  "metadata": {
                    "description": "List of metadata key-value pairs used by the consumer to associate meaningful metadata to the related virtualised ressource.",
                    "type": "object"
                  },
                  "networkId": {
                    "description": "The identifier of the virtualised network that the virtualised sub-network is attached to. The cardinality can be 0 to cover the case where this type is used to describe the L3 attributes of a network rather than a subnetwork or when NetworkSubnetData is part of Update Virtualised Network Resource.",
                    "type": "string"
                  }
                },
                "required": [
                  "addressPool",
                  "cidr",
                  "gatewayIp",
                  "ipVersion",
                  "isDhcpEnabled",
                  "networkId"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "metadata": {
              "description": "List of metadata key-value pairs used by the consumer to associate meaningful metadata to the related virtualised ressource.",
              "type": "object"
            },
            "networkQoS": {
              "description": "Element providing information about Quality of Service attributes that the network shall support. The cardinality can be \"0\" to allow for networks without any specified QoS requirements.",
              "items": {
                "properties": {
                  "qosName": {
                    "description": "Name given to the QoS parameter.",
                    "type": "string"
                  },
                  "qosValue": {
                    "description": "Value of the QoS parameter.",
                    "type": "string"
                  }
                },
                "required": [
                  "qosName",
                  "qosValue"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "networkType": {
              "description": "The type of network that maps to the virtualised network. This list is extensible. Examples are: \"local\", \"vlan\", \"vxlan\", \"gre\", \"l3-vpn\", etc. The cardinality can be \"0\" to cover the case where this attribute is not required to create the virtualised network.",
              "type": "string"
            },
            "segmentType": {
              "description": "The isolated segment for the virtualised network. For instance, for a \"vlan\" networkType, it corresponds to the vlan identifier; and for a \"gre\" networkType, this corresponds to a gre key. The cardinality can be \"0\" to allow for flat networks without any specific segmentation.",
              "type": "string"
            },
            "sharingCriteria": {
              "description": "Only present for shared networks. Indicate the sharing criteria for this network. This criteria might be a list of authorized consumers.",
              "type": "string"
            }
          },
          "required": [
            "bandwidth",
            "isShared",
            "layer3Attributes",
            "networkQoS",
            "networkType",
            "segmentType",
            "sharingCriteria"
          ],
          "type": "object"
        },
        "typeNetworkPortData": {
          "description": "The network port data provides information about the particular network port to create. Cardinality can be \"0\" depending on the value of networkResourceType.",
          "properties": {
            "bandwidth": {
              "description": "The bandwidth of the virtual network port (in Mbps). Cardinality can be \"0\" to allow for virtual network ports without any specified bandwidth requirements.",
              "type": "number"
            },
            "metadata": {
              "description": "List of metadata key-value pairs used by the consumer to associate meaningful metadata to the related virtualised ressource.",
              "type": "object"
            },
            "networkId": {
              "description": "Identifier of the network that the port belongs to. When creating a port, such port needs to be part of a network. Cardinality can be 0 when VirtualNetworkPortData is part of Update Virtualised Network Resource",
              "type": "string"
            },
            "portType": {
              "description": "Type of network port. Examples of types are access ports (layer 2 or 3), or trunk ports (layer 1) that become transport for multiple layer 2 or layer 3 networks.",
              "type": "string"
            },
            "segmentId": {
              "description": "The isolated segment the network port belongs to. For instance, for a \"vlan\", it corresponds to the vlan identifier; and for a \"gre\", this corresponds to a gre key. The cardinality can be \"0\" to allow for flat networks without any specific segmentation.",
              "type": "string"
            }
          },
          "required": [
            "bandwidth",
            "networkId",
            "portType",
            "segmentId"
          ],
          "type": "object"
        },
        "typeSubnetData": {
          "description": "The subnet data provides information about the particular sub-network resource to create. Cardinality can be \"0\" depending on the value of networkResourceType.",
          "properties": {
            "addressPool": {
              "description": "Address pools for the network/subnetwork. The cardinality can be 0 when VIM is allowed to allocate alladdresses in the CIDR except for the address of the network/subnetwork gateway.",
              "type": "string"
            },
            "cidr": {
              "description": "The CIDR of the network/subnetwork, i.e. network address and subnet mask. Cardinality can be 0 when NetworkSubnetData is part of Update Virtualised Network Resource.",
              "type": "string"
            },
            "gatewayIp": {
              "description": "Specifies the IP address of the network/subnetwork gateway when the gateway is selected by the requestor.",
              "type": "string"
            },
            "ipVersion": {
              "description": "The IP version of the network/subnetwork. Cardinality can be 0 when NetworkSubnetData is part of Update Virtualised Network Resource.",
              "type": "string"
            },
            "isDhcpEnabled": {
              "description": "True when DHCP is to be enabled for this network/subnetwork, or false otherwise.",
              "type": "boolean"
            },
            "metadata": {
              "description": "List of metadata key-value pairs used by the consumer to associate meaningful metadata to the related virtualised ressource.",
              "type": "object"
            },
            "networkId": {
              "description": "The identifier of the virtualised network that the virtualised sub-network is attached to. The cardinality can be 0 to cover the case where this type is used to describe the L3 attributes of a network rather than a subnetwork or when NetworkSubnetData is part of Update Virtualised Network Resource.",
              "type": "string"
            }
          },
          "required": [
            "addressPool",
            "cidr",
            "gatewayIp",
            "ipVersion",
            "isDhcpEnabled",
            "networkId"
          ],
          "type": "object"
        }
      },
      "required": [
        "affinityOrAntiAffinityConstraints",
        "locationConstraints",
        "networkResourceName",
        "networkResourceType",
        "reservationId",
        "resourceGroupId",
        "typeNetworkData",
        "typeNetworkPortData",
        "typeSubnetData"
      ],
      "type": "object"
    },
    "AllocateNetworkResult": {
      "properties": {
        "networkData": {
          "description": "If network types are created satisfactorily, it contains the data relative to the instantiated virtualised network resource. Cardinality can be \"0\" if the request did not include creation of such type of resource.",
          "properties": {
            "bandwidth": {
              "description": "Minimum network bandwidth (in Mbps).",
              "type": "number"
            },
            "isShared": {
              "description": "It defines whether the virtualised network is shared among consumers.",
              "type": "boolean"
            },
            "metadata": {
              "description": "List of metadata key-value pairs used by the consumer to associate meaningful metadata to the related virtualised ressource.",
              "type": "object"
            },
            "networkPort": {
              "description": "Element providing information of an instantiated virtual network port.",
              "items": {
                "properties": {
                  "attachedResourceId": {
                    "description": "Identifier of the attached resource to the network port (e.g. a virtualised compute resource, or identifier of the virtual network interface). The cardinality can be \"0\" if there is no specific resource connected to the network port.",
                    "type": "string"
                  },
                  "bandwidth": {
                    "description": "The bandwidth of the virtual network port (in Mbps). Cardinality can be \"0\" for virtual network ports without any specific allocated bandwidth.",
                    "type": "number"
                  },
                  "metadata": {
                    "description": "List of metadata key-value pairs used by the consumer to associate meaningful metadata to the related virtualised ressource.",
                    "type": "object"
                  },
                  "networkId": {
                    "description": "Identifier of the network that the port belongs to. When creating a port, such port needs to be part of a network.",
                    "type": "string"
                  },
                  "operationalState": {
                    "description": "The operational state of the virtual network port.",
                    "type": "string"
                  },
                  "portType": {
                    "description": "Type of network port. Examples of types are access ports (layer 2 or 3), or trunk ports (layer 1) that become transport for multiple layer 2 or layer 3 networks.",
                    "type": "string"
                  },
                  "resourceId": {
                    "description": "Identifier of the virtual network port.",
                    "type": "string"
                  },
                  "segmentId": {
                    "description": "The isolated segment the network port belongs to. For instance, for a \"vlan\", it corresponds to the vlan identifier; and for a \"gre\", this corresponds to a gre key. The cardinality can be \"0\" for flat networks without any specific segmentation.",
                    "type": "string"
                  }
                },
                "required": [
                  "attachedResourceId",
                  "bandwidth",
                  "networkId",
                  "operationalState",
                  "portType",
                  "resourceId",
                  "segmentId"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "networkQoS": {
              "description": "Element providing information about Quality of Service attributes that the network shall support. The cardinality can be \"0\" to allow for networks without any specified QoS requirements.",
              "items": {
                "properties": {
                  "qosName": {
                    "description": "Name given to the QoS parameter.",
                    "type": "string"
                  },
                  "qosValue": {
                    "description": "Value of the QoS parameter.",
                    "type": "string"
                  }
                },
                "required": [
                  "qosName",
                  "qosValue"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "networkResourceId": {
              "description": "Identifier of the virtualised network resource.",
              "type": "string"
            },
            "networkResourceName": {
              "description": "Name of the virtualised network resource.",
              "type": "string"
            },
            "networkType": {
              "description": "The type of network that maps to the virtualised network. This list is extensible. Examples are: \"local\", \"vlan\", \"vxlan\", \"gre\", \"l3-vpn\", etc. The cardinality can be \"0\" to cover the case where this attribute is not required to create the virtualised network.",
              "type": "string"
            },
            "operationalState": {
              "description": "The operational state of the virtualised network.",
              "type": "string"
            },
            "segmentType": {
              "description": "The isolated segment for the virtualised network. For instance, for a \"vlan\" networkType, it corresponds to the vlan identifier; and for a \"gre\" networkType, this corresponds to a gre key. The cardinality can be \"0\" to allow for flat networks without any specific segmentation.",
              "type": "string"
            },
            "sharingCriteria": {
              "description": "Only present for shared networks. Indicate the sharing criteria for this network. This criteria might be a list of authorized consumers.",
              "type": "string"
            },
            "subnet": {
              "description": "Only present if the network provides layer 3 connectivity.",
              "type": "string"
            },
            "zoneId": {
              "description": "If present, it identifies the Resource Zone where the virtual network resources have been allocated.",
              "type": "string"
            }
          },
          "required": [
            "bandwidth",
            "isShared",
            "networkPort",
            "networkQoS",
            "networkResourceId",
            "networkResourceName",
            "networkType",
            "operationalState",
            "segmentType",
            "sharingCriteria",
            "subnet",
            "zoneId"
          ],
          "type": "object"
        },
        "networkPortData": {
          "description": "If network types are created satisfactorily, it contains the data relative to the instantiated virtualised network resource. Cardinality can be \"0\" if the request did not include creation of such type of resource.",
          "properties": {
            "attachedResourceId": {
              "description": "Identifier of the attached resource to the network port (e.g. a virtualised compute resource, or identifier of the virtual network interface). The cardinality can be \"0\" if there is no specific resource connected to the network port.",
              "type": "string"
            },
            "bandwidth": {
              "description": "The bandwidth of the virtual network port (in Mbps). Cardinality can be \"0\" for virtual network ports without any specific allocated bandwidth.",
              "type": "number"
            },
            "metadata": {
              "description": "List of metadata key-value pairs used by the consumer to associate meaningful metadata to the related virtualised ressource.",
              "type": "object"
            },
            "networkId": {
              "description": "Identifier of the network that the port belongs to. When creating a port, such port needs to be part of a network.",
              "type": "string"
            },
            "operationalState": {
              "description": "The operational state of the virtual network port.",
              "type": "string"
            },
            "portType": {
              "description": "Type of network port. Examples of types are access ports (layer 2 or 3), or trunk ports (layer 1) that become transport for multiple layer 2 or layer 3 networks.",
              "type": "string"
            },
            "resourceId": {
              "description": "Identifier of the virtual network port.",
              "type": "string"
            },
            "segmentId": {
              "description": "The isolated segment the network port belongs to. For instance, for a \"vlan\", it corresponds to the vlan identifier; and for a \"gre\", this corresponds to a gre key. The cardinality can be \"0\" for flat networks without any specific segmentation.",
              "type": "string"
            }
          },
          "required": [
            "attachedResourceId",
            "bandwidth",
            "networkId",
            "operationalState",
            "portType",
            "resourceId",
            "segmentId"
          ],
          "type": "object"
        },
        "subnetData": {
          "description": "If subnet types are created satisfactorily, it contains the data relative to the allocated subnet. Cardinality can be \"0\" if the request did not include creation of such type of resource.",
          "properties": {
            "addressPool": {
              "description": "Address pools for the network/subnetwork. The cardinality can be 0 when VIM is allowed to allocate all addresses in the CIDR except for the address of the network/subnetwork gateway.",
              "type": "string"
            },
            "cidr": {
              "description": "The CIDR of the network/subnetwork, i.e. network address and subnet mask.",
              "type": "string"
            },
            "gatewayIp": {
              "description": "The IP address of the network/subnetwork gateway.",
              "type": "string"
            },
            "ipVersion": {
              "description": "The IP version of the network/subnetwork.",
              "type": "string"
            },
            "isDhcpEnabled": {
              "description": "True when DHCP is enabled for this network/subnetwork, or false otherwise.",
              "type": "boolean"
            },
            "metadata": {
              "description": "List of metadata key-value pairs used by the consumer to associate meaningful metadata to the related virtualised ressource.",
              "type": "object"
            },
            "networkId": {
              "description": "The identifier of the virtualised network that the virtualised sub-network is attached to. The cardinality can be 0 to cover the case where this type is used to describe the L3 attributes of a network rather than a subnetwork.",
              "type": "string"
            },
            "resourceId": {
              "description": "Identifier of the virtualised sub-network.",
              "type": "string"
            }
          },
          "required": [
            "addressPool",
            "cidr",
            "gatewayIp",
            "ipVersion",
            "isDhcpEnabled",
            "networkId",
            "resourceId"
          ],
          "type": "object"
        }
      },
      "required": [
        "networkData",
        "networkPortData",
        "subnetData"
      ],
      "type": "object"
    },
    "CapacityInformation": {
      "properties": {
        "allocatedCapacity": {
          "description": "The allocated capacity is usually specified as the current allocated capacity.",
          "type": "string"
        },
        "availableCapacity": {
          "description": "The free capacity available for allocation and reservation. It can be specified in terms of current capacity; or minimum and maximum capacity; average capacity; or other statistical measurement in the specified time interval. The set of measurements is to be defined during Stage 3.",
          "type": "string"
        },
        "reservedCapacity": {
          "description": "The reserved capacity. It can be specified in terms of current capacity; or minimum and maximum capacity; average capacity; or other statistical measurement in the specified time interval. The set of measurements is to be defined during Stage 3.",
          "type": "string"
        },
        "totalCapacity": {
          "description": "The total capacity is usually specified as a fixed capacity without variations in time. The set of measurements is left to Stage 3.",
          "type": "string"
        }
      },
      "required": [
        "allocatedCapacity",
        "availableCapacity",
        "reservedCapacity",
        "totalCapacity"
      ],
      "type": "object"
    },
    "CreateComputeResourceQuotaRequest": {
      "properties": {
        "resourceGroupId": {
          "description": "Name provided by the consumer for the virtualised compute resource to allocate. It can be used for identifying resources from consumer side.",
          "type": "string"
        },
        "virtualComputeQuota": {
          "description": "Identifier of the resource reservation applicable to this virtualised resource management operation. Cardinality can be 0 if no resource reservation was used.",
          "properties": {
            "numVCPUs": {
              "description": "Number of CPU cores to be restricted by the quota. The cardinality can be 0 if no specific number of CPU cores is to be restricted by the quota or the quota for CPU cores is not to be update.",
              "format": "int32",
              "type": "integer"
            },
            "numVcInstances": {
              "description": "Number of virtualisation container instances to be restricted by the quota. The cardinality can be 0 if no specific number of virtualisation container instances is to be restricted by the quota or the quota for virtualisation container instances is not to be update.",
              "format": "int32",
              "type": "integer"
            },
            "virtualMemSize": {
              "description": "Size of virtual memory to be restricted by the quota. The cardinality can be 0 if no specific size of virtual memory is to be restricted by the quota or the quota for virtual memory is not to be update.",
              "type": "number"
            }
          },
          "required": [
            "numVCPUs",
            "numVcInstances",
            "virtualMemSize"
          ],
          "type": "object"
        }
      },
      "required": [
        "resourceGroupId",
        "virtualComputeQuota"
      ],
      "type": "object"
    },
    "CreateComputeResourceReservationRequest": {
      "properties": {
        "affinityConstraint": {
          "description": "Element with affinity information of the virtualised compute resources to reserve. For the resource reservation at resource pool granularity level, it defines the affinity information of the virtual compute pool resources to reserve. For the resource reservation at virtual container granularity level, it defines the affinity information of the virtualisation container(s) to reserve.",
          "items": {
            "properties": {
              "affinityAntiAffinityResourceGroup": {
                "description": "Identifier of the producer-managed group of virtualised resources with which the actual resource is requested to be affine or anti-affine. Either affinityAntiAffinityResourceList or affinityAntiAffinityResourceGroup but not both shall be present.",
                "type": "string"
              },
              "affinityAntiAffinityResourceList": {
                "description": "Consumer-managed list of identifiers of virtualised resources with which the actual resource is requested to be affine or anti-affine. Either affinityAntiAffinityResourceList or affinityAntiAffinityResourceGroup but not both shall be present.",
                "properties": {
                  "resource": {
                    "description": "List of identifiers of virtualised resources.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "resource"
                ],
                "type": "object"
              },
              "scope": {
                "description": "Qualifies the scope of the constraint. In case of compute resource: e.g. \"NFVI-PoP\" or \"NFVI Node\". In case of ports: e.g. \"virtual switch or router\" or \"physical NIC\", or \"physical network\" or \"NFVI Node\". In case of networks: e.g. \"physical NIC\", \"physical network\" or \"NFVI Node\". In case of subnets: it should be ignored. Defaults to \"NFVI Node\" if absent.",
                "type": "string"
              },
              "type": {
                "description": "Indicates whether this is an affinity or anti-affinity constraint.",
                "type": "string"
              }
            },
            "required": [
              "affinityAntiAffinityResourceGroup",
              "affinityAntiAffinityResourceList",
              "scope",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "antiAffinityConstraint": {
          "description": "Element with anti-affinity information of the virtualised compute resources to reserve. For the resource reservation at resource pool granularity level, it defines the anti-affinity information of the virtual compute pool resources to reserve. For the resource reservation at virtual container granularity level, it defines the anti-affinity information of the virtualisation container(s) to reserve.",
          "items": {
            "properties": {
              "affinityAntiAffinityResourceGroup": {
                "description": "Identifier of the producer-managed group of virtualised resources with which the actual resource is requested to be affine or anti-affine. Either affinityAntiAffinityResourceList or affinityAntiAffinityResourceGroup but not both shall be present.",
                "type": "string"
              },
              "affinityAntiAffinityResourceList": {
                "description": "Consumer-managed list of identifiers of virtualised resources with which the actual resource is requested to be affine or anti-affine. Either affinityAntiAffinityResourceList or affinityAntiAffinityResourceGroup but not both shall be present.",
                "properties": {
                  "resource": {
                    "description": "List of identifiers of virtualised resources.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "resource"
                ],
                "type": "object"
              },
              "scope": {
                "description": "Qualifies the scope of the constraint. In case of compute resource: e.g. \"NFVI-PoP\" or \"NFVI Node\". In case of ports: e.g. \"virtual switch or router\" or \"physical NIC\", or \"physical network\" or \"NFVI Node\". In case of networks: e.g. \"physical NIC\", \"physical network\" or \"NFVI Node\". In case of subnets: it should be ignored. Defaults to \"NFVI Node\" if absent.",
                "type": "string"
              },
              "type": {
                "description": "Indicates whether this is an affinity or anti-affinity constraint.",
                "type": "string"
              }
            },
            "required": [
              "affinityAntiAffinityResourceGroup",
              "affinityAntiAffinityResourceList",
              "scope",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "computePoolReservation": {
          "description": "Amount of compute resources that need to be reserved, e.g. {\"cpu_cores\": 90, \"vm_instances\": 10, \"ram\": 10000}.",
          "properties": {
            "computeAttributes": {
              "description": "Information specifying additional attributes of the compute resource to be reserved.",
              "properties": {
                "accelerationCapability": {
                  "description": "Selected acceleration capabilities (e.g. crypto, GPU) from the set of capabilities offered by the compute node acceleration resources. The cardinality can be 0, if no particular acceleration capability is requested.",
                  "type": "string"
                },
                "cpuArchitecture": {
                  "description": "CPU architecture type. Examples are \"x86\", \"ARM\". The cardinality can be 0, if no particular CPU architecture type is requested.",
                  "type": "string"
                },
                "virtualCpuOversubscriptionPolicy": {
                  "description": "The CPU core oversubscription policy in terms of virtual CPU cores to physical CPU cores/threads on the platform. The cardinality can be 0, if no particular value is requested.",
                  "type": "string"
                }
              },
              "required": [
                "accelerationCapability",
                "cpuArchitecture",
                "virtualCpuOversubscriptionPolicy"
              ],
              "type": "object"
            },
            "numCpuCores": {
              "description": "Number of CPU cores to be reserved.",
              "format": "int32",
              "type": "integer"
            },
            "numVcInstances": {
              "description": "Number of virtualised container instances to be reserved.",
              "format": "int32",
              "type": "integer"
            },
            "virtualMemSize": {
              "description": "Size of virtual memory to be reserved.",
              "type": "number"
            }
          },
          "required": [
            "computeAttributes",
            "numCpuCores",
            "numVcInstances",
            "virtualMemSize"
          ],
          "type": "object"
        },
        "endTime": {
          "description": "Indication when the reservation ends (when the issuer of the request expects that the resources will no longer be needed) and used by the VIM to schedule the reservation. If not present, resources are reserved for unlimited usage time.",
          "format": "date-time",
          "type": "string"
        },
        "expiryTime": {
          "description": "Indication when the VIM can release the reservation in case no allocation request against this reservation was made.",
          "format": "date-time",
          "type": "string"
        },
        "locationConstraints": {
          "description": "If present, it defines location constraints for the resource(s) is (are) requested to be reserved, e.g. in what particular Resource Zone.",
          "type": "string"
        },
        "resourceGroupId": {
          "description": "Unique identifier of the \"infrastructure resource group\", logical grouping of virtual resources assigned to a tenant within an Infrastructure Domain.",
          "type": "string"
        },
        "startTime": {
          "description": "Indication when the consumption of the resources starts. If the value is 0, resources are reserved for immediate use.",
          "format": "date-time",
          "type": "string"
        },
        "virtualisationContainerReservation": {
          "description": "Virtualisation containers that need to be reserved (e.g. following a specific compute \"flavour\")",
          "items": {
            "properties": {
              "containerFlavour": {
                "description": "The containerFlavour encapsulates information of the virtualisation container to be reserved.",
                "properties": {
                  "accelerationCapability": {
                    "description": "Selected acceleration capabilities (e.g. crypto, GPU) from the set of capabilities offered by the compute node acceleration resources. The cardinality can be 0, if no particular acceleration capability is requested.",
                    "type": "string"
                  },
                  "flavourId": {
                    "description": "Identifier given to the compute flavour.",
                    "type": "string"
                  },
                  "storageAttributes": {
                    "description": "Element containing information about the size of virtualised storage resources (e.g. size of volume, in GB), the type of storage (e.g. volume, object).",
                    "items": {
                      "properties": {
                        "flavourId": {
                          "description": "Identifier of the storage flavour used to instantiate this virtual storage.",
                          "type": "string"
                        },
                        "hostId": {
                          "description": "Identifier of the host where the virtualised storage resource is allocated. A cardinality of 0 refers to distributed storage solutions.",
                          "type": "string"
                        },
                        "metadata": {
                          "description": "List of metadata key-value pairs used by the consumer to associate meaningful metadata to the related virtualised resource.",
                          "type": "object"
                        },
                        "operationalState": {
                          "description": "Operational state of the resource.",
                          "type": "string"
                        },
                        "ownerId": {
                          "description": "Identifier of the virtualised resource that owns and uses such a virtualised storage resource. The value can be NULL if the virtualised storage is not attached yet to any other resource (e.g. a virtual machine).",
                          "type": "string"
                        },
                        "rdmaEnabled": {
                          "description": "Indicates if the storage supports RDMA.",
                          "type": "boolean"
                        },
                        "sizeOfStorage": {
                          "description": "Size of virtualised storage resource (e.g. size of volume, in GB).",
                          "type": "number"
                        },
                        "storageId": {
                          "description": "Identifier of the virtualised storage resource.",
                          "type": "string"
                        },
                        "storageName": {
                          "description": "Name of the virtualised storage resource.",
                          "type": "string"
                        },
                        "typeOfStorage": {
                          "description": "Type of virtualised storage resource (e.g. volume, object).",
                          "type": "string"
                        },
                        "zoneId": {
                          "description": "If present, it identifies the Resource Zone where the virtual storage resources have been allocated.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "flavourId",
                        "hostId",
                        "operationalState",
                        "ownerId",
                        "sizeOfStorage",
                        "storageId",
                        "storageName",
                        "typeOfStorage",
                        "zoneId"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "virtualCpu": {
                    "description": "The virtual CPU(s) of the virtualised compute.",
                    "items": {
                      "properties": {
                        "cpuArchitecture": {
                          "description": "CPU architecture type. Examples are x86, ARM.",
                          "type": "string"
                        },
                        "cpuClock": {
                          "description": "Minimum CPU clock rate (e.g. in MHz) available for the virtualised CPU resources.",
                          "type": "number"
                        },
                        "numVirtualCpu": {
                          "description": "Number of virtual CPUs.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "virtualCpuOversubscriptionPolicy": {
                          "description": "The CPU core oversubscription policy, e.g. the relation of virtual CPU cores to physical CPU cores/threads. The cardinality can be 0 if no policy has been defined during the allocation request.",
                          "type": "string"
                        },
                        "virtualCpuPinning": {
                          "description": "The virtual CPU pinning configuration for the virtualised compute resource.",
                          "properties": {
                            "cpuMap": {
                              "description": "Shows the association of virtual CPU cores to physical CPU cores.",
                              "type": "string"
                            },
                            "cpuPinningPolicy": {
                              "description": "The policy can take values of \"static\" or \"dynamic\". In case of \"static\" the virtual CPU cores have been allocated to physical CPU cores according to the rules defined in cpuPinningRules. In case of \"dynamic\" the allocation of virtual CPU cores to physical CPU cores is decided by the VIM.",
                              "type": "string"
                            },
                            "cpuPinningRules": {
                              "description": "A list of rules that should be considered during the allocation of the virtual CPUs to physical CPUs in case of \"static\" cpuPinningPolicy.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "cpuMap",
                            "cpuPinningPolicy",
                            "cpuPinningRules"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "cpuArchitecture",
                        "cpuClock",
                        "numVirtualCpu",
                        "virtualCpuOversubscriptionPolicy",
                        "virtualCpuPinning"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "virtualMemory": {
                    "description": "The virtual memory of the virtualised compute.",
                    "properties": {
                      "numaEnabled": {
                        "description": "It specifies the memory allocation to be cognisant of the relevant process/core allocation.",
                        "type": "boolean"
                      },
                      "virtualMemOversubscriptionPolicy": {
                        "description": "The memory core oversubscription policy in terms of virtual memory to physical memory on the platform. The cardinality can be 0 if no policy has been defined during the allocation request.",
                        "type": "string"
                      },
                      "virtualMemSize": {
                        "description": "Amount of virtual Memory (e.g. in MB).",
                        "type": "number"
                      }
                    },
                    "required": [
                      "numaEnabled",
                      "virtualMemOversubscriptionPolicy",
                      "virtualMemSize"
                    ],
                    "type": "object"
                  },
                  "virtualNetworkInterface": {
                    "description": "The virtual network interfaces of the virtualised compute.",
                    "properties": {
                      "accelerationCapability": {
                        "description": "Shows the acceleration capabilities utilized by the virtual network interface. The cardinality can be 0, if no acceleration capability is utilized.",
                        "type": "string"
                      },
                      "bandwidth": {
                        "description": "The bandwidth of the virtual network interface (in Mbps).",
                        "type": "number"
                      },
                      "ipAddress": {
                        "description": "The virtual network interface can be configured with specific IP address(es) associated to the network to be attached to. The cardinality can be 0 in the case that a network interface is created without being attached to any specific network, or when an IP address can be automatically configured, e.g. by DHCP.",
                        "type": "string"
                      },
                      "macAddress": {
                        "description": "The MAC address of the virtual network interface.",
                        "type": "string"
                      },
                      "metadata": {
                        "description": "List of metadata key-value pairs used by the consumer to associate meaningful metadata to the related virtualised resource.",
                        "type": "object"
                      },
                      "networkId": {
                        "description": "In the case when the virtual network interface is attached to the network, it identifies such a network. The cardinality can be 0 in the case that a network interface is created without being attached to any specific network.",
                        "type": "string"
                      },
                      "networkPortId": {
                        "description": "If the virtual network interface is attached to a specific network port, it identifies such a network port. The cardinality can be 0 in the case that a network interface is created without any specific network port attachment.",
                        "type": "string"
                      },
                      "operationalState": {
                        "description": "The operational state of the virtual network interface.",
                        "type": "string"
                      },
                      "ownerId": {
                        "description": "Identifier of the owner of the network interface (e.g. a virtualised compute resource). ",
                        "type": "string"
                      },
                      "resourceId": {
                        "description": "Identifier of the virtual network interface.",
                        "type": "string"
                      },
                      "typeConfiguration": {
                        "description": "Extra configuration that the virtual network interface supports based on the type of virtual network interface, including support for SR-IOV with configuration of virtual functions (VF).",
                        "type": "string"
                      },
                      "typeVirtualNic": {
                        "description": "Type of network interface. The type allows for defining how such interface is to be realized, e.g. normal virtual NIC, with direct PCI passthrough, etc.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "accelerationCapability",
                      "bandwidth",
                      "ipAddress",
                      "macAddress",
                      "networkId",
                      "networkPortId",
                      "operationalState",
                      "ownerId",
                      "resourceId",
                      "typeConfiguration",
                      "typeVirtualNic"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "accelerationCapability",
                  "flavourId",
                  "storageAttributes",
                  "virtualCpu",
                  "virtualMemory",
                  "virtualNetworkInterface"
                ],
                "type": "object"
              },
              "containerId": {
                "description": "The identifier of the virtualisation container to be reserved.",
                "type": "string"
              }
            },
            "required": [
              "containerFlavour",
              "containerId"
            ],
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": [
        "affinityConstraint",
        "antiAffinityConstraint",
        "computePoolReservation",
        "endTime",
        "expiryTime",
        "locationConstraints",
        "resourceGroupId",
        "startTime",
        "virtualisationContainerReservation"
      ],
      "type": "object"
    },
    "CreateNetworkResourceQuotaRequest": {
      "properties": {
        "resourceGroupId": {
          "description": "Unique identifier of the \"infrastructure resource group\", logical grouping of virtual resources assigned to a tenant within an Infrastructure Domain.",
          "type": "string"
        },
        "virtualNetworkQuota": {
          "description": "Type and configuration of virtualised network resources that need to be restricted by the quota, e.g. {\"numPublicIps\": 20}.",
          "properties": {
            "numPorts": {
              "description": "Number of ports to be restricted by the quota. The cardinality can be 0 if no specific number of ports is to be restricted by the quota or the quota for ports is not to be update.",
              "format": "int32",
              "type": "integer"
            },
            "numPublicIps": {
              "description": "Number of public IP addresses to be restricted by the quota. The cardinality can be 0 if no specific number of public IP addresses is to be restricted by the quota or the quota for public IP addresses is not to be update.",
              "format": "int32",
              "type": "integer"
            },
            "numSubnets": {
              "description": "Number of subnets to be restricted by the quota. The cardinality can be 0 if no specific number of subnets is to be restricted by the quota or the quota for subnets is not to be update.",
              "format": "int32",
              "type": "integer"
            }
          },
          "required": [
            "numPorts",
            "numPublicIps",
            "numSubnets"
          ],
          "type": "object"
        }
      },
      "required": [
        "resourceGroupId",
        "virtualNetworkQuota"
      ],
      "type": "object"
    },
    "CreateNetworkResourceReservationRequest": {
      "properties": {
        "affinityConstraint": {
          "description": "Element with anti-affinity information of the virtual network resources to reserve.",
          "items": {
            "properties": {
              "affinityAntiAffinityResourceGroup": {
                "description": "Identifier of the producer-managed group of virtualised resources with which the actual resource is requested to be affine or anti-affine. Either affinityAntiAffinityResourceList or affinityAntiAffinityResourceGroup but not both shall be present.",
                "type": "string"
              },
              "affinityAntiAffinityResourceList": {
                "description": "Consumer-managed list of identifiers of virtualised resources with which the actual resource is requested to be affine or anti-affine. Either affinityAntiAffinityResourceList or affinityAntiAffinityResourceGroup but not both shall be present.",
                "properties": {
                  "resource": {
                    "description": "List of identifiers of virtualised resources.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "resource"
                ],
                "type": "object"
              },
              "scope": {
                "description": "Qualifies the scope of the constraint. In case of compute resource: e.g. \"NFVI-PoP\" or \"NFVI Node\". In case of ports: e.g. \"virtual switch or router\" or \"physical NIC\", or \"physical network\" or \"NFVI Node\". In case of networks: e.g. \"physical NIC\", \"physical network\" or \"NFVI Node\". In case of subnets: it should be ignored. Defaults to \"NFVI Node\" if absent.",
                "type": "string"
              },
              "type": {
                "description": "Indicates whether this is an affinity or anti-affinity constraint.",
                "type": "string"
              }
            },
            "required": [
              "affinityAntiAffinityResourceGroup",
              "affinityAntiAffinityResourceList",
              "scope",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "antiAffinityConstraint": {
          "description": "If present, it defines location constraints for the resource(s) is (are) requested to be reserved, e.g. in what particular Resource Zone.",
          "items": {
            "properties": {
              "affinityAntiAffinityResourceGroup": {
                "description": "Identifier of the producer-managed group of virtualised resources with which the actual resource is requested to be affine or anti-affine. Either affinityAntiAffinityResourceList or affinityAntiAffinityResourceGroup but not both shall be present.",
                "type": "string"
              },
              "affinityAntiAffinityResourceList": {
                "description": "Consumer-managed list of identifiers of virtualised resources with which the actual resource is requested to be affine or anti-affine. Either affinityAntiAffinityResourceList or affinityAntiAffinityResourceGroup but not both shall be present.",
                "properties": {
                  "resource": {
                    "description": "List of identifiers of virtualised resources.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "resource"
                ],
                "type": "object"
              },
              "scope": {
                "description": "Qualifies the scope of the constraint. In case of compute resource: e.g. \"NFVI-PoP\" or \"NFVI Node\". In case of ports: e.g. \"virtual switch or router\" or \"physical NIC\", or \"physical network\" or \"NFVI Node\". In case of networks: e.g. \"physical NIC\", \"physical network\" or \"NFVI Node\". In case of subnets: it should be ignored. Defaults to \"NFVI Node\" if absent.",
                "type": "string"
              },
              "type": {
                "description": "Indicates whether this is an affinity or anti-affinity constraint.",
                "type": "string"
              }
            },
            "required": [
              "affinityAntiAffinityResourceGroup",
              "affinityAntiAffinityResourceList",
              "scope",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "endTime": {
          "description": "Indication when the reservation ends (when the issuer of the request expects that the resources will no longer be needed) and used by the VIM to schedule the reservation. If not present, resources are reserved for unlimited usage time.",
          "format": "date-time",
          "type": "string"
        },
        "expiryTime": {
          "description": "Indication when the VIM can release the reservation in case no allocation request against this reservation was made.",
          "format": "date-time",
          "type": "string"
        },
        "locationConstraints": {
          "description": "If present, it defines location constraints for the resource(s) is (are) requested to be reserved, e.g. in what particular Resource Zone.",
          "type": "string"
        },
        "networkReservation": {
          "description": "Type and configuration of virtualised network resources that need to be reserved, e.g. {\"PublicIps\": 20}",
          "properties": {
            "networkAttributes": {
              "description": "Information specifying additional attributes of the network resource to be reserved.",
              "properties": {
                "bandwidth": {
                  "description": "Minimum network bitrate (in Mbps).",
                  "type": "number"
                },
                "isShared": {
                  "description": "It defines whether the virtualised network to be reserved is shared among consumers.",
                  "type": "boolean"
                },
                "metadata": {
                  "description": "List of metadata key-value pairs used by the consumer to associate meaningful metadata to the related virtualised resource.",
                  "items": {
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "key",
                      "value"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "networkType": {
                  "description": "The type of network that maps to the virtualised network to be reserved. Examples are: \"local\", \"vlan\", \"vxlan\", \"gre\", etc.",
                  "type": "string"
                },
                "segmentType": {
                  "description": "The isolated segment for the virtualised network to be reserved. For instance, for a \"vlan\" networkType, it corresponds to the vlan identifier; and for a \"gre\" networkType, this corresponds to a gre key.",
                  "type": "string"
                }
              },
              "required": [
                "bandwidth",
                "isShared",
                "networkType",
                "segmentType"
              ],
              "type": "object"
            },
            "networkPorts": {
              "description": "List of specific network ports to be reserved.",
              "items": {
                "properties": {
                  "bandwidth": {
                    "description": "The bitrate of the virtual network port (in Mbps).",
                    "type": "number"
                  },
                  "metadata": {
                    "description": "List of metadata key-value pairs used by the consumer to associate meaningful metadata to the related virtualised resource.",
                    "items": {
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "key",
                        "value"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "portId": {
                    "description": "Identifier of the network port to reserve.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "portType": {
                    "description": "Type of network port. Examples of types are access ports, or trunk ports (layer 1) that become transport for multiple layer 2 or layer 3 networks.",
                    "type": "string"
                  },
                  "segmentId": {
                    "description": "The isolated segment the network port belongs to. For instance, for a \"vlan\", it corresponds to the vlan identifier; and for a \"gre\", this corresponds to a gre key. The cardinality can be 0 to allow for flat networks without any specific segmentation.",
                    "type": "string"
                  }
                },
                "required": [
                  "bandwidth",
                  "portId",
                  "portType",
                  "segmentId"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "numPublicIps": {
              "description": "Number of public IP addresses to be reserved.",
              "format": "int32",
              "type": "integer"
            }
          },
          "required": [
            "networkAttributes",
            "networkPorts",
            "numPublicIps"
          ],
          "type": "object"
        },
        "resourceGroupId": {
          "description": "Unique identifier of the \"infrastructure resource group\", logical grouping of virtual resources assigned to a tenant within an Infrastructure Domain.",
          "type": "string"
        },
        "startTime": {
          "description": "Indication when the consumption of the resources starts. If the value is 0, resources are reserved for immediate use.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "affinityConstraint",
        "antiAffinityConstraint",
        "endTime",
        "expiryTime",
        "locationConstraints",
        "networkReservation",
        "resourceGroupId",
        "startTime"
      ],
      "type": "object"
    },
    "Filter": {
      "properties": {
        "filter": {
          "description": "The filter is used to select elements for query purpose.",
          "type": "object"
        }
      },
      "required": [
        "filter"
      ],
      "type": "object"
    },
    "NfviPop": {
      "properties": {
        "geographicalLocationInfo": {
          "description": "It provides information about the geographic location (e.g. geographic coordinates or address of the building, etc.) of the NFVI resources that the VIM manages.",
          "type": "string"
        },
        "networkConnectivityEndpoint": {
          "description": "Information about network connectivity endpoints to the NFVI-PoP that the VIM manages which helps build topology information relative to NFVI-PoP connectivity to other NFVI-PoP or N-PoP.",
          "type": "string"
        },
        "nfviPopId": {
          "description": "Identification of the NFVI-PoP.",
          "type": "string"
        },
        "vimId": {
          "description": "Identification of the VIM.",
          "type": "string"
        }
      },
      "required": [
        "geographicalLocationInfo",
        "networkConnectivityEndpoint",
        "nfviPopId",
        "vimId"
      ],
      "type": "object"
    },
    "QueryComputeCapacityRequest": {
      "properties": {
        "attributeSelector": {
          "description": "Input parameter for selecting which capacity information (i.e. available, total, reserved and/or allocated capacity) is queried. When not present, all four values are requested.",
          "type": "string"
        },
        "computeResourceTypeId": {
          "description": "Identifier of the resource type for which the issuer wants to know the available, total, reserved and/or allocated capacity.",
          "type": "string"
        },
        "resourceCriteria": {
          "description": "Input capacity computation parameter for selecting the virtual memory, virtual CPU and acceleration capabilities for which the issuer wants to know the available, total, reserved and/or allocated capacity. Selecting parameters/attributes that shall be used are defined in the VirtualComputeResourceInformation, VirtualCpuResourceInformation, and VirtualMemoryResourceInformation information elements. This information element and the computeResourceTypeId are mutually exclusive.",
          "type": "string"
        },
        "timePeriod": {
          "description": "The time interval for which capacity is queried. When omitted, an interval starting \"now\" is used. The time interval can be specified since resource reservations can be made for a specified time interval.",
          "properties": {
            "startTime": {
              "description": "Indication when the capacity query period starts.",
              "format": "date-time",
              "type": "string"
            },
            "stopTime": {
              "description": "Indication when the capacity query period stops.",
              "format": "date-time",
              "type": "string"
            }
          },
          "required": [
            "startTime",
            "stopTime"
          ],
          "type": "object"
        },
        "zoneId": {
          "description": "When specified this parameter identifies the resource zone for which the capacity is requested. When not specified the total capacity managed by the VIM instance will be returned.",
          "type": "string"
        }
      },
      "required": [
        "attributeSelector",
        "computeResourceTypeId",
        "resourceCriteria",
        "timePeriod",
        "zoneId"
      ],
      "type": "object"
    },
    "QueryNetworkCapacityRequest": {
      "properties": {
        "attributeSelector": {
          "description": "Input parameter for selecting which capacity information (i.e. available, total, reserved and/or allocated capacity) is queried. When not present, all four values are requested.",
          "type": "string"
        },
        "networkResourceTypeId": {
          "description": "Identifier of the resource type for which the issuer wants to know the available, total, reserved and/or allocated capacity.",
          "type": "string"
        },
        "resourceCriteria": {
          "description": "Input capacity computation parameter for selecting the characteristics of the virtual network for which the issuer wants to know the available, total, reserved and/or allocated capacity. Selecting parameters/attributes that shall be used are defined in the VirtualNetworkResourceInformation information element. This information element and the networkResourceTypeID are mutually exclusive.",
          "type": "string"
        },
        "timePeriod": {
          "description": "The time interval for which capacity is queried. When omitted, an interval starting \"now\" is used. The time interval can be specified since resource reservations can be made for a specified time interval.",
          "properties": {
            "startTime": {
              "description": "Indication when the capacity query period starts.",
              "format": "date-time",
              "type": "string"
            },
            "stopTime": {
              "description": "Indication when the capacity query period stops.",
              "format": "date-time",
              "type": "string"
            }
          },
          "required": [
            "startTime",
            "stopTime"
          ],
          "type": "object"
        },
        "zoneId": {
          "description": "When specified this parameter identifies the resource zone for which the capacity is requested. When not specified the total capacity managed by the VIM instance will be returned.",
          "type": "string"
        }
      },
      "required": [
        "attributeSelector",
        "networkResourceTypeId",
        "resourceCriteria",
        "timePeriod",
        "zoneId"
      ],
      "type": "object"
    },
    "ReservedVirtualCompute": {
      "properties": {
        "computePoolReserved": {
          "description": "Information about compute resources that have been reserved, e.g. {\"cpu_cores\": 90, \"vm_instances\": 10, \"ram\": 10000}",
          "properties": {
            "computeAttributes": {
              "description": "Information specifying additional attributes of the virtual compute resource that have been reserved.",
              "properties": {
                "accelerationCapability": {
                  "description": "Selected acceleration capabilities (e.g. crypto, GPU) from the set of capabilities offered by the compute node acceleration resources. The cardinality can be 0, if no particular acceleration capability is provided.",
                  "type": "string"
                },
                "cpuArchitecture": {
                  "description": "CPU architecture type. Examples are \"x86\", \"ARM\". The cardinality can be 0, if no particular CPU architecture type is provided.",
                  "type": "string"
                },
                "virtualCpuOversubscriptionPolicy": {
                  "description": "The CPU core oversubscription policy in terms of virtual CPU cores to physical CPU cores/threads on the platform. The cardinality can be 0, if no particular value is provided.",
                  "type": "string"
                }
              },
              "required": [
                "accelerationCapability",
                "cpuArchitecture",
                "virtualCpuOversubscriptionPolicy"
              ],
              "type": "object"
            },
            "numCpuCores": {
              "description": "Number of CPU cores that have been reserved.",
              "format": "int32",
              "type": "integer"
            },
            "numVcInstances": {
              "description": "Number of virtual container instances that have been reserved.",
              "format": "int32",
              "type": "integer"
            },
            "virtualMemSize": {
              "description": "Size of virtual memory that has been reserved.",
              "type": "number"
            },
            "zoneId": {
              "description": "References the resource zone where the virtual compute resources have been reserved. Cardinality can be 0 to cover the case where reserved compute resources are not bound to a specific resource zone.",
              "type": "string"
            }
          },
          "required": [
            "computeAttributes",
            "numCpuCores",
            "numVcInstances",
            "virtualMemSize",
            "zoneId"
          ],
          "type": "object"
        },
        "endTime": {
          "description": "Indication when the reservation ends (when it is expected that the resources will no longer be needed) and used by the VIM to schedule the reservation. If not present, resources are reserved for unlimited usage time.",
          "format": "date-time",
          "type": "string"
        },
        "expiryTime": {
          "description": "Indication when the VIM can release the reservation in case no allocation request against this reservation was made.",
          "format": "date-time",
          "type": "string"
        },
        "reservationId": {
          "description": "Identifier of the resource reservation.",
          "type": "string"
        },
        "reservationStatus": {
          "description": "Status of the compute resource reservation, e.g. to indicate if a reservation is being used.",
          "type": "string"
        },
        "startTime": {
          "description": "Indication when the consumption of the resources starts. If the value is 0, resources are reserved for immediate use.",
          "format": "date-time",
          "type": "string"
        },
        "virtualisationContainerReserved": {
          "description": "Information about the virtualisation container(s) that have been reserved.",
          "properties": {
            "accelerationCapability": {
              "description": "Selected acceleration capabilities (e.g. crypto, GPU) from the set of capabilities offered by the compute node acceleration resources. The cardinality can be 0, if no particular acceleration capability is provided.",
              "type": "string"
            },
            "containerId": {
              "description": "The identifier of the virtualisation container that has been reserved.",
              "type": "string"
            },
            "flavourId": {
              "description": "Identifier of the given compute flavour used to reserve the virtualisation container.",
              "items": {
                "properties": {
                  "computeAttributes": {
                    "description": "Information specifying additional attributes of the virtual compute resource that have been reserved.",
                    "properties": {
                      "accelerationCapability": {
                        "description": "Selected acceleration capabilities (e.g. crypto, GPU) from the set of capabilities offered by the compute node acceleration resources. The cardinality can be 0, if no particular acceleration capability is provided.",
                        "type": "string"
                      },
                      "cpuArchitecture": {
                        "description": "CPU architecture type. Examples are \"x86\", \"ARM\". The cardinality can be 0, if no particular CPU architecture type is provided.",
                        "type": "string"
                      },
                      "virtualCpuOversubscriptionPolicy": {
                        "description": "The CPU core oversubscription policy in terms of virtual CPU cores to physical CPU cores/threads on the platform. The cardinality can be 0, if no particular value is provided.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "accelerationCapability",
                      "cpuArchitecture",
                      "virtualCpuOversubscriptionPolicy"
                    ],
                    "type": "object"
                  },
                  "numCpuCores": {
                    "description": "Number of CPU cores that have been reserved.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "numVcInstances": {
                    "description": "Number of virtual container instances that have been reserved.",
                    "format": "int32",
                    "type": "integer"
                  },
                  "virtualMemSize": {
                    "description": "Size of virtual memory that has been reserved.",
                    "type": "number"
                  },
                  "zoneId": {
                    "description": "References the resource zone where the virtual compute resources have been reserved. Cardinality can be 0 to cover the case where reserved compute resources are not bound to a specific resource zone.",
                    "type": "string"
                  }
                },
                "required": [
                  "computeAttributes",
                  "numCpuCores",
                  "numVcInstances",
                  "virtualMemSize",
                  "zoneId"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "virtualCpu": {
              "description": "The virtual CPU(s) of the reserved virtualisation container.",
              "properties": {
                "cpuArchitecture": {
                  "description": "CPU architecture type. Examples are x86, ARM.",
                  "type": "string"
                },
                "cpuClock": {
                  "description": "Minimum CPU clock rate (e.g. in MHz) available for the virtualised CPU resources.",
                  "type": "number"
                },
                "numVirtualCpu": {
                  "description": "Number of virtual CPUs.",
                  "format": "int32",
                  "type": "integer"
                },
                "virtualCpuOversubscriptionPolicy": {
                  "description": "The CPU core oversubscription policy, e.g. the relation of virtual CPU cores to physical CPU cores/threads. The cardinality can be 0 if no policy has been defined during the allocation request.",
                  "type": "string"
                },
                "virtualCpuPinning": {
                  "description": "The virtual CPU pinning configuration for the virtualised compute resource.",
                  "properties": {
                    "cpuMap": {
                      "description": "Shows the association of virtual CPU cores to physical CPU cores.",
                      "type": "string"
                    },
                    "cpuPinningPolicy": {
                      "description": "The policy can take values of \"static\" or \"dynamic\". In case of \"static\" the virtual CPU cores have been allocated to physical CPU cores according to the rules defined in cpuPinningRules. In case of \"dynamic\" the allocation of virtual CPU cores to physical CPU cores is decided by the VIM.",
                      "type": "string"
                    },
                    "cpuPinningRules": {
                      "description": "A list of rules that should be considered during the allocation of the virtual CPUs to physical CPUs in case of \"static\" cpuPinningPolicy.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "cpuMap",
                    "cpuPinningPolicy",
                    "cpuPinningRules"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "cpuArchitecture",
                "cpuClock",
                "numVirtualCpu",
                "virtualCpuOversubscriptionPolicy",
                "virtualCpuPinning"
              ],
              "type": "object"
            },
            "virtualDisks": {
              "description": "Element with information of the virtualised storage resources attached to the reserved virtualisation container.",
              "items": {
                "properties": {
                  "flavourId": {
                    "description": "Identifier of the storage flavour used to instantiate this virtual storage.",
                    "type": "string"
                  },
                  "hostId": {
                    "description": "Identifier of the host where the virtualised storage resource is allocated. A cardinality of 0 refers to distributed storage solutions.",
                    "type": "string"
                  },
                  "metadata": {
                    "description": "List of metadata key-value pairs used by the consumer to associate meaningful metadata to the related virtualised resource.",
                    "type": "object"
                  },
                  "operationalState": {
                    "description": "Operational state of the resource.",
                    "type": "string"
                  },
                  "ownerId": {
                    "description": "Identifier of the virtualised resource that owns and uses such a virtualised storage resource. The value can be NULL if the virtualised storage is not attached yet to any other resource (e.g. a virtual machine).",
                    "type": "string"
                  },
                  "rdmaEnabled": {
                    "description": "Indicates if the storage supports RDMA.",
                    "type": "boolean"
                  },
                  "sizeOfStorage": {
                    "description": "Size of virtualised storage resource (e.g. size of volume, in GB).",
                    "type": "number"
                  },
                  "storageId": {
                    "description": "Identifier of the virtualised storage resource.",
                    "type": "string"
                  },
                  "storageName": {
                    "description": "Name of the virtualised storage resource.",
                    "type": "string"
                  },
                  "typeOfStorage": {
                    "description": "Type of virtualised storage resource (e.g. volume, object).",
                    "type": "string"
                  },
                  "zoneId": {
                    "description": "If present, it identifies the Resource Zone where the virtual storage resources have been allocated.",
                    "type": "string"
                  }
                },
                "required": [
                  "flavourId",
                  "hostId",
                  "operationalState",
                  "ownerId",
                  "sizeOfStorage",
                  "storageId",
                  "storageName",
                  "typeOfStorage",
                  "zoneId"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "virtualMemory": {
              "description": "The virtual memory of the reserved virtualisation container.",
              "properties": {
                "numaEnabled": {
                  "description": "It specifies the memory allocation to be cognisant of the relevant process/core allocation.",
                  "type": "boolean"
                },
                "virtualMemOversubscriptionPolicy": {
                  "description": "The memory core oversubscription policy in terms of virtual memory to physical memory on the platform. The cardinality can be 0 if no policy has been defined during the allocation request.",
                  "type": "string"
                },
                "virtualMemSize": {
                  "description": "Amount of virtual Memory (e.g. in MB).",
                  "type": "number"
                }
              },
              "required": [
                "numaEnabled",
                "virtualMemOversubscriptionPolicy",
                "virtualMemSize"
              ],
              "type": "object"
            },
            "virtualNetworkInterface": {
              "description": "Element with information of the virtual network interfaces of the reserved virtualisation container.",
              "items": {
                "properties": {
                  "accelerationCapability": {
                    "description": "Shows the acceleration capabilities utilized by the virtual network interface. The cardinality can be 0, if no acceleration capability is utilized.",
                    "type": "string"
                  },
                  "bandwidth": {
                    "description": "The bandwidth of the virtual network interface (in Mbps).",
                    "type": "number"
                  },
                  "ipAddress": {
                    "description": "The virtual network interface can be configured with specific IP address(es) associated to the network to be attached to. The cardinality can be 0 in the case that a network interface is created without being attached to any specific network, or when an IP address can be automatically configured, e.g. by DHCP.",
                    "type": "string"
                  },
                  "macAddress": {
                    "description": "The MAC address of the virtual network interface.",
                    "type": "string"
                  },
                  "metadata": {
                    "description": "List of metadata key-value pairs used by the consumer to associate meaningful metadata to the related virtualised resource.",
                    "type": "object"
                  },
                  "networkId": {
                    "description": "In the case when the virtual network interface is attached to the network, it identifies such a network. The cardinality can be 0 in the case that a network interface is created without being attached to any specific network.",
                    "type": "string"
                  },
                  "networkPortId": {
                    "description": "If the virtual network interface is attached to a specific network port, it identifies such a network port. The cardinality can be 0 in the case that a network interface is created without any specific network port attachment.",
                    "type": "string"
                  },
                  "operationalState": {
                    "description": "The operational state of the virtual network interface.",
                    "type": "string"
                  },
                  "ownerId": {
                    "description": "Identifier of the owner of the network interface (e.g. a virtualised compute resource). ",
                    "type": "string"
                  },
                  "resourceId": {
                    "description": "Identifier of the virtual network interface.",
                    "type": "string"
                  },
                  "typeConfiguration": {
                    "description": "Extra configuration that the virtual network interface supports based on the type of virtual network interface, including support for SR-IOV with configuration of virtual functions (VF).",
                    "type": "string"
                  },
                  "typeVirtualNic": {
                    "description": "Type of network interface. The type allows for defining how such interface is to be realized, e.g. normal virtual NIC, with direct PCI passthrough, etc.",
                    "type": "string"
                  }
                },
                "required": [
                  "accelerationCapability",
                  "bandwidth",
                  "ipAddress",
                  "macAddress",
                  "networkId",
                  "networkPortId",
                  "operationalState",
                  "ownerId",
                  "resourceId",
                  "typeConfiguration",
                  "typeVirtualNic"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "zoneId": {
              "description": "References the resource zone where the virtualisation container has been reserved. Cardinality can be 0 to cover the case where reserved network resources are not bound to a specific resource zone.",
              "type": "string"
            }
          },
          "required": [
            "accelerationCapability",
            "containerId",
            "flavourId",
            "virtualCpu",
            "virtualDisks",
            "virtualMemory",
            "virtualNetworkInterface",
            "zoneId"
          ],
          "type": "object"
        }
      },
      "required": [
        "computePoolReserved",
        "endTime",
        "expiryTime",
        "reservationId",
        "reservationStatus",
        "startTime",
        "virtualisationContainerReserved"
      ],
      "type": "object"
    },
    "ReservedVirtualNetwork": {
      "properties": {
        "endTime": {
          "description": "Indication when the reservation ends (when it is expected that the resources will no longer be needed) and used by the VIM to schedule the reservation. If not present, resources are reserved for unlimited usage time.",
          "format": "date-time",
          "type": "string"
        },
        "expiryTime": {
          "description": "Indication when the VIM can release the reservation in case no allocation request against this reservation was made.",
          "format": "date-time",
          "type": "string"
        },
        "networkAttributes": {
          "description": "Information specifying additional attributes of the network resource that has been reserved.",
          "properties": {
            "bandwidth": {
              "description": "Minimum network bitrate (in Mbps).",
              "type": "number"
            },
            "isShared": {
              "description": "It defines whether the virtualised network that has been reserved is shared among consumers.",
              "type": "boolean"
            },
            "metadata": {
              "description": "List of metadata key-value pairs used by the consumer to associate meaningful metadata to the related virtualised resource.",
              "items": {
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                },
                "required": [
                  "key",
                  "value"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "networkType": {
              "description": "The type of network that maps to the virtualised network that has been reserved. Examples are: \"local\", \"vlan\", \"vxlan\", \"gre\", etc.",
              "type": "string"
            },
            "segmentType": {
              "description": "The isolated segment for the virtualised network that has been reserved. For instance, for a \"vlan\" networkType, it corresponds to the vlan identifier; and for a \"gre\" networkType, this corresponds to a gre key.",
              "type": "string"
            }
          },
          "required": [
            "bandwidth",
            "isShared",
            "networkType",
            "segmentType"
          ],
          "type": "object"
        },
        "networkPorts": {
          "description": "List of specific network ports that have been reserved.",
          "items": {
            "properties": {
              "bandwidth": {
                "description": "The bitrate of the virtual network port (in Mbps)",
                "type": "number"
              },
              "metadata": {
                "description": "List of metadata key-value pairs used by the consumer to associate meaningful metadata to the related virtualised resource.",
                "items": {
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "value"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "portId": {
                "description": "Identifier of the network port that has been reserved.",
                "type": "string"
              },
              "portType": {
                "description": "Type of network port. Examples of types are access ports, or trunk ports (layer 1) that become transport for multiple layer 2 or layer 3 networks.",
                "type": "string"
              },
              "segmentId": {
                "description": "The isolated segment the network port belongs to. For instance, for a \"vlan\", it corresponds to the vlan identifier; and for a \"gre\", this corresponds to a gre key. The cardinality can be 0 to allow for flat networks without any specific segmentation.",
                "type": "string"
              }
            },
            "required": [
              "bandwidth",
              "portId",
              "portType",
              "segmentId"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "publicIps": {
          "description": "List of public IP addresses that have been reserved.",
          "type": "string"
        },
        "reservationId": {
          "description": "Identifier of the resource reservation.",
          "type": "string"
        },
        "reservationStatus": {
          "description": "Status of the network resource reservation, e.g. to indicate if a reservation is being used.",
          "type": "string"
        },
        "startTime": {
          "description": "Indication when the consumption of the resources starts. If the value is 0, resources are reserved for immediate use.",
          "format": "date-time",
          "type": "string"
        },
        "zoneId": {
          "description": "References the resource zone where the virtual network resources have been reserved. Cardinality can be 0 to cover the case where reserved network resources are not bound to a specific resource zone.",
          "type": "string"
        }
      },
      "required": [
        "endTime",
        "expiryTime",
        "networkAttributes",
        "networkPorts",
        "publicIps",
        "reservationId",
        "reservationStatus",
        "startTime",
        "zoneId"
      ],
      "type": "object"
    },
    "ResourceGroupIds": {
      "properties": {
        "resourceGroupId": {
          "description": "Unique identifier of the \"infrastructure resource group\", logical grouping of virtual resources assigned to a tenant within an Infrastructure Domain.",
          "type": "string"
        }
      },
      "required": [
        "resourceGroupId"
      ],
      "type": "object"
    },
    "ResourceZone": {
      "properties": {
        "metadata": {
          "description": "List of metadata key-value pairs used by the consumer to associate meaningful metadata to the related Resource Zone.",
          "type": "object"
        },
        "nfviPopId": {
          "description": "The identifier of the NFVI-PoP the Resource Zone belongs to.",
          "type": "string"
        },
        "zoneId": {
          "description": "The identifier of the Resource Zone.",
          "type": "string"
        },
        "zoneName": {
          "description": "The name of the Resource Zone.",
          "type": "string"
        },
        "zoneProperty": {
          "description": "Set of properties that define the capabilities associated to the Resource Zone. Examples of capabilities may include: support of certain compute resource types (e.g. low performance, acceleration capabilities, etc. association to certain NFVI-PoP physical segregation (e.g. different power or network sub-systems, availability of redundancy power sub-systems), etc.",
          "type": "string"
        },
        "zoneState": {
          "description": "Information about the current state of the Resource Zone, e.g. if the Resource Zone is available.",
          "type": "string"
        }
      },
      "required": [
        "nfviPopId",
        "zoneId",
        "zoneName",
        "zoneProperty",
        "zoneState"
      ],
      "type": "object"
    },
    "SoftwareImageAddQuery": {
      "properties": {
        "name": {
          "description": "The name of the software image.",
          "type": "string"
        },
        "provider": {
          "description": "The provider of the software image.",
          "type": "string"
        },
        "resourceGroupId": {
          "description": "Unique identifier of the \"infrastructure resource group\", logical grouping of virtual resources assigned to a tenant within an Infrastructure Domain.",
          "type": "string"
        },
        "softwareImage": {
          "description": "The binary software image file.",
          "type": "string"
        },
        "userMetadata": {
          "description": "User-defined metadata.",
          "items": {
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "required": [
              "key",
              "value"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "version": {
          "description": "The version of the software image.",
          "type": "string"
        },
        "visibility": {
          "description": "Controls the visibility of the image. In case of \"private\" value the image is available only for the tenant assigned to the provided resourceGroupId and the administrator tenants of the VIM while in case of \"public\" value, all tenants of the VIM can use the image.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "provider",
        "resourceGroupId",
        "softwareImage",
        "userMetadata",
        "version",
        "visibility"
      ],
      "type": "object"
    },
    "SoftwareImageInformation": {
      "properties": {
        "checksum": {
          "description": "The checksum of the software image file.",
          "type": "string"
        },
        "containerFormat": {
          "description": "The container format indicates whether the software image is in a file format that also contains metadata about the actual software.",
          "type": "string"
        },
        "createdAt": {
          "description": "The created time of this software image.",
          "type": "string"
        },
        "diskFormat": {
          "description": "The disk format of a software image is the format of the underlying disk image.",
          "type": "string"
        },
        "id": {
          "description": "The identifier of this software image.",
          "type": "string"
        },
        "minDisk": {
          "description": "The minimal Disk for this software image.",
          "type": "string"
        },
        "minRam": {
          "description": "The minimal RAM for this software image.",
          "type": "string"
        },
        "name": {
          "description": "The name of this software image.",
          "type": "string"
        },
        "provider": {
          "description": "The provider of this software image.",
          "type": "string"
        },
        "size": {
          "description": "The size of this software image.",
          "type": "string"
        },
        "status": {
          "description": "The status of this software image.",
          "type": "string"
        },
        "updatedAt": {
          "description": "The updated time of this software image.",
          "type": "string",
          "x-nullable": true
        },
        "version": {
          "description": "The version of this software image.",
          "type": "string",
          "x-nullable": true
        }
      },
      "required": [
        "checksum",
        "containerFormat",
        "createdAt",
        "diskFormat",
        "id",
        "minDisk",
        "minRam",
        "name",
        "provider",
        "size",
        "status",
        "updatedAt",
        "version"
      ],
      "type": "object"
    },
    "VirtualCompute": {
      "properties": {
        "accelerationCapability": {
          "description": "Selected acceleration capabilities (e.g. crypto, GPU) from the set of capabilities offered by the compute node acceleration resources. The cardinality can be 0, if no particular acceleration capability is provided.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "computeId": {
          "description": "Identifier of the virtualised compute resource.",
          "type": "string"
        },
        "computeName": {
          "description": "Name of the virtualised compute resource.",
          "type": "string"
        },
        "flavourId": {
          "description": "Identifier of the given compute flavour used to instantiate this virtual compute.",
          "type": "string"
        },
        "hostId": {
          "description": "Identifier of the host the virtualised compute resource is allocated on.",
          "type": "string"
        },
        "metadata": {
          "description": "List of metadata key-value pairs used by the consumer to associate meaningful metadata to the related virtualised resource.",
          "type": "object"
        },
        "operationalState": {
          "description": "Operational state of the compute resource.",
          "type": "string"
        },
        "vcImageId": {
          "description": "Identifier of the virtualisation container software image (e.g. virtual machine image). Cardinality can be 0 if an \"empty\" virtualisation container is allocated.",
          "type": "string"
        },
        "virtualCpu": {
          "description": "The virtual CPU(s) of the virtualised compute.",
          "properties": {
            "cpuArchitecture": {
              "description": "CPU architecture type. Examples are x86, ARM.",
              "type": "string"
            },
            "cpuClock": {
              "description": "Minimum CPU clock rate (e.g. in MHz) available for the virtualised CPU resources.",
              "type": "number"
            },
            "numVirtualCpu": {
              "description": "Number of virtual CPUs.",
              "format": "int32",
              "type": "integer"
            },
            "virtualCpuOversubscriptionPolicy": {
              "description": "The CPU core oversubscription policy, e.g. the relation of virtual CPU cores to physical CPU cores/threads. The cardinality can be 0 if no policy has been defined during the allocation request.",
              "type": "string"
            },
            "virtualCpuPinning": {
              "description": "The virtual CPU pinning configuration for the virtualised compute resource.",
              "properties": {
                "cpuMap": {
                  "description": "Shows the association of virtual CPU cores to physical CPU cores.",
                  "type": "string"
                },
                "cpuPinningPolicy": {
                  "description": "The policy can take values of \"static\" or \"dynamic\". In case of \"static\" the virtual CPU cores have been allocated to physical CPU cores according to the rules defined in cpuPinningRules. In case of \"dynamic\" the allocation of virtual CPU cores to physical CPU cores is decided by the VIM.",
                  "type": "string"
                },
                "cpuPinningRules": {
                  "description": "A list of rules that should be considered during the allocation of the virtual CPUs to physical CPUs in case of \"static\" cpuPinningPolicy.",
                  "type": "string"
                }
              },
              "required": [
                "cpuMap",
                "cpuPinningPolicy",
                "cpuPinningRules"
              ],
              "type": "object"
            }
          },
          "required": [
            "cpuArchitecture",
            "cpuClock",
            "numVirtualCpu",
            "virtualCpuOversubscriptionPolicy",
            "virtualCpuPinning"
          ],
          "type": "object"
        },
        "virtualDisks": {
          "description": "Element with information of the virtualised storage resources (volumes, ephemeral that are attached to the compute resource.)",
          "type": "string"
        },
        "virtualMemory": {
          "description": "The virtual memory of the compute.",
          "properties": {
            "numaEnabled": {
              "description": "It specifies the memory allocation to be cognisant of the relevant process/core allocation.",
              "type": "boolean"
            },
            "virtualMemOversubscriptionPolicy": {
              "description": "The memory core oversubscription policy in terms of virtual memory to physical memory on the platform. The cardinality can be 0 if no policy has been defined during the allocation request.",
              "type": "string"
            },
            "virtualMemSize": {
              "description": "Amount of virtual Memory (e.g. in MB).",
              "type": "number"
            }
          },
          "required": [
            "numaEnabled",
            "virtualMemOversubscriptionPolicy",
            "virtualMemSize"
          ],
          "type": "object"
        },
        "virtualNetworkInterface": {
          "description": "Element with information of the instantiated virtual network interfaces of the compute resource.",
          "items": {
            "properties": {
              "accelerationCapability": {
                "description": "Shows the acceleration capabilities utilized by the virtual network interface. The cardinality can be 0, if no acceleration capability is utilized.",
                "type": "string"
              },
              "bandwidth": {
                "description": "The bandwidth of the virtual network interface (in Mbps).",
                "type": "number"
              },
              "ipAddress": {
                "description": "The virtual network interface can be configured with specific IP address(es) associated to the network to be attached to. The cardinality can be 0 in the case that a network interface is created without being attached to any specific network, or when an IP address can be automatically configured, e.g. by DHCP.",
                "type": "string"
              },
              "macAddress": {
                "description": "The MAC address of the virtual network interface.",
                "type": "string"
              },
              "metadata": {
                "description": "List of metadata key-value pairs used by the consumer to associate meaningful metadata to the related virtualised resource.",
                "type": "object"
              },
              "networkId": {
                "description": "In the case when the virtual network interface is attached to the network, it identifies such a network. The cardinality can be 0 in the case that a network interface is created without being attached to any specific network.",
                "type": "string"
              },
              "networkPortId": {
                "description": "If the virtual network interface is attached to a specific network port, it identifies such a network port. The cardinality can be 0 in the case that a network interface is created without any specific network port attachment.",
                "type": "string"
              },
              "operationalState": {
                "description": "The operational state of the virtual network interface.",
                "type": "string"
              },
              "ownerId": {
                "description": "Identifier of the owner of the network interface (e.g. a virtualised compute resource). ",
                "type": "string"
              },
              "resourceId": {
                "description": "Identifier of the virtual network interface.",
                "type": "string"
              },
              "typeConfiguration": {
                "description": "Extra configuration that the virtual network interface supports based on the type of virtual network interface, including support for SR-IOV with configuration of virtual functions (VF).",
                "type": "string"
              },
              "typeVirtualNic": {
                "description": "Type of network interface. The type allows for defining how such interface is to be realized, e.g. normal virtual NIC, with direct PCI passthrough, etc.",
                "type": "string"
              }
            },
            "required": [
              "accelerationCapability",
              "bandwidth",
              "ipAddress",
              "macAddress",
              "networkId",
              "networkPortId",
              "operationalState",
              "ownerId",
              "resourceId",
              "typeConfiguration",
              "typeVirtualNic"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "zoneId": {
          "description": "If present, it identifies the Resource Zone where the virtual compute resources have been allocated.",
          "type": "string"
        }
      },
      "required": [
        "accelerationCapability",
        "computeId",
        "computeName",
        "flavourId",
        "hostId",
        "operationalState",
        "vcImageId",
        "virtualCpu",
        "virtualDisks",
        "virtualMemory",
        "virtualNetworkInterface",
        "zoneId"
      ],
      "type": "object"
    },
    "VirtualComputeFlavour": {
      "properties": {
        "accelerationCapability": {
          "description": "Selected acceleration capabilities (e.g. crypto, GPU) from the set of capabilities offered by the compute node acceleration resources. The cardinality can be 0, if no particular acceleration capability is requested.",
          "type": "string"
        },
        "flavourId": {
          "description": "Identifier given to the compute flavour.",
          "type": "string"
        },
        "storageAttributes": {
          "description": "Element containing information about the size of virtualised storage resources (e.g. size of volume, in GB), the type of storage (e.g. volume, object).",
          "items": {
            "properties": {
              "flavourId": {
                "description": "Identifier of the storage flavour used to instantiate this virtual storage.",
                "type": "string"
              },
              "hostId": {
                "description": "Identifier of the host where the virtualised storage resource is allocated. A cardinality of 0 refers to distributed storage solutions.",
                "type": "string"
              },
              "metadata": {
                "description": "List of metadata key-value pairs used by the consumer to associate meaningful metadata to the related virtualised resource.",
                "type": "object"
              },
              "operationalState": {
                "description": "Operational state of the resource.",
                "type": "string"
              },
              "ownerId": {
                "description": "Identifier of the virtualised resource that owns and uses such a virtualised storage resource. The value can be NULL if the virtualised storage is not attached yet to any other resource (e.g. a virtual machine).",
                "type": "string"
              },
              "rdmaEnabled": {
                "description": "Indicates if the storage supports RDMA.",
                "type": "boolean"
              },
              "sizeOfStorage": {
                "description": "Size of virtualised storage resource (e.g. size of volume, in GB).",
                "type": "number"
              },
              "storageId": {
                "description": "Identifier of the virtualised storage resource.",
                "type": "string"
              },
              "storageName": {
                "description": "Name of the virtualised storage resource.",
                "type": "string"
              },
              "typeOfStorage": {
                "description": "Type of virtualised storage resource (e.g. volume, object).",
                "type": "string"
              },
              "zoneId": {
                "description": "If present, it identifies the Resource Zone where the virtual storage resources have been allocated.",
                "type": "string"
              }
            },
            "required": [
              "flavourId",
              "hostId",
              "operationalState",
              "ownerId",
              "sizeOfStorage",
              "storageId",
              "storageName",
              "typeOfStorage",
              "zoneId"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "virtualCpu": {
          "description": "The virtual CPU(s) of the virtualised compute.",
          "items": {
            "properties": {
              "cpuArchitecture": {
                "description": "CPU architecture type. Examples are x86, ARM.",
                "type": "string"
              },
              "cpuClock": {
                "description": "Minimum CPU clock rate (e.g. in MHz) available for the virtualised CPU resources.",
                "type": "number"
              },
              "numVirtualCpu": {
                "description": "Number of virtual CPUs.",
                "format": "int32",
                "type": "integer"
              },
              "virtualCpuOversubscriptionPolicy": {
                "description": "The CPU core oversubscription policy, e.g. the relation of virtual CPU cores to physical CPU cores/threads. The cardinality can be 0 if no policy has been defined during the allocation request.",
                "type": "string"
              },
              "virtualCpuPinning": {
                "description": "The virtual CPU pinning configuration for the virtualised compute resource.",
                "properties": {
                  "cpuMap": {
                    "description": "Shows the association of virtual CPU cores to physical CPU cores.",
                    "type": "string"
                  },
                  "cpuPinningPolicy": {
                    "description": "The policy can take values of \"static\" or \"dynamic\". In case of \"static\" the virtual CPU cores have been allocated to physical CPU cores according to the rules defined in cpuPinningRules. In case of \"dynamic\" the allocation of virtual CPU cores to physical CPU cores is decided by the VIM.",
                    "type": "string"
                  },
                  "cpuPinningRules": {
                    "description": "A list of rules that should be considered during the allocation of the virtual CPUs to physical CPUs in case of \"static\" cpuPinningPolicy.",
                    "type": "string"
                  }
                },
                "required": [
                  "cpuMap",
                  "cpuPinningPolicy",
                  "cpuPinningRules"
                ],
                "type": "object"
              }
            },
            "required": [
              "cpuArchitecture",
              "cpuClock",
              "numVirtualCpu",
              "virtualCpuOversubscriptionPolicy",
              "virtualCpuPinning"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "virtualMemory": {
          "description": "The virtual memory of the virtualised compute.",
          "properties": {
            "numaEnabled": {
              "description": "It specifies the memory allocation to be cognisant of the relevant process/core allocation.",
              "type": "boolean"
            },
            "virtualMemOversubscriptionPolicy": {
              "description": "The memory core oversubscription policy in terms of virtual memory to physical memory on the platform. The cardinality can be 0 if no policy has been defined during the allocation request.",
              "type": "string"
            },
            "virtualMemSize": {
              "description": "Amount of virtual Memory (e.g. in MB).",
              "type": "number"
            }
          },
          "required": [
            "numaEnabled",
            "virtualMemOversubscriptionPolicy",
            "virtualMemSize"
          ],
          "type": "object"
        },
        "virtualNetworkInterface": {
          "description": "The virtual network interfaces of the virtualised compute.",
          "properties": {
            "accelerationCapability": {
              "description": "Shows the acceleration capabilities utilized by the virtual network interface. The cardinality can be 0, if no acceleration capability is utilized.",
              "type": "string"
            },
            "bandwidth": {
              "description": "The bandwidth of the virtual network interface (in Mbps).",
              "type": "number"
            },
            "ipAddress": {
              "description": "The virtual network interface can be configured with specific IP address(es) associated to the network to be attached to. The cardinality can be 0 in the case that a network interface is created without being attached to any specific network, or when an IP address can be automatically configured, e.g. by DHCP.",
              "type": "string"
            },
            "macAddress": {
              "description": "The MAC address of the virtual network interface.",
              "type": "string"
            },
            "metadata": {
              "description": "List of metadata key-value pairs used by the consumer to associate meaningful metadata to the related virtualised resource.",
              "type": "object"
            },
            "networkId": {
              "description": "In the case when the virtual network interface is attached to the network, it identifies such a network. The cardinality can be 0 in the case that a network interface is created without being attached to any specific network.",
              "type": "string"
            },
            "networkPortId": {
              "description": "If the virtual network interface is attached to a specific network port, it identifies such a network port. The cardinality can be 0 in the case that a network interface is created without any specific network port attachment.",
              "type": "string"
            },
            "operationalState": {
              "description": "The operational state of the virtual network interface.",
              "type": "string"
            },
            "ownerId": {
              "description": "Identifier of the owner of the network interface (e.g. a virtualised compute resource). ",
              "type": "string"
            },
            "resourceId": {
              "description": "Identifier of the virtual network interface.",
              "type": "string"
            },
            "typeConfiguration": {
              "description": "Extra configuration that the virtual network interface supports based on the type of virtual network interface, including support for SR-IOV with configuration of virtual functions (VF).",
              "type": "string"
            },
            "typeVirtualNic": {
              "description": "Type of network interface. The type allows for defining how such interface is to be realized, e.g. normal virtual NIC, with direct PCI passthrough, etc.",
              "type": "string"
            }
          },
          "required": [
            "accelerationCapability",
            "bandwidth",
            "ipAddress",
            "macAddress",
            "networkId",
            "networkPortId",
            "operationalState",
            "ownerId",
            "resourceId",
            "typeConfiguration",
            "typeVirtualNic"
          ],
          "type": "object"
        }
      },
      "required": [
        "accelerationCapability",
        "flavourId",
        "storageAttributes",
        "virtualCpu",
        "virtualMemory",
        "virtualNetworkInterface"
      ],
      "type": "object"
    },
    "VirtualComputeQuota": {
      "properties": {
        "numVCPUs": {
          "description": "Number of CPU cores that have been restricted by the quota. The cardinality can be 0 if no specific number of CPU cores has been requested to be restricted by the quota.",
          "format": "int32",
          "type": "integer"
        },
        "numVcInstances": {
          "description": "Number of virtualisation container instances that have been restricted by the quota. The cardinality can be 0 if no specific number of CPU cores has been requested to be restricted by the quota.",
          "format": "int32",
          "type": "integer"
        },
        "resourceGroupId": {
          "description": "Unique identifier of the \"infrastructure resource group\", logical grouping of virtual resources assigned to a tenant within an Infrastructure Domain.",
          "type": "string"
        },
        "virtualMemSize": {
          "description": "Size of virtual memory that has been restricted by the quota. The cardinality can be 0 if no specific number of CPU cores has been requested to be restricted by the quota.",
          "type": "number"
        }
      },
      "required": [
        "numVCPUs",
        "numVcInstances",
        "resourceGroupId",
        "virtualMemSize"
      ],
      "type": "object"
    },
    "VirtualComputeResourceInformation": {
      "properties": {
        "accelerationCapability": {
          "description": "Acceleration capabilities (e.g. crypto, GPU) for the consumable virtualised compute resources from the set of capabilities offered by the compute node acceleration resources. The cardinality can be 0, if no particular acceleration capability is provided.",
          "type": "string"
        },
        "computeResourceTypeId": {
          "description": "Identifier of the consumable virtualised compute resource type.",
          "type": "string"
        },
        "virtualCPU": {
          "description": "It defines the virtual CPU(s) characteristics of the consumable virtualised compute resource.",
          "properties": {
            "cpuArchitecture": {
              "description": "CPU architecture type. Examples are x86, ARM.",
              "type": "string"
            },
            "cpuClock": {
              "description": "Minimum CPU clock rate (e.g. in MHz) available for the virtualised CPU resources.",
              "type": "number"
            },
            "numVirtualCpu": {
              "description": "Number of virtual CPUs. Cardinality \"1\" covers the case where a specific configuration for the consumable resource is advertised.",
              "type": "number"
            },
            "virtualCpuOversubscriptionPolicy": {
              "description": "The CPU core oversubscription policy, e.g. the relation of virtual CPU cores to physical CPU cores/threads. The cardinality can be 0 if no concrete policy is defined.",
              "type": "string"
            },
            "virtualCpuPinningSupported": {
              "description": "It defines whether CPU pinning capability is available on the consumable virtualised compute resource.",
              "type": "boolean"
            }
          },
          "required": [
            "cpuArchitecture",
            "cpuClock",
            "numVirtualCpu",
            "virtualCpuOversubscriptionPolicy",
            "virtualCpuPinningSupported"
          ],
          "type": "object"
        },
        "virtualMemory": {
          "description": "It defines the virtual memory characteristics of the consumable virtualised compute resource.",
          "properties": {
            "numaSupported": {
              "description": "It specifies if the memory allocation can be cognisant of the relevant process/core allocation.",
              "type": "boolean"
            },
            "virtualMemOversubscriptionPolicy": {
              "description": "The memory core oversubscription policy in terms of virtual memory to physical memory on the platform. The cardinality can be 0 if no concrete policy is defined.",
              "type": "string"
            },
            "virtualMemSize": {
              "description": "Amount of virtual memory (e.g. in MB). Cardinality \"1\" covers the case where a specific configuration for the consumable resource is advertised.",
              "type": "number"
            }
          },
          "required": [
            "numaSupported",
            "virtualMemOversubscriptionPolicy",
            "virtualMemSize"
          ],
          "type": "object"
        }
      },
      "required": [
        "accelerationCapability",
        "computeResourceTypeId",
        "virtualCPU",
        "virtualMemory"
      ],
      "type": "object"
    },
    "VirtualNetwork": {
      "properties": {
        "bandwidth": {
          "description": "Minimum network bandwidth (in Mbps).",
          "type": "number"
        },
        "isShared": {
          "description": "It defines whether the virtualised network is shared among consumers.",
          "type": "boolean"
        },
        "metadata": {
          "description": "List of metadata key-value pairs used by the consumer to associate meaningful metadata to the related virtualised ressource.",
          "type": "object"
        },
        "networkPort": {
          "description": "Element providing information of an instantiated virtual network port.",
          "items": {
            "properties": {
              "attachedResourceId": {
                "description": "Identifier of the attached resource to the network port (e.g. a virtualised compute resource, or identifier of the virtual network interface). The cardinality can be \"0\" if there is no specific resource connected to the network port.",
                "type": "string"
              },
              "bandwidth": {
                "description": "The bandwidth of the virtual network port (in Mbps). Cardinality can be \"0\" for virtual network ports without any specific allocated bandwidth.",
                "type": "number"
              },
              "metadata": {
                "description": "List of metadata key-value pairs used by the consumer to associate meaningful metadata to the related virtualised ressource.",
                "type": "object"
              },
              "networkId": {
                "description": "Identifier of the network that the port belongs to. When creating a port, such port needs to be part of a network.",
                "type": "string"
              },
              "operationalState": {
                "description": "The operational state of the virtual network port.",
                "type": "string"
              },
              "portType": {
                "description": "Type of network port. Examples of types are access ports (layer 2 or 3), or trunk ports (layer 1) that become transport for multiple layer 2 or layer 3 networks.",
                "type": "string"
              },
              "resourceId": {
                "description": "Identifier of the virtual network port.",
                "type": "string"
              },
              "segmentId": {
                "description": "The isolated segment the network port belongs to. For instance, for a \"vlan\", it corresponds to the vlan identifier; and for a \"gre\", this corresponds to a gre key. The cardinality can be \"0\" for flat networks without any specific segmentation.",
                "type": "string"
              }
            },
            "required": [
              "attachedResourceId",
              "bandwidth",
              "networkId",
              "operationalState",
              "portType",
              "resourceId",
              "segmentId"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "networkQoS": {
          "description": "Element providing information about Quality of Service attributes that the network shall support. The cardinality can be \"0\" to allow for networks without any specified QoS requirements.",
          "items": {
            "properties": {
              "qosName": {
                "description": "Name given to the QoS parameter.",
                "type": "string"
              },
              "qosValue": {
                "description": "Value of the QoS parameter.",
                "type": "string"
              }
            },
            "required": [
              "qosName",
              "qosValue"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "networkResourceId": {
          "description": "Identifier of the virtualised network resource.",
          "type": "string"
        },
        "networkResourceName": {
          "description": "Name of the virtualised network resource.",
          "type": "string"
        },
        "networkType": {
          "description": "The type of network that maps to the virtualised network. This list is extensible. Examples are: \"local\", \"vlan\", \"vxlan\", \"gre\", \"l3-vpn\", etc. The cardinality can be \"0\" to cover the case where this attribute is not required to create the virtualised network.",
          "type": "string"
        },
        "operationalState": {
          "description": "The operational state of the virtualised network.",
          "type": "string"
        },
        "segmentType": {
          "description": "The isolated segment for the virtualised network. For instance, for a \"vlan\" networkType, it corresponds to the vlan identifier; and for a \"gre\" networkType, this corresponds to a gre key. The cardinality can be \"0\" to allow for flat networks without any specific segmentation.",
          "type": "string"
        },
        "sharingCriteria": {
          "description": "Only present for shared networks. Indicate the sharing criteria for this network. This criteria might be a list of authorized consumers.",
          "type": "string"
        },
        "subnet": {
          "description": "Only present if the network provides layer 3 connectivity.",
          "type": "string"
        },
        "zoneId": {
          "description": "If present, it identifies the Resource Zone where the virtual network resources have been allocated.",
          "type": "string"
        }
      },
      "required": [
        "bandwidth",
        "isShared",
        "networkPort",
        "networkQoS",
        "networkResourceId",
        "networkResourceName",
        "networkType",
        "operationalState",
        "segmentType",
        "sharingCriteria",
        "subnet",
        "zoneId"
      ],
      "type": "object"
    },
    "VirtualNetworkQuota": {
      "properties": {
        "numPorts": {
          "description": "Number of ports that have been restricted by the quota. The cardinality can be 0 if no specific number of ports has been requested to be restricted by the quota.",
          "format": "int32",
          "type": "integer"
        },
        "numPublicIps": {
          "description": "Number of public IP addresses that have been restricted by the quota. The cardinality can be 0 if no specific number of public IP addresses has been requested to be restricted by the quota.",
          "format": "int32",
          "type": "integer"
        },
        "numSubnets": {
          "description": "Number of subnets that have been restricted by the quota. The cardinality can be 0 if no specific number of subnets has been requested to be restricted by the quota.",
          "format": "int32",
          "type": "integer"
        },
        "resourceGroupId": {
          "description": "Unique identifier of the \"infrastructure resource group\", logical grouping of virtual resources assigned to a tenant within an Infrastructure Domain.",
          "type": "string"
        }
      },
      "required": [
        "numPorts",
        "numPublicIps",
        "numSubnets",
        "resourceGroupId"
      ],
      "type": "object"
    },
    "VirtualNetworkResourceInformation": {
      "properties": {
        "bandwidth": {
          "description": "Minimum network bandwidth (in Mbps).",
          "type": "number"
        },
        "networkQoS": {
          "description": "Element providing information about Quality of Service attributes that the network shall support.",
          "items": {
            "properties": {
              "qosName": {
                "description": "Name given to the QoS parameter.",
                "type": "string"
              },
              "qosValue": {
                "description": "Value of the QoS parameter.",
                "type": "string"
              }
            },
            "required": [
              "qosName",
              "qosValue"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "networkResourceTypeId": {
          "description": "Identifier of the network resource type.",
          "type": "string"
        },
        "networkType": {
          "description": "The type of network that maps to the virtualised network. Examples are: \"local\", \"vlan\", \"vxlan\", \"gre\", etc.",
          "type": "string"
        }
      },
      "required": [
        "bandwidth",
        "networkQoS",
        "networkResourceTypeId",
        "networkType"
      ],
      "type": "object"
    }
  },
  "info": {
    "description": "VIM Manager API based on ETSI GS NFV-IFA 005 V2.3.1",
    "termsOfService": "/tos",
    "title": "VIM Manager API",
    "version": "0.0.1"
  },
  "paths": {
    "/healthz": {
      "get": {
        "description": "<br/>",
        "responses": {
          "200": {
            "description": "Healthcheck"
          }
        },
        "summary": "Healthcheck"
      }
    },
    "/v1/compute_resources": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "TerminateComputeResources",
        "parameters": [
          {
            "description": "Identifier(s) of the virtualised compute resource(s) to be terminated.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "computeId",
            "required": true,
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Identifier(s) of the virtualised compute resource(s) successfully terminated.",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "virtualisedComputeResources"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "allocateComputeResources",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AllocateComputeRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Element containing information of the newly instantiated virtualised compute resource.",
            "schema": {
              "$ref": "#/definitions/VirtualCompute"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "software image already added"
          }
        },
        "tags": [
          "virtualisedComputeResources"
        ]
      }
    },
    "/v1/compute_resources/capacities/query": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "queryComputeCapacity",
        "parameters": [
          {
            "in": "body",
            "name": "QueryComputeCapacityRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryComputeCapacityRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The capacity during the requested time period. The scope is according to parameter zoneId of the request during the time interval.",
            "schema": {
              "$ref": "#/definitions/CapacityInformation"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "virtualisedComputeResources"
        ]
      }
    },
    "/v1/compute_resources/flavours": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "createFlavour",
        "parameters": [
          {
            "in": "body",
            "name": "Flavour",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VirtualComputeFlavour"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Identifier of the created Compute Flavour.",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "flavour already added"
          }
        },
        "tags": [
          "virtualisedComputeResources"
        ]
      }
    },
    "/v1/compute_resources/flavours/query": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "queryFlavors",
        "parameters": [
          {
            "description": "Query filter based on e.g. name, identifier, meta-data information or status information, expressing the type of information to be retrieved. It can also be used to specify one or more Compute Flavours to be queried by providing their identifiers.",
            "in": "body",
            "name": "queryComputeFlavourFilter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Filter"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A list of Compute Flavours matching the query.",
            "schema": {
              "items": {
                "$ref": "#/definitions/VirtualComputeFlavour"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "virtualisedComputeResources"
        ]
      }
    },
    "/v1/compute_resources/flavours/{id}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "deleteFlavours",
        "parameters": [
          {
            "description": "Identifier of the Compute Flavour to be deleted.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "No output parameters"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "virtualisedComputeResources"
        ]
      }
    },
    "/v1/compute_resources/information/query": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "queryComputeInformation",
        "parameters": [
          {
            "description": "Filter defining the information of consumable virtualised resources on which the query applies.",
            "in": "body",
            "name": "informationQueryFilter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Filter"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Virtualised compute resource information in the VIM that satisfies the query condition.",
            "schema": {
              "items": {
                "$ref": "#/definitions/VirtualComputeResourceInformation"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "virtualisedComputeResources"
        ]
      }
    },
    "/v1/compute_resources/nfvi_pop_compute_information/query": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "queryNFVIPoPComputeInformation",
        "parameters": [
          {
            "description": "Input filter for selecting information to query.",
            "in": "body",
            "name": "filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Filter"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The filtered information that has been retrieved. The cardinality can be 0 if no matching information exist.",
            "schema": {
              "items": {
                "$ref": "#/definitions/NfviPop"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "virtualisedComputeResources"
        ]
      }
    },
    "/v1/compute_resources/query": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "queryComputeResources",
        "parameters": [
          {
            "description": "Query filter based on e.g. name, identifier, meta-data information or status information, expressing the type of information to be retrieved. It can also be used to specify one or more resources to be queried by providing their identifiers.",
            "in": "body",
            "name": "queryComputeFilter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Filter"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Element containing information about the virtual compute resource(s) matching the filter. The cardinality can be 0 if no matching compute resources exist.",
            "schema": {
              "items": {
                "$ref": "#/definitions/VirtualCompute"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "virtualisedComputeResources"
        ]
      }
    },
    "/v1/compute_resources/resource_zones/query": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "queryComputeResourceZone",
        "parameters": [
          {
            "description": "Input filter for selecting information to query. For instance, based on identifier of the Resource Zone, identifier of the NFVI-PoP, properties of the Resource Zone, or other meta-data.",
            "in": "body",
            "name": "filter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Filter"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The filtered information that has been retrieved about the Resource Zone. The cardinality can be 0 if no matching information exist.",
            "schema": {
              "items": {
                "$ref": "#/definitions/ResourceZone"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "virtualisedComputeResources"
        ]
      }
    },
    "/v1/information/query": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "queryNetworkInformation",
        "parameters": [
          {
            "description": "Filter defining the information of consumable virtualised resources on which the query applies.",
            "in": "body",
            "name": "informationQueryFilter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Filter"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Virtualised network resource information in the VIM that satisfies the query condition.",
            "schema": {
              "items": {
                "$ref": "#/definitions/VirtualNetworkResourceInformation"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "virtualisedNetworkResourcesInformation"
        ]
      }
    },
    "/v1/network_resources": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "terminateNetworks",
        "parameters": [
          {
            "description": "Identifier of the virtualised network resource(s) to be terminated.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "networkResourceId",
            "required": true,
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Identifier(s) of the virtualised network resource(s) successfully terminated.",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "virtualisedNetworkResources"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "allocateNetwork",
        "parameters": [
          {
            "in": "body",
            "name": "params",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AllocateNetworkRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Identifier of the created Compute Flavour.",
            "schema": {
              "$ref": "#/definitions/AllocateNetworkResult"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "network already added"
          }
        },
        "tags": [
          "virtualisedNetworkResources"
        ]
      }
    },
    "/v1/network_resources/capacities/query": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "queryNetworkCapacity",
        "parameters": [
          {
            "in": "body",
            "name": "QueryNetworkCapacityRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryNetworkCapacityRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The capacity during the requested time period. The scope is according to parameter zoneId of the request during the time interval.",
            "schema": {
              "$ref": "#/definitions/CapacityInformation"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "virtualisedNetworkResources"
        ]
      }
    },
    "/v1/network_resources/nfvi-pop-network-information/query": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "queryNFVIPoPNetworkInformation",
        "parameters": [
          {
            "description": "Input filter for selecting information to query.",
            "in": "body",
            "name": "NfviPopNetworkInformationRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Filter"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The filtered information that has been retrieved. The cardinality can be 0 if no matching information exist.",
            "schema": {
              "items": {
                "$ref": "#/definitions/NfviPop"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "virtualisedNetworkResources"
        ]
      }
    },
    "/v1/network_resources/query": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "queryNetworks",
        "parameters": [
          {
            "description": "Query filter based on e.g. name, identifier, meta-data information or status information, expressing the type of information to be retrieved. It can also be used to specify one or more resources to be queried by providing their identifiers.",
            "in": "body",
            "name": "queryNetworkFilter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Filter"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Element containing information about the virtual network resource(s) matching the filter. The cardinality can be 0 if no matching network resources exist.",
            "schema": {
              "items": {
                "$ref": "#/definitions/VirtualNetwork"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "virtualisedNetworkResources"
        ]
      }
    },
    "/v1/quotas/compute_resources": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "terminateComputeQuota",
        "parameters": [
          {
            "description": "Unique identifier of the \"infrastructure resource group\", logical grouping of virtual resources assigned to a tenant within an Infrastructure Domain.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "resourceGroupId",
            "required": true,
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Unique identifier of the \"infrastructure resource group\", logical grouping of virtual resources assigned to a tenant within an Infrastructure Domain.",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "virtualisedResourceQuota"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "createComputeQuota",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateComputeResourceQuotaRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Element containing information about the quota resource.",
            "schema": {
              "$ref": "#/definitions/VirtualComputeQuota"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "virtualisedResourceQuota"
        ]
      }
    },
    "/v1/quotas/compute_resources/query": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "queryComputeQuota",
        "parameters": [
          {
            "description": "Query filter based on e.g. name, identifier, meta-data information or status information expressing the type of information to be retrieved. It can also be used to specify one or more quotas to be queried by providing their identifiers.",
            "in": "body",
            "name": "queryQuotaFilter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Filter"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Element containing information about the quota resource. The cardinality can be 0 if no matching quota exists.",
            "schema": {
              "items": {
                "$ref": "#/definitions/VirtualComputeQuota"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "virtualisedResourceQuota"
        ]
      }
    },
    "/v1/quotas/network_resources": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "terminateNetworkQuota",
        "parameters": [
          {
            "description": "Unique identifier of the \"infrastructure resource group\", logical grouping of virtual resources assigned to a tenant within an Infrastructure Domain.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "resourceGroupId",
            "required": true,
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Unique identifier of the \"infrastructure resource group\", logical grouping of virtual resources assigned to a tenant within an Infrastructure Domain.",
            "schema": {
              "$ref": "#/definitions/ResourceGroupIds"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "virtualisedResourceQuota"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "createNetworkQuota",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateNetworkResourceQuotaRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Element containing information about the quota resource.",
            "schema": {
              "$ref": "#/definitions/VirtualNetworkQuota"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": ""
          }
        },
        "tags": [
          "virtualisedResourceQuota"
        ]
      }
    },
    "/v1/quotas/network_resources/query": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "queryNetworkQuota",
        "parameters": [
          {
            "description": "Query filter based on e.g. name, identifier, meta-data information or status information, expressing the type of information to be retrieved. It can also be used to specify one or more quotas to be queried by providing their identifiers.",
            "in": "body",
            "name": "queryQuotaFilter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Filter"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Element containing information about the quota resource(s) matching the filter. The cardinality can be 0 if no matching quota exists.",
            "schema": {
              "items": {
                "$ref": "#/definitions/VirtualNetworkQuota"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "virtualisedResourceQuota"
        ]
      }
    },
    "/v1/reservations/compute_resources": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "terminateComputeReservation",
        "parameters": [
          {
            "description": "Identifier of the resource reservation(s) to terminate.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "reservationId",
            "required": true,
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Identifier of the resource reservation(s) successfully terminated.",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "virtualisedResourceReservation"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "createComputeReservation",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateComputeResourceReservationRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Element containing information about the reserved resource.",
            "schema": {
              "$ref": "#/definitions/ReservedVirtualCompute"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": ""
          }
        },
        "tags": [
          "virtualisedResourceReservation"
        ]
      }
    },
    "/v1/reservations/compute_resources/query": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "queryComputeReservation",
        "parameters": [
          {
            "description": "Query filter based on e.g. name, identifier, meta-data information or status information, expressing the type of information to be retrieved. It can also be used to specify one or more resources to be queried by providing their identifiers.",
            "in": "body",
            "name": "queryComputeFilter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Filter"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Element containing information about the reserved resource. Cardinality is 0 if the query did not return any result.",
            "schema": {
              "items": {
                "$ref": "#/definitions/ReservedVirtualCompute"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "virtualisedResourceReservation"
        ]
      }
    },
    "/v1/reservations/network_resources": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "terminateNetworkReservation",
        "parameters": [
          {
            "description": "Identifier of the resource reservation(s) to terminate.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "reservationId",
            "required": true,
            "type": "array"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Identifier of the resource reservation(s) successfully terminated.",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "virtualisedResourceReservation"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "createNetworkReservation",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateNetworkResourceReservationRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Element containing information about the reserved resource.",
            "schema": {
              "$ref": "#/definitions/ReservedVirtualNetwork"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": ""
          }
        },
        "tags": [
          "virtualisedResourceReservation"
        ]
      }
    },
    "/v1/reservations/network_resources/query": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "queryNetworkReservation",
        "parameters": [
          {
            "description": "Query filter based on e.g. name, identifier, meta-data information or status information, expressing the type of information to be retrieved. It can also be used to specify one or more resources to be queried by providing their identifiers.",
            "in": "body",
            "name": "queryComputeFilter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Filter"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Element containing information about the reserved resource. Cardinality is 0 if the query did not return any result.",
            "schema": {
              "items": {
                "$ref": "#/definitions/ReservedVirtualNetwork"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "virtualisedResourceReservation"
        ]
      }
    },
    "/v1/software_images": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "addSoftwareImage",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SoftwareImageAddQuery"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Metadata about the Software Image that has been added.",
            "schema": {
              "$ref": "#/definitions/SoftwareImageInformation"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "software image already added"
          }
        },
        "tags": [
          "softwareImages"
        ]
      }
    },
    "/v1/software_images/query": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "operationId": "querySoftwareImages",
        "parameters": [
          {
            "description": "The filter is used to select the software image instances on which this operation is to act.",
            "in": "body",
            "name": "imageQueryFilter",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Filter"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The information of all software images matching the query.",
            "schema": {
              "items": {
                "$ref": "#/definitions/SoftwareImageInformation"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "softwareImages"
        ]
      }
    },
    "/v1/software_images/{id}": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "operationId": "deleteSoftwareImage",
        "parameters": [
          {
            "description": "The identifier of the software image to be deleted.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The identifier of the software image successfully deleted.",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        },
        "tags": [
          "softwareImages"
        ]
      },
      "get": {
        "consumes": [
          "application/json"
        ],
        "operationId": "querySoftwareImage",
        "parameters": [
          {
            "description": "The identifier of the software image to be queried.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The information of the software image matching the query.",
            "schema": {
              "$ref": "#/definitions/SoftwareImageInformation"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "tags": [
          "softwareImages"
        ]
      }
    }
  },
  "swagger": "2.0"
}